[2015-05-19 16:10:35,413] DEBUG Checking query: 
(
  arrayidx!=<nullptr>
)
in: 
(
  %0=alloca(100,(100 * 1)),
  arrayidx=gep(%0,0+0+101),
  *arrayidx=0
)
[2015-05-19 16:10:35,574] DEBUG Checking state for sanity... OK
[2015-05-19 16:10:35,581] DEBUG   Query: 
(= arrayidx #x00000000) assuming true
  State: 
(and (= %0 #x00010001) (= arrayidx (bvadd #x00000065 %0))) assuming (not (or (= %0 #xffffff9a) (= %0 #xffffff9b)))
[2015-05-19 16:10:35,629] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:10:35,631] DEBUG Checking query: 
(
  (bound(%0) +> (arrayidx - %0))=true
)
in: 
(
  %0=alloca(100,(100 * 1)),
  arrayidx=gep(%0,0+0+101)
)
[2015-05-19 16:10:35,655] DEBUG Checking state for sanity... OK
[2015-05-19 16:10:35,657] DEBUG   Query: 
(let ((a!1 (ite (and (not (= %0 #x00010001)) (not (= %0 #x00000000)))
                |$$__base_free__$$(%0)|
                %0))
      (a!2 (ite (and (not (= %0 #x00010001)) (not (= %0 #x00000000)))
                (= |$$__base_free__$$(%0)| #x00010001)
                (= %0 #x00010001)))
      (a!3 (ite (and (not (= %0 #x00010001)) (not (= %0 #x00000000)))
                (= |$$__base_free__$$(%0)| #x00000000)
                (= %0 #x00000000))))
(let ((a!4 (ite (bvule (ite a!2 #x00000064 (ite a!3 #xffffffff #x00000000))
                       (bvadd %0 (bvmul #xffffffff a!1)))
                #x00000000
                (bvadd (ite a!2 #x00000064 (ite a!3 #xffffffff #x00000000))
                       (bvmul #xffffffff %0)
                       a!1))))
  (bvule (ite (= a!1 %0)
              (ite a!2 #x00000064 (ite a!3 #xffffffff #x00000000))
              a!4)
         (bvadd arrayidx (bvmul #xffffffff %0))))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(%0)| #x00010001))
                     (not (= |$$__base_free__$$(%0)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(%0)|))
                                  (bvule forall_bound_0 %0)))))
               (or a!1
                   (and (not (= forall_bound_0 #x00010001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(%0)| %0) a!1 a!2))
  State: 
(and (= %0 #x00010001) (= arrayidx (bvadd #x00000065 %0))) assuming (not (or (= %0 #xffffff9a) (= %0 #xffffff9b)))
[2015-05-19 16:10:35,670] DEBUG Acquired result: sat
With:
(declare-fun |$$__base_free__$$(%0)| () (_ BitVec 32))
  #x00010001
(declare-fun $CHECK$ () Bool)
  true
(declare-fun %0 () (_ BitVec 32))
  #x00010001
(declare-fun arrayidx () (_ BitVec 32))
  #x00010066
[2015-05-19 16:10:35,670] DEBUG CEX: (
  
)
[2015-05-19 16:28:08,750] DEBUG Checking query: 
(
  arrayidx!=<nullptr>
)
in: 
(
  %0=alloca(100,(100 * 1)),
  arrayidx=gep(%0,0+0+101),
  *arrayidx=0
)
[2015-05-19 16:28:08,754] DEBUG Checking state for sanity... OK
[2015-05-19 16:28:08,756] DEBUG   Query: 
(= arrayidx #x00000000) assuming true
  State: 
(and (= %0 #x00010001) (= arrayidx (bvadd #x00000065 %0))) assuming (not (or (= %0 #xffffff9a) (= %0 #xffffff9b)))
[2015-05-19 16:28:08,757] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:28:08,761] DEBUG Checking query: 
(
  (bound(%0) +> (arrayidx - %0))=true
)
in: 
(
  %0=alloca(100,(100 * 1)),
  arrayidx=gep(%0,0+0+101)
)
[2015-05-19 16:28:08,765] DEBUG Checking state for sanity... OK
[2015-05-19 16:28:08,770] DEBUG   Query: 
(let ((a!1 (ite (and (not (= %0 #x00010001)) (not (= %0 #x00000000)))
                |$$__base_free__$$(%0)|
                %0))
      (a!2 (ite (and (not (= %0 #x00010001)) (not (= %0 #x00000000)))
                (= |$$__base_free__$$(%0)| #x00010001)
                (= %0 #x00010001)))
      (a!3 (ite (and (not (= %0 #x00010001)) (not (= %0 #x00000000)))
                (= |$$__base_free__$$(%0)| #x00000000)
                (= %0 #x00000000))))
(let ((a!4 (ite (bvule (ite a!2 #x00000064 (ite a!3 #xffffffff #x00000000))
                       (bvadd %0 (bvmul #xffffffff a!1)))
                #x00000000
                (bvadd (ite a!2 #x00000064 (ite a!3 #xffffffff #x00000000))
                       (bvmul #xffffffff %0)
                       a!1))))
  (bvule (ite (= a!1 %0)
              (ite a!2 #x00000064 (ite a!3 #xffffffff #x00000000))
              a!4)
         (bvadd arrayidx (bvmul #xffffffff %0))))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(%0)| #x00010001))
                     (not (= |$$__base_free__$$(%0)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(%0)|))
                                  (bvule forall_bound_0 %0)))))
               (or a!1
                   (and (not (= forall_bound_0 #x00010001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(%0)| %0) a!1 a!2))
  State: 
(and (= %0 #x00010001) (= arrayidx (bvadd #x00000065 %0))) assuming (not (or (= %0 #xffffff9a) (= %0 #xffffff9b)))
[2015-05-19 16:28:08,774] DEBUG Acquired result: sat
With:
(declare-fun |$$__base_free__$$(%0)| () (_ BitVec 32))
  #x00010001
(declare-fun $CHECK$ () Bool)
  true
(declare-fun %0 () (_ BitVec 32))
  #x00010001
(declare-fun arrayidx () (_ BitVec 32))
  #x00010066
[2015-05-19 16:28:08,774] DEBUG CEX: (
  
)
[2015-05-19 16:31:50,839] DEBUG Checking query: 
(
  arrayidx!=<nullptr>
)
in: 
(
  x.global=(0),
  y.global=(0),
  y.lifted=*(y.global),
  x.lifted=*(x.global),
  %0=alloca(20,(20 * 1)),
  x.lifted.lobit=(x.lifted >>> 31),
  x.lifted.lobit.not=(x.lifted.lobit ^ 1),
  @U x.lifted.lobit.not!=0,
  y.lifted.lobit=(y.lifted >>> 31),
  y.lifted.lobit.not=(y.lifted.lobit ^ 1),
  @U y.lifted.lobit.not!=0,
  cmp3=(x.lifted < 9),
  (conv4 != 0)=cmp3,
  @U conv4!=0,
  cmp5=(y.lifted < 10),
  (conv6 != 0)=cmp5,
  @U conv6!=0,
  mul77=(y.lifted - x.lifted),
  sub=(x.lifted * mul77),
  cmp8=(sub > 49),
  add=(x.lifted + 1),
  add.x.lifted=(cmp8 ? add : x.lifted),
  idxprom=add.x.lifted,
  arrayidx=gep(%0,0+0+idxprom),
  *arrayidx=1
)
[2015-05-19 16:31:50,895] DEBUG Checking state for sanity... OK
[2015-05-19 16:31:50,897] DEBUG   Query: 
(= arrayidx #x00000000) assuming true
  State: 
(let ((a!1 (= x.lifted.lobit.not
              (concat ((_ extract 31 1) x.lifted.lobit)
                      (bvnot ((_ extract 0 0) x.lifted.lobit)))))
      (a!2 (= y.lifted.lobit.not
              (concat ((_ extract 31 1) y.lifted.lobit)
                      (bvnot ((_ extract 0 0) y.lifted.lobit))))))
  (and (= x.global #x00000001)
       (= y.global #x00000002)
       (= y.lifted (select $$__memory__$$!0 y.global))
       (= x.lifted (select $$__memory__$$!0 x.global))
       (= %0 #x00010001)
       (= x.lifted.lobit
          (concat #b0000000000000000000000000000000
                  ((_ extract 31 31) x.lifted)))
       a!1
       (not (= x.lifted.lobit.not #x00000000))
       (= y.lifted.lobit
          (concat #b0000000000000000000000000000000
                  ((_ extract 31 31) y.lifted)))
       a!2
       (not (= y.lifted.lobit.not #x00000000))
       (= cmp3 (not (bvsle #x00000009 x.lifted)))
       (= (not (= conv4 #x00000000)) cmp3)
       (not (= conv4 #x00000000))
       (= cmp5 (not (bvsle #x0000000a y.lifted)))
       (= (not (= conv6 #x00000000)) cmp5)
       (not (= conv6 #x00000000))
       (= mul77 (bvadd y.lifted (bvmul #xffffffff x.lifted)))
       (= sub (bvmul mul77 x.lifted))
       (= cmp8 (not (bvsle sub #x00000031)))
       (= add (bvadd #x00000001 x.lifted))
       (= add.x.lifted (ite cmp8 add x.lifted))
       (= idxprom add.x.lifted)
       (= arrayidx (bvadd %0 idxprom)))) assuming (let ((a!1 (or (= %0 (bvadd #xffffffff (bvmul #xffffffff idxprom)))
               (= %0 (bvmul #xffffffff idxprom)))))
  (not a!1))
[2015-05-19 16:31:50,910] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:31:50,913] DEBUG Checking query: 
(
  (bound(%0) +> (arrayidx - %0))=true
)
in: 
(
  x.global=(0),
  y.global=(0),
  y.lifted=*(y.global),
  x.lifted=*(x.global),
  %0=alloca(20,(20 * 1)),
  x.lifted.lobit=(x.lifted >>> 31),
  x.lifted.lobit.not=(x.lifted.lobit ^ 1),
  @U x.lifted.lobit.not!=0,
  y.lifted.lobit=(y.lifted >>> 31),
  y.lifted.lobit.not=(y.lifted.lobit ^ 1),
  @U y.lifted.lobit.not!=0,
  cmp3=(x.lifted < 9),
  (conv4 != 0)=cmp3,
  @U conv4!=0,
  cmp5=(y.lifted < 10),
  (conv6 != 0)=cmp5,
  @U conv6!=0,
  mul77=(y.lifted - x.lifted),
  sub=(x.lifted * mul77),
  cmp8=(sub > 49),
  add=(x.lifted + 1),
  add.x.lifted=(cmp8 ? add : x.lifted),
  idxprom=add.x.lifted,
  arrayidx=gep(%0,0+0+idxprom)
)
[2015-05-19 16:31:50,946] DEBUG Checking state for sanity... OK
[2015-05-19 16:31:50,952] DEBUG   Query: 
(let ((a!1 (and (not (= %0 #x00010001))
                (not (= %0 #x00000002))
                (not (= %0 #x00000001))
                (not (= %0 #x00000000)))))
(let ((a!2 (ite (ite a!1
                     (= |$$__base_free__$$(%0)| #x00000001)
                     (= %0 #x00000001))
                #x00000001
                (ite (ite a!1
                          (= |$$__base_free__$$(%0)| #x00000000)
                          (= %0 #x00000000))
                     #xffffffff
                     #x00000000))))
(let ((a!3 (ite (ite a!1
                     (= |$$__base_free__$$(%0)| #x00010001)
                     (= %0 #x00010001))
                #x00000014
                (ite (ite a!1
                          (= |$$__base_free__$$(%0)| #x00000002)
                          (= %0 #x00000002))
                     #x00000001
                     a!2))))
(let ((a!4 (bvule a!3
                  (bvadd %0
                         (bvmul #xffffffff (ite a!1 |$$__base_free__$$(%0)| %0))))))
(let ((a!5 (ite (= (ite a!1 |$$__base_free__$$(%0)| %0) %0)
                a!3
                (ite a!4
                     #x00000000
                     (bvadd a!3
                            (bvmul #xffffffff %0)
                            (ite a!1 |$$__base_free__$$(%0)| %0))))))
  (bvule a!5 (bvadd arrayidx (bvmul #xffffffff %0)))))))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(%0)| #x00010001))
                     (not (= |$$__base_free__$$(%0)| #x00000002))
                     (not (= |$$__base_free__$$(%0)| #x00000001))
                     (not (= |$$__base_free__$$(%0)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(%0)|))
                                  (bvule forall_bound_0 %0)))))
               (or a!1
                   (and (not (= forall_bound_0 #x00010001))
                        (not (= forall_bound_0 #x00000002))
                        (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(%0)| %0) a!1 a!2))
  State: 
(let ((a!1 (= x.lifted.lobit.not
              (concat ((_ extract 31 1) x.lifted.lobit)
                      (bvnot ((_ extract 0 0) x.lifted.lobit)))))
      (a!2 (= y.lifted.lobit.not
              (concat ((_ extract 31 1) y.lifted.lobit)
                      (bvnot ((_ extract 0 0) y.lifted.lobit))))))
  (and (= x.global #x00000001)
       (= y.global #x00000002)
       (= y.lifted (select $$__memory__$$!0 y.global))
       (= x.lifted (select $$__memory__$$!0 x.global))
       (= %0 #x00010001)
       (= x.lifted.lobit
          (concat #b0000000000000000000000000000000
                  ((_ extract 31 31) x.lifted)))
       a!1
       (not (= x.lifted.lobit.not #x00000000))
       (= y.lifted.lobit
          (concat #b0000000000000000000000000000000
                  ((_ extract 31 31) y.lifted)))
       a!2
       (not (= y.lifted.lobit.not #x00000000))
       (= cmp3 (not (bvsle #x00000009 x.lifted)))
       (= (not (= conv4 #x00000000)) cmp3)
       (not (= conv4 #x00000000))
       (= cmp5 (not (bvsle #x0000000a y.lifted)))
       (= (not (= conv6 #x00000000)) cmp5)
       (not (= conv6 #x00000000))
       (= mul77 (bvadd y.lifted (bvmul #xffffffff x.lifted)))
       (= sub (bvmul mul77 x.lifted))
       (= cmp8 (not (bvsle sub #x00000031)))
       (= add (bvadd #x00000001 x.lifted))
       (= add.x.lifted (ite cmp8 add x.lifted))
       (= idxprom add.x.lifted)
       (= arrayidx (bvadd %0 idxprom)))) assuming (let ((a!1 (or (= %0 (bvadd #xffffffff (bvmul #xffffffff idxprom)))
               (= %0 (bvmul #xffffffff idxprom)))))
  (not a!1))
[2015-05-19 16:31:50,969] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:31:53,746] DEBUG Checking query: 
(
  ptr!=<nullptr>
)
in: 
(
  x.global=(0),
  y.global=(0),
  cmp=(ptr == x.global),
  @P cmp=true,
  *ptr=0
)
[2015-05-19 16:31:53,751] DEBUG Checking state for sanity... OK
[2015-05-19 16:31:53,753] DEBUG   Query: 
(= ptr #x00000000) assuming (let ((a!1 (not (and (= ((_ extract 31 18) ptr) #b00000000000000)
                     (bvule ((_ extract 17 0) ptr) #b100000000000000000)))))
  (or (not (bvule #x00010001 ptr)) a!1))
  State: 
(and (= x.global #x00000001)
     (= y.global #x00000002)
     (= cmp (= ptr x.global))
     cmp) assuming (let ((a!1 (not (and (= ((_ extract 31 18) ptr) #b00000000000000)
                     (bvule ((_ extract 17 0) ptr) #b100000000000000000)))))
  (or (not (bvule #x00010001 ptr)) a!1))
[2015-05-19 16:31:53,755] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:31:53,758] DEBUG Checking query: 
(
  ptr!=<nullptr>
)
in: 
(
  x.global=(0),
  y.global=(0),
  cmp=(ptr == x.global)
)->(BEGIN
  <OR>(
    @P cmp=true,
    *ptr=0
  ),
  <OR>(
    @P cmp=false
  )
END)->(
  cmp1=(ptr == y.global),
  @P cmp1=true,
  *ptr=1
)
[2015-05-19 16:31:53,767] DEBUG Checking state for sanity... OK
[2015-05-19 16:31:53,769] DEBUG   Query: 
(= ptr #x00000000) assuming (let ((a!1 (not (and (= ((_ extract 31 18) ptr) #b00000000000000)
                     (bvule ((_ extract 17 0) ptr) #b100000000000000000)))))
  (or (not (bvule #x00010001 ptr)) a!1))
  State: 
(and (= x.global #x00000001)
     (= y.global #x00000002)
     (= cmp (= ptr x.global))
     (= cmp1 (= ptr y.global))
     cmp1) assuming (let ((a!1 (not (and (= ((_ extract 31 18) ptr) #b00000000000000)
                     (bvule ((_ extract 17 0) ptr) #b100000000000000000)))))
  (or (not (bvule #x00010001 ptr)) a!1))
[2015-05-19 16:31:53,771] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:31:53,775] DEBUG Checking query: 
(
  @R conv!=0
)
in: 
(
  x.global=(0),
  y.global=(0),
  y.lifted=*(y.global),
  x.lifted=*(x.global),
  *y.global=y.lifted,
  *x.global=x.lifted,
  y.lifted1=*(y.global),
  x.lifted2=*(x.global),
  *y.global=y.lifted1,
  *x.global=x.lifted2,
  y.lifted3=*(y.global),
  x.lifted4=*(x.global),
  cmp=(x.lifted4 <= y.lifted3),
  (conv != 0)=cmp
)
[2015-05-19 16:31:53,786] DEBUG Checking state for sanity... OK
[2015-05-19 16:31:53,787] DEBUG   Query: 
(= conv #x00000000) assuming true
  State: 
(and (= x.global #x00000001)
     (= y.global #x00000002)
     (= y.lifted (select $$__memory__$$!0 y.global))
     (= x.lifted (select $$__memory__$$!0 x.global))
     (= y.lifted1 (ite (= x.global y.global) x.lifted y.lifted))
     (= x.lifted2 x.lifted)
     (= y.lifted3 (ite (= x.global y.global) x.lifted2 y.lifted1))
     (= x.lifted4 x.lifted2)
     (= cmp (bvsle x.lifted4 y.lifted3))
     (= (not (= conv #x00000000)) cmp)) assuming true
[2015-05-19 16:31:53,791] DEBUG Acquired result: sat
With:
(declare-fun $$__memory__$$!0 () (Array (_ BitVec 32) (_ BitVec 32)))
  (_ as-array k!2)
(declare-fun $CHECK$ () Bool)
  true
(declare-fun cmp () Bool)
  false
(declare-fun conv () (_ BitVec 32))
  #x00000000
(declare-fun x.global () (_ BitVec 32))
  #x00000001
(declare-fun x.lifted () (_ BitVec 32))
  #x00000001
(declare-fun x.lifted2 () (_ BitVec 32))
  #x00000001
(declare-fun x.lifted4 () (_ BitVec 32))
  #x00000001
(declare-fun y.global () (_ BitVec 32))
  #x00000002
(declare-fun y.lifted () (_ BitVec 32))
  #x00000000
(declare-fun y.lifted1 () (_ BitVec 32))
  #x00000000
(declare-fun y.lifted3 () (_ BitVec 32))
  #x00000000
(declare-fun k!2 ((_ BitVec 32)) (_ BitVec 32))
  [#x00000002] -> #x00000000
[#x00000001] -> #x00000001
else -> #x00000000
[2015-05-19 16:31:53,791] DEBUG CEX: (
  
)
[2015-05-19 16:32:39,612] DEBUG Checking query: 
(
  ptr!=<nullptr>
)
in: 
(
  x.global=(0),
  y.global=(0),
  cmp=(ptr == x.global),
  @P cmp=true,
  *ptr=0
)
[2015-05-19 16:32:39,619] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:39,622] DEBUG   Query: 
(= ptr #x00000000) assuming (let ((a!1 (not (and (= ((_ extract 31 18) ptr) #b00000000000000)
                     (bvule ((_ extract 17 0) ptr) #b100000000000000000)))))
  (or (not (bvule #x00010001 ptr)) a!1))
  State: 
(and (= x.global #x00000001)
     (= y.global #x00000002)
     (= cmp (= ptr x.global))
     cmp) assuming (let ((a!1 (not (and (= ((_ extract 31 18) ptr) #b00000000000000)
                     (bvule ((_ extract 17 0) ptr) #b100000000000000000)))))
  (or (not (bvule #x00010001 ptr)) a!1))
[2015-05-19 16:32:39,624] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:39,626] DEBUG Checking query: 
(
  ptr!=<nullptr>
)
in: 
(
  x.global=(0),
  y.global=(0),
  cmp=(ptr == x.global)
)->(BEGIN
  <OR>(
    @P cmp=true,
    *ptr=0
  ),
  <OR>(
    @P cmp=false
  )
END)->(
  cmp1=(ptr == y.global),
  @P cmp1=true,
  *ptr=1
)
[2015-05-19 16:32:39,639] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:39,642] DEBUG   Query: 
(= ptr #x00000000) assuming (let ((a!1 (not (and (= ((_ extract 31 18) ptr) #b00000000000000)
                     (bvule ((_ extract 17 0) ptr) #b100000000000000000)))))
  (or (not (bvule #x00010001 ptr)) a!1))
  State: 
(and (= x.global #x00000001)
     (= y.global #x00000002)
     (= cmp (= ptr x.global))
     (= cmp1 (= ptr y.global))
     cmp1) assuming (let ((a!1 (not (and (= ((_ extract 31 18) ptr) #b00000000000000)
                     (bvule ((_ extract 17 0) ptr) #b100000000000000000)))))
  (or (not (bvule #x00010001 ptr)) a!1))
[2015-05-19 16:32:39,645] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:39,650] DEBUG Checking query: 
(
  @R conv!=0
)
in: 
(
  x.global=(0),
  y.global=(0),
  y.lifted=*(y.global),
  x.lifted=*(x.global),
  *y.global=y.lifted,
  *x.global=x.lifted,
  y.lifted1=*(y.global),
  x.lifted2=*(x.global),
  *y.global=y.lifted1,
  *x.global=x.lifted2,
  y.lifted3=*(y.global),
  x.lifted4=*(x.global),
  cmp=(x.lifted4 <= y.lifted3),
  (conv != 0)=cmp
)
[2015-05-19 16:32:39,663] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:39,664] DEBUG   Query: 
(= conv #x00000000) assuming true
  State: 
(and (= x.global #x00000001)
     (= y.global #x00000002)
     (= y.lifted (select $$__memory__$$!0 y.global))
     (= x.lifted (select $$__memory__$$!0 x.global))
     (= y.lifted1 (ite (= x.global y.global) x.lifted y.lifted))
     (= x.lifted2 x.lifted)
     (= y.lifted3 (ite (= x.global y.global) x.lifted2 y.lifted1))
     (= x.lifted4 x.lifted2)
     (= cmp (bvsle x.lifted4 y.lifted3))
     (= (not (= conv #x00000000)) cmp)) assuming true
[2015-05-19 16:32:39,667] DEBUG Acquired result: sat
With:
(declare-fun $$__memory__$$!0 () (Array (_ BitVec 32) (_ BitVec 32)))
  (_ as-array k!2)
(declare-fun $CHECK$ () Bool)
  true
(declare-fun cmp () Bool)
  false
(declare-fun conv () (_ BitVec 32))
  #x00000000
(declare-fun x.global () (_ BitVec 32))
  #x00000001
(declare-fun x.lifted () (_ BitVec 32))
  #x00000001
(declare-fun x.lifted2 () (_ BitVec 32))
  #x00000001
(declare-fun x.lifted4 () (_ BitVec 32))
  #x00000001
(declare-fun y.global () (_ BitVec 32))
  #x00000002
(declare-fun y.lifted () (_ BitVec 32))
  #x00000000
(declare-fun y.lifted1 () (_ BitVec 32))
  #x00000000
(declare-fun y.lifted3 () (_ BitVec 32))
  #x00000000
(declare-fun k!2 ((_ BitVec 32)) (_ BitVec 32))
  [#x00000002] -> #x00000000
[#x00000001] -> #x00000001
else -> #x00000000
[2015-05-19 16:32:39,667] DEBUG CEX: (
  
)
[2015-05-19 16:32:46,325] DEBUG Checking query: 
(
  p!=<nullptr>
)
in: 
(
  A.global=(0 x 1024),
  writeBound(p,$$bound(p)$$),
  writeBound(p,$$bound(p)$$),
  @R (((p != <nullptr>) && (p != <invalid>)) && ($$bound(p)$$ +>= 1))=true,
  @R ($$bound(p)$$ +>= 2)=true
)
[2015-05-19 16:32:46,332] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:46,334] DEBUG   Query: 
(= p #x00000000) assuming (let ((a!1 (not (and (= ((_ extract 31 18) p) #b00000000000000)
                     (bvule ((_ extract 17 0) p) #b100000000000000000)))))
  (or (not (bvule #x00010001 p)) a!1))
  State: 
(and (= A.global #x00000001)
     (not (= p #x00000000))
     (not (= p #xffffffff))
     (bvule #x00000001 |$$bound(p)$$|)
     (bvule #x00000002 |$$bound(p)$$|)) assuming (let ((a!1 (not (and (= ((_ extract 31 18) p) #b00000000000000)
                     (bvule ((_ extract 17 0) p) #b100000000000000000)))))
  (or (not (bvule #x00010001 p)) a!1))
[2015-05-19 16:32:46,337] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:46,339] DEBUG Checking query: 
(
  arrayidx1!=<nullptr>
)
in: 
(
  A.global=(0 x 1024),
  writeBound(p,$$bound(p)$$),
  writeBound(p,$$bound(p)$$),
  @R (((p != <nullptr>) && (p != <invalid>)) && ($$bound(p)$$ +>= 1))=true,
  @R ($$bound(p)$$ +>= 2)=true,
  arrayidx1=gep(p,0+1)
)
[2015-05-19 16:32:46,347] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:46,348] DEBUG   Query: 
(= arrayidx1 #x00000000) assuming true
  State: 
(and (= A.global #x00000001)
     (not (= p #x00000000))
     (not (= p #xffffffff))
     (bvule #x00000001 |$$bound(p)$$|)
     (bvule #x00000002 |$$bound(p)$$|)
     (= arrayidx1 (bvadd #x00000001 p))) assuming (let ((a!1 (not (and (= ((_ extract 31 18) p) #b00000000000000)
                     (bvule ((_ extract 17 0) p) #b100000000000000000)))))
  (and (or (not (bvule #x00010001 p)) a!1)
       (not (or (= p #xfffffffe) (= p #xffffffff)))))
[2015-05-19 16:32:46,351] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:49,468] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+0) != <nullptr>) && (gep[inbounds](A.global,0+0+0) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+0)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+0)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:49,474] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:49,476] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #x00000001))
                     (not (= A.global #x00000000)))
                |$$__base_free__$$(A.global)|
                A.global))
      (a!2 (ite (and (not (= A.global #x00000001))
                     (not (= A.global #x00000000)))
                (= |$$__base_free__$$(A.global)| #x00000001)
                (= A.global #x00000001)))
      (a!3 (ite (and (not (= A.global #x00000001))
                     (not (= A.global #x00000000)))
                (= |$$__base_free__$$(A.global)| #x00000000)
                (= A.global #x00000000))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #x00000000))
                (not (= A.global #xffffffff))
                (ite (= a!1 A.global)
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 A.global)
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(A.global)| #x00000001))
                     (not (= |$$__base_free__$$(A.global)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(A.global)|))
                                  (bvule forall_bound_0 A.global)))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(A.global)| A.global) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:49,478] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:49,483] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+2) != <nullptr>) && (gep[inbounds](A.global,0+0+2) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+2)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+2)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:49,490] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:49,493] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffffff))
                     (not (= A.global #xfffffffe)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000002 A.global)))
      (a!2 (ite (and (not (= A.global #xffffffff))
                     (not (= A.global #xfffffffe)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffffff)))
      (a!3 (ite (and (not (= A.global #xffffffff))
                     (not (= A.global #xfffffffe)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffffe))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000002 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffffe
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffffe))
                (not (= A.global #xfffffffd))
                (ite (= a!1 (bvadd #x00000002 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000002 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000002 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000002 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:49,502] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:49,507] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+4) != <nullptr>) && (gep[inbounds](A.global,0+0+4) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+4)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+4)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:49,513] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:49,517] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffffd))
                     (not (= A.global #xfffffffc)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000004 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffffd))
                     (not (= A.global #xfffffffc)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffffd)))
      (a!3 (ite (and (not (= A.global #xfffffffd))
                     (not (= A.global #xfffffffc)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffffc))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000004 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffffc
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffffc))
                (not (= A.global #xfffffffb))
                (ite (= a!1 (bvadd #x00000004 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000004 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000004 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000004 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:49,527] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:49,532] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+6) != <nullptr>) && (gep[inbounds](A.global,0+0+6) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+6)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+6)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:49,538] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:49,542] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffffb))
                     (not (= A.global #xfffffffa)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000006 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffffb))
                     (not (= A.global #xfffffffa)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffffb)))
      (a!3 (ite (and (not (= A.global #xfffffffb))
                     (not (= A.global #xfffffffa)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffffa))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000006 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffffa
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffffa))
                (not (= A.global #xfffffff9))
                (ite (= a!1 (bvadd #x00000006 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000006 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000006 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000006 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:49,556] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:49,560] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+8) != <nullptr>) && (gep[inbounds](A.global,0+0+8) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+8)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+8)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:49,568] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:49,571] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffff9))
                     (not (= A.global #xfffffff8)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000008 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffff9))
                     (not (= A.global #xfffffff8)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffff9)))
      (a!3 (ite (and (not (= A.global #xfffffff9))
                     (not (= A.global #xfffffff8)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffff8))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000008 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffff8
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffff8))
                (not (= A.global #xfffffff7))
                (ite (= a!1 (bvadd #x00000008 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000008 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000008 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000008 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:49,577] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:49,582] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+10) != <nullptr>) && (gep[inbounds](A.global,0+0+10) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+10)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+10)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:49,589] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:49,592] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffff7))
                     (not (= A.global #xfffffff6)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000000a A.global)))
      (a!2 (ite (and (not (= A.global #xfffffff7))
                     (not (= A.global #xfffffff6)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffff7)))
      (a!3 (ite (and (not (= A.global #xfffffff7))
                     (not (= A.global #xfffffff6)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffff6))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000000a A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffff6
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffff6))
                (not (= A.global #xfffffff5))
                (ite (= a!1 (bvadd #x0000000a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000000a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000000a A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000000a A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:49,603] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:49,607] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+12) != <nullptr>) && (gep[inbounds](A.global,0+0+12) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+12)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+12)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:49,614] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:49,617] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffff5))
                     (not (= A.global #xfffffff4)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000000c A.global)))
      (a!2 (ite (and (not (= A.global #xfffffff5))
                     (not (= A.global #xfffffff4)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffff5)))
      (a!3 (ite (and (not (= A.global #xfffffff5))
                     (not (= A.global #xfffffff4)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffff4))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000000c A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffff4
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffff4))
                (not (= A.global #xfffffff3))
                (ite (= a!1 (bvadd #x0000000c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000000c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000000c A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000000c A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:49,624] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:49,629] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+14) != <nullptr>) && (gep[inbounds](A.global,0+0+14) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+14)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+14)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:49,637] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:49,640] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffff3))
                     (not (= A.global #xfffffff2)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000000e A.global)))
      (a!2 (ite (and (not (= A.global #xfffffff3))
                     (not (= A.global #xfffffff2)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffff3)))
      (a!3 (ite (and (not (= A.global #xfffffff3))
                     (not (= A.global #xfffffff2)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffff2))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000000e A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffff2
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffff2))
                (not (= A.global #xfffffff1))
                (ite (= a!1 (bvadd #x0000000e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000000e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000000e A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000000e A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:49,651] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:49,655] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+16) != <nullptr>) && (gep[inbounds](A.global,0+0+16) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+16)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+16)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:49,662] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:49,666] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffff1))
                     (not (= A.global #xfffffff0)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000010 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffff1))
                     (not (= A.global #xfffffff0)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffff1)))
      (a!3 (ite (and (not (= A.global #xfffffff1))
                     (not (= A.global #xfffffff0)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffff0))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000010 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffff0
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffff0))
                (not (= A.global #xffffffef))
                (ite (= a!1 (bvadd #x00000010 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000010 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000010 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000010 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:49,672] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:49,677] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+18) != <nullptr>) && (gep[inbounds](A.global,0+0+18) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+18)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+18)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:49,684] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:49,688] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffffef))
                     (not (= A.global #xffffffee)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000012 A.global)))
      (a!2 (ite (and (not (= A.global #xffffffef))
                     (not (= A.global #xffffffee)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffffef)))
      (a!3 (ite (and (not (= A.global #xffffffef))
                     (not (= A.global #xffffffee)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffffee))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000012 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffffee
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffffee))
                (not (= A.global #xffffffed))
                (ite (= a!1 (bvadd #x00000012 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000012 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000012 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000012 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:49,694] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:49,699] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+20) != <nullptr>) && (gep[inbounds](A.global,0+0+20) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+20)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+20)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:49,707] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:49,710] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffffed))
                     (not (= A.global #xffffffec)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000014 A.global)))
      (a!2 (ite (and (not (= A.global #xffffffed))
                     (not (= A.global #xffffffec)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffffed)))
      (a!3 (ite (and (not (= A.global #xffffffed))
                     (not (= A.global #xffffffec)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffffec))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000014 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffffec
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffffec))
                (not (= A.global #xffffffeb))
                (ite (= a!1 (bvadd #x00000014 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000014 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000014 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000014 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:49,717] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:49,722] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+22) != <nullptr>) && (gep[inbounds](A.global,0+0+22) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+22)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+22)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:49,729] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:49,733] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffffeb))
                     (not (= A.global #xffffffea)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000016 A.global)))
      (a!2 (ite (and (not (= A.global #xffffffeb))
                     (not (= A.global #xffffffea)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffffeb)))
      (a!3 (ite (and (not (= A.global #xffffffeb))
                     (not (= A.global #xffffffea)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffffea))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000016 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffffea
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffffea))
                (not (= A.global #xffffffe9))
                (ite (= a!1 (bvadd #x00000016 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000016 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000016 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000016 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:49,740] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:49,745] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+24) != <nullptr>) && (gep[inbounds](A.global,0+0+24) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+24)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+24)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:49,763] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:49,767] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffffe9))
                     (not (= A.global #xffffffe8)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000018 A.global)))
      (a!2 (ite (and (not (= A.global #xffffffe9))
                     (not (= A.global #xffffffe8)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffffe9)))
      (a!3 (ite (and (not (= A.global #xffffffe9))
                     (not (= A.global #xffffffe8)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffffe8))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000018 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffffe8
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffffe8))
                (not (= A.global #xffffffe7))
                (ite (= a!1 (bvadd #x00000018 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000018 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000018 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000018 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:49,774] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:49,779] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+26) != <nullptr>) && (gep[inbounds](A.global,0+0+26) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+26)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+26)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:49,786] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:49,789] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffffe7))
                     (not (= A.global #xffffffe6)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000001a A.global)))
      (a!2 (ite (and (not (= A.global #xffffffe7))
                     (not (= A.global #xffffffe6)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffffe7)))
      (a!3 (ite (and (not (= A.global #xffffffe7))
                     (not (= A.global #xffffffe6)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffffe6))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000001a A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffffe6
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffffe6))
                (not (= A.global #xffffffe5))
                (ite (= a!1 (bvadd #x0000001a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000001a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000001a A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000001a A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:49,797] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:49,803] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+28) != <nullptr>) && (gep[inbounds](A.global,0+0+28) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+28)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+28)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:49,810] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:49,813] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffffe5))
                     (not (= A.global #xffffffe4)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000001c A.global)))
      (a!2 (ite (and (not (= A.global #xffffffe5))
                     (not (= A.global #xffffffe4)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffffe5)))
      (a!3 (ite (and (not (= A.global #xffffffe5))
                     (not (= A.global #xffffffe4)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffffe4))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000001c A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffffe4
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffffe4))
                (not (= A.global #xffffffe3))
                (ite (= a!1 (bvadd #x0000001c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000001c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000001c A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000001c A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:49,819] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:49,824] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+30) != <nullptr>) && (gep[inbounds](A.global,0+0+30) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+30)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+30)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:49,831] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:49,836] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffffe3))
                     (not (= A.global #xffffffe2)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000001e A.global)))
      (a!2 (ite (and (not (= A.global #xffffffe3))
                     (not (= A.global #xffffffe2)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffffe3)))
      (a!3 (ite (and (not (= A.global #xffffffe3))
                     (not (= A.global #xffffffe2)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffffe2))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000001e A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffffe2
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffffe2))
                (not (= A.global #xffffffe1))
                (ite (= a!1 (bvadd #x0000001e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000001e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000001e A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000001e A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:49,845] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:49,851] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+32) != <nullptr>) && (gep[inbounds](A.global,0+0+32) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+32)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+32)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:49,857] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:49,867] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffffe1))
                     (not (= A.global #xffffffe0)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000020 A.global)))
      (a!2 (ite (and (not (= A.global #xffffffe1))
                     (not (= A.global #xffffffe0)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffffe1)))
      (a!3 (ite (and (not (= A.global #xffffffe1))
                     (not (= A.global #xffffffe0)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffffe0))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000020 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffffe0
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffffe0))
                (not (= A.global #xffffffdf))
                (ite (= a!1 (bvadd #x00000020 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000020 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000020 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000020 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:49,874] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:49,879] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+34) != <nullptr>) && (gep[inbounds](A.global,0+0+34) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+34)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+34)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:49,886] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:49,889] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffffdf))
                     (not (= A.global #xffffffde)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000022 A.global)))
      (a!2 (ite (and (not (= A.global #xffffffdf))
                     (not (= A.global #xffffffde)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffffdf)))
      (a!3 (ite (and (not (= A.global #xffffffdf))
                     (not (= A.global #xffffffde)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffffde))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000022 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffffde
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffffde))
                (not (= A.global #xffffffdd))
                (ite (= a!1 (bvadd #x00000022 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000022 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000022 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000022 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:49,896] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:49,902] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+36) != <nullptr>) && (gep[inbounds](A.global,0+0+36) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+36)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+36)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:49,909] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:49,912] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffffdd))
                     (not (= A.global #xffffffdc)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000024 A.global)))
      (a!2 (ite (and (not (= A.global #xffffffdd))
                     (not (= A.global #xffffffdc)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffffdd)))
      (a!3 (ite (and (not (= A.global #xffffffdd))
                     (not (= A.global #xffffffdc)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffffdc))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000024 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffffdc
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffffdc))
                (not (= A.global #xffffffdb))
                (ite (= a!1 (bvadd #x00000024 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000024 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000024 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000024 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:49,919] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:49,925] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+38) != <nullptr>) && (gep[inbounds](A.global,0+0+38) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+38)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+38)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:49,931] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:49,935] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffffdb))
                     (not (= A.global #xffffffda)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000026 A.global)))
      (a!2 (ite (and (not (= A.global #xffffffdb))
                     (not (= A.global #xffffffda)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffffdb)))
      (a!3 (ite (and (not (= A.global #xffffffdb))
                     (not (= A.global #xffffffda)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffffda))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000026 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffffda
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffffda))
                (not (= A.global #xffffffd9))
                (ite (= a!1 (bvadd #x00000026 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000026 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000026 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000026 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:49,942] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:49,947] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+40) != <nullptr>) && (gep[inbounds](A.global,0+0+40) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+40)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+40)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:49,954] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:49,958] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffffd9))
                     (not (= A.global #xffffffd8)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000028 A.global)))
      (a!2 (ite (and (not (= A.global #xffffffd9))
                     (not (= A.global #xffffffd8)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffffd9)))
      (a!3 (ite (and (not (= A.global #xffffffd9))
                     (not (= A.global #xffffffd8)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffffd8))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000028 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffffd8
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffffd8))
                (not (= A.global #xffffffd7))
                (ite (= a!1 (bvadd #x00000028 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000028 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000028 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000028 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:49,965] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:49,970] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+42) != <nullptr>) && (gep[inbounds](A.global,0+0+42) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+42)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+42)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:49,977] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:49,980] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffffd7))
                     (not (= A.global #xffffffd6)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000002a A.global)))
      (a!2 (ite (and (not (= A.global #xffffffd7))
                     (not (= A.global #xffffffd6)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffffd7)))
      (a!3 (ite (and (not (= A.global #xffffffd7))
                     (not (= A.global #xffffffd6)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffffd6))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000002a A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffffd6
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffffd6))
                (not (= A.global #xffffffd5))
                (ite (= a!1 (bvadd #x0000002a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000002a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000002a A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000002a A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:49,987] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:49,992] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+44) != <nullptr>) && (gep[inbounds](A.global,0+0+44) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+44)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+44)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:50,000] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:50,003] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffffd5))
                     (not (= A.global #xffffffd4)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000002c A.global)))
      (a!2 (ite (and (not (= A.global #xffffffd5))
                     (not (= A.global #xffffffd4)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffffd5)))
      (a!3 (ite (and (not (= A.global #xffffffd5))
                     (not (= A.global #xffffffd4)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffffd4))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000002c A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffffd4
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffffd4))
                (not (= A.global #xffffffd3))
                (ite (= a!1 (bvadd #x0000002c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000002c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000002c A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000002c A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:50,010] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:50,015] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+46) != <nullptr>) && (gep[inbounds](A.global,0+0+46) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+46)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+46)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:50,022] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:50,025] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffffd3))
                     (not (= A.global #xffffffd2)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000002e A.global)))
      (a!2 (ite (and (not (= A.global #xffffffd3))
                     (not (= A.global #xffffffd2)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffffd3)))
      (a!3 (ite (and (not (= A.global #xffffffd3))
                     (not (= A.global #xffffffd2)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffffd2))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000002e A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffffd2
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffffd2))
                (not (= A.global #xffffffd1))
                (ite (= a!1 (bvadd #x0000002e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000002e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000002e A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000002e A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:50,033] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:50,038] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+48) != <nullptr>) && (gep[inbounds](A.global,0+0+48) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+48)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+48)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:50,045] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:50,048] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffffd1))
                     (not (= A.global #xffffffd0)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000030 A.global)))
      (a!2 (ite (and (not (= A.global #xffffffd1))
                     (not (= A.global #xffffffd0)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffffd1)))
      (a!3 (ite (and (not (= A.global #xffffffd1))
                     (not (= A.global #xffffffd0)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffffd0))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000030 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffffd0
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffffd0))
                (not (= A.global #xffffffcf))
                (ite (= a!1 (bvadd #x00000030 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000030 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000030 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000030 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:50,055] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:50,061] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+50) != <nullptr>) && (gep[inbounds](A.global,0+0+50) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+50)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+50)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:50,075] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:50,078] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffffcf))
                     (not (= A.global #xffffffce)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000032 A.global)))
      (a!2 (ite (and (not (= A.global #xffffffcf))
                     (not (= A.global #xffffffce)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffffcf)))
      (a!3 (ite (and (not (= A.global #xffffffcf))
                     (not (= A.global #xffffffce)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffffce))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000032 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffffce
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffffce))
                (not (= A.global #xffffffcd))
                (ite (= a!1 (bvadd #x00000032 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000032 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000032 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000032 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:50,087] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:50,092] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+52) != <nullptr>) && (gep[inbounds](A.global,0+0+52) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+52)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+52)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:50,099] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:50,103] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffffcd))
                     (not (= A.global #xffffffcc)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000034 A.global)))
      (a!2 (ite (and (not (= A.global #xffffffcd))
                     (not (= A.global #xffffffcc)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffffcd)))
      (a!3 (ite (and (not (= A.global #xffffffcd))
                     (not (= A.global #xffffffcc)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffffcc))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000034 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffffcc
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffffcc))
                (not (= A.global #xffffffcb))
                (ite (= a!1 (bvadd #x00000034 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000034 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000034 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000034 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:50,109] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:50,115] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+54) != <nullptr>) && (gep[inbounds](A.global,0+0+54) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+54)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+54)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:50,122] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:50,125] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffffcb))
                     (not (= A.global #xffffffca)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000036 A.global)))
      (a!2 (ite (and (not (= A.global #xffffffcb))
                     (not (= A.global #xffffffca)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffffcb)))
      (a!3 (ite (and (not (= A.global #xffffffcb))
                     (not (= A.global #xffffffca)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffffca))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000036 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffffca
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffffca))
                (not (= A.global #xffffffc9))
                (ite (= a!1 (bvadd #x00000036 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000036 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000036 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000036 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:50,133] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:50,138] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+56) != <nullptr>) && (gep[inbounds](A.global,0+0+56) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+56)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+56)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:50,146] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:50,149] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffffc9))
                     (not (= A.global #xffffffc8)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000038 A.global)))
      (a!2 (ite (and (not (= A.global #xffffffc9))
                     (not (= A.global #xffffffc8)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffffc9)))
      (a!3 (ite (and (not (= A.global #xffffffc9))
                     (not (= A.global #xffffffc8)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffffc8))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000038 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffffc8
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffffc8))
                (not (= A.global #xffffffc7))
                (ite (= a!1 (bvadd #x00000038 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000038 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000038 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000038 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:50,156] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:50,164] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+58) != <nullptr>) && (gep[inbounds](A.global,0+0+58) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+58)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+58)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:50,172] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:50,175] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffffc7))
                     (not (= A.global #xffffffc6)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000003a A.global)))
      (a!2 (ite (and (not (= A.global #xffffffc7))
                     (not (= A.global #xffffffc6)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffffc7)))
      (a!3 (ite (and (not (= A.global #xffffffc7))
                     (not (= A.global #xffffffc6)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffffc6))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000003a A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffffc6
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffffc6))
                (not (= A.global #xffffffc5))
                (ite (= a!1 (bvadd #x0000003a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000003a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000003a A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000003a A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:50,183] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:50,189] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+60) != <nullptr>) && (gep[inbounds](A.global,0+0+60) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+60)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+60)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:50,195] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:50,199] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffffc5))
                     (not (= A.global #xffffffc4)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000003c A.global)))
      (a!2 (ite (and (not (= A.global #xffffffc5))
                     (not (= A.global #xffffffc4)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffffc5)))
      (a!3 (ite (and (not (= A.global #xffffffc5))
                     (not (= A.global #xffffffc4)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffffc4))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000003c A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffffc4
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffffc4))
                (not (= A.global #xffffffc3))
                (ite (= a!1 (bvadd #x0000003c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000003c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000003c A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000003c A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:50,206] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:50,212] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+62) != <nullptr>) && (gep[inbounds](A.global,0+0+62) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+62)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+62)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:50,218] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:50,222] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffffc3))
                     (not (= A.global #xffffffc2)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000003e A.global)))
      (a!2 (ite (and (not (= A.global #xffffffc3))
                     (not (= A.global #xffffffc2)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffffc3)))
      (a!3 (ite (and (not (= A.global #xffffffc3))
                     (not (= A.global #xffffffc2)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffffc2))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000003e A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffffc2
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffffc2))
                (not (= A.global #xffffffc1))
                (ite (= a!1 (bvadd #x0000003e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000003e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000003e A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000003e A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:50,231] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:50,236] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+64) != <nullptr>) && (gep[inbounds](A.global,0+0+64) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+64)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+64)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:50,243] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:50,247] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffffc1))
                     (not (= A.global #xffffffc0)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000040 A.global)))
      (a!2 (ite (and (not (= A.global #xffffffc1))
                     (not (= A.global #xffffffc0)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffffc1)))
      (a!3 (ite (and (not (= A.global #xffffffc1))
                     (not (= A.global #xffffffc0)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffffc0))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000040 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffffc0
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffffc0))
                (not (= A.global #xffffffbf))
                (ite (= a!1 (bvadd #x00000040 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000040 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000040 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000040 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:50,253] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:50,259] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+66) != <nullptr>) && (gep[inbounds](A.global,0+0+66) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+66)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+66)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:50,266] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:50,275] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffffbf))
                     (not (= A.global #xffffffbe)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000042 A.global)))
      (a!2 (ite (and (not (= A.global #xffffffbf))
                     (not (= A.global #xffffffbe)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffffbf)))
      (a!3 (ite (and (not (= A.global #xffffffbf))
                     (not (= A.global #xffffffbe)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffffbe))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000042 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffffbe
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffffbe))
                (not (= A.global #xffffffbd))
                (ite (= a!1 (bvadd #x00000042 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000042 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000042 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000042 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:50,281] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:50,288] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+68) != <nullptr>) && (gep[inbounds](A.global,0+0+68) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+68)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+68)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:50,295] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:50,298] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffffbd))
                     (not (= A.global #xffffffbc)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000044 A.global)))
      (a!2 (ite (and (not (= A.global #xffffffbd))
                     (not (= A.global #xffffffbc)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffffbd)))
      (a!3 (ite (and (not (= A.global #xffffffbd))
                     (not (= A.global #xffffffbc)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffffbc))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000044 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffffbc
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffffbc))
                (not (= A.global #xffffffbb))
                (ite (= a!1 (bvadd #x00000044 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000044 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000044 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000044 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:50,305] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:50,310] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+70) != <nullptr>) && (gep[inbounds](A.global,0+0+70) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+70)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+70)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:50,318] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:50,321] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffffbb))
                     (not (= A.global #xffffffba)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000046 A.global)))
      (a!2 (ite (and (not (= A.global #xffffffbb))
                     (not (= A.global #xffffffba)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffffbb)))
      (a!3 (ite (and (not (= A.global #xffffffbb))
                     (not (= A.global #xffffffba)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffffba))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000046 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffffba
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffffba))
                (not (= A.global #xffffffb9))
                (ite (= a!1 (bvadd #x00000046 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000046 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000046 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000046 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:50,328] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:50,334] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+72) != <nullptr>) && (gep[inbounds](A.global,0+0+72) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+72)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+72)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:50,341] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:50,344] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffffb9))
                     (not (= A.global #xffffffb8)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000048 A.global)))
      (a!2 (ite (and (not (= A.global #xffffffb9))
                     (not (= A.global #xffffffb8)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffffb9)))
      (a!3 (ite (and (not (= A.global #xffffffb9))
                     (not (= A.global #xffffffb8)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffffb8))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000048 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffffb8
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffffb8))
                (not (= A.global #xffffffb7))
                (ite (= a!1 (bvadd #x00000048 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000048 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000048 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000048 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:50,351] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:50,357] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+74) != <nullptr>) && (gep[inbounds](A.global,0+0+74) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+74)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+74)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:50,364] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:50,368] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffffb7))
                     (not (= A.global #xffffffb6)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000004a A.global)))
      (a!2 (ite (and (not (= A.global #xffffffb7))
                     (not (= A.global #xffffffb6)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffffb7)))
      (a!3 (ite (and (not (= A.global #xffffffb7))
                     (not (= A.global #xffffffb6)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffffb6))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000004a A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffffb6
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffffb6))
                (not (= A.global #xffffffb5))
                (ite (= a!1 (bvadd #x0000004a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000004a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000004a A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000004a A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:50,375] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:50,381] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+76) != <nullptr>) && (gep[inbounds](A.global,0+0+76) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+76)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+76)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:50,388] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:50,391] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffffb5))
                     (not (= A.global #xffffffb4)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000004c A.global)))
      (a!2 (ite (and (not (= A.global #xffffffb5))
                     (not (= A.global #xffffffb4)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffffb5)))
      (a!3 (ite (and (not (= A.global #xffffffb5))
                     (not (= A.global #xffffffb4)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffffb4))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000004c A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffffb4
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffffb4))
                (not (= A.global #xffffffb3))
                (ite (= a!1 (bvadd #x0000004c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000004c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000004c A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000004c A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:50,398] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:50,404] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+78) != <nullptr>) && (gep[inbounds](A.global,0+0+78) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+78)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+78)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:50,411] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:50,415] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffffb3))
                     (not (= A.global #xffffffb2)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000004e A.global)))
      (a!2 (ite (and (not (= A.global #xffffffb3))
                     (not (= A.global #xffffffb2)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffffb3)))
      (a!3 (ite (and (not (= A.global #xffffffb3))
                     (not (= A.global #xffffffb2)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffffb2))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000004e A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffffb2
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffffb2))
                (not (= A.global #xffffffb1))
                (ite (= a!1 (bvadd #x0000004e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000004e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000004e A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000004e A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:50,421] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:50,428] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+80) != <nullptr>) && (gep[inbounds](A.global,0+0+80) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+80)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+80)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:50,435] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:50,438] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffffb1))
                     (not (= A.global #xffffffb0)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000050 A.global)))
      (a!2 (ite (and (not (= A.global #xffffffb1))
                     (not (= A.global #xffffffb0)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffffb1)))
      (a!3 (ite (and (not (= A.global #xffffffb1))
                     (not (= A.global #xffffffb0)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffffb0))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000050 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffffb0
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffffb0))
                (not (= A.global #xffffffaf))
                (ite (= a!1 (bvadd #x00000050 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000050 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000050 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000050 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:50,446] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:50,452] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+82) != <nullptr>) && (gep[inbounds](A.global,0+0+82) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+82)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+82)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:50,459] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:50,462] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffffaf))
                     (not (= A.global #xffffffae)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000052 A.global)))
      (a!2 (ite (and (not (= A.global #xffffffaf))
                     (not (= A.global #xffffffae)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffffaf)))
      (a!3 (ite (and (not (= A.global #xffffffaf))
                     (not (= A.global #xffffffae)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffffae))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000052 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffffae
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffffae))
                (not (= A.global #xffffffad))
                (ite (= a!1 (bvadd #x00000052 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000052 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000052 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000052 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:50,468] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:50,480] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+84) != <nullptr>) && (gep[inbounds](A.global,0+0+84) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+84)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+84)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:50,486] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:50,491] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffffad))
                     (not (= A.global #xffffffac)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000054 A.global)))
      (a!2 (ite (and (not (= A.global #xffffffad))
                     (not (= A.global #xffffffac)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffffad)))
      (a!3 (ite (and (not (= A.global #xffffffad))
                     (not (= A.global #xffffffac)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffffac))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000054 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffffac
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffffac))
                (not (= A.global #xffffffab))
                (ite (= a!1 (bvadd #x00000054 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000054 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000054 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000054 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:50,498] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:50,504] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+86) != <nullptr>) && (gep[inbounds](A.global,0+0+86) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+86)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+86)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:50,511] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:50,515] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffffab))
                     (not (= A.global #xffffffaa)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000056 A.global)))
      (a!2 (ite (and (not (= A.global #xffffffab))
                     (not (= A.global #xffffffaa)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffffab)))
      (a!3 (ite (and (not (= A.global #xffffffab))
                     (not (= A.global #xffffffaa)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffffaa))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000056 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffffaa
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffffaa))
                (not (= A.global #xffffffa9))
                (ite (= a!1 (bvadd #x00000056 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000056 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000056 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000056 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:50,521] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:50,529] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+88) != <nullptr>) && (gep[inbounds](A.global,0+0+88) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+88)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+88)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:50,535] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:50,538] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffffa9))
                     (not (= A.global #xffffffa8)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000058 A.global)))
      (a!2 (ite (and (not (= A.global #xffffffa9))
                     (not (= A.global #xffffffa8)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffffa9)))
      (a!3 (ite (and (not (= A.global #xffffffa9))
                     (not (= A.global #xffffffa8)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffffa8))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000058 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffffa8
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffffa8))
                (not (= A.global #xffffffa7))
                (ite (= a!1 (bvadd #x00000058 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000058 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000058 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000058 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:50,545] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:50,552] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+90) != <nullptr>) && (gep[inbounds](A.global,0+0+90) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+90)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+90)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:50,558] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:50,562] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffffa7))
                     (not (= A.global #xffffffa6)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000005a A.global)))
      (a!2 (ite (and (not (= A.global #xffffffa7))
                     (not (= A.global #xffffffa6)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffffa7)))
      (a!3 (ite (and (not (= A.global #xffffffa7))
                     (not (= A.global #xffffffa6)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffffa6))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000005a A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffffa6
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffffa6))
                (not (= A.global #xffffffa5))
                (ite (= a!1 (bvadd #x0000005a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000005a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000005a A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000005a A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:50,569] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:50,575] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+92) != <nullptr>) && (gep[inbounds](A.global,0+0+92) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+92)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+92)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:50,582] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:50,586] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffffa5))
                     (not (= A.global #xffffffa4)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000005c A.global)))
      (a!2 (ite (and (not (= A.global #xffffffa5))
                     (not (= A.global #xffffffa4)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffffa5)))
      (a!3 (ite (and (not (= A.global #xffffffa5))
                     (not (= A.global #xffffffa4)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffffa4))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000005c A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffffa4
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffffa4))
                (not (= A.global #xffffffa3))
                (ite (= a!1 (bvadd #x0000005c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000005c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000005c A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000005c A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:50,592] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:50,599] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+94) != <nullptr>) && (gep[inbounds](A.global,0+0+94) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+94)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+94)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:50,605] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:50,609] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffffa3))
                     (not (= A.global #xffffffa2)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000005e A.global)))
      (a!2 (ite (and (not (= A.global #xffffffa3))
                     (not (= A.global #xffffffa2)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffffa3)))
      (a!3 (ite (and (not (= A.global #xffffffa3))
                     (not (= A.global #xffffffa2)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffffa2))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000005e A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffffa2
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffffa2))
                (not (= A.global #xffffffa1))
                (ite (= a!1 (bvadd #x0000005e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000005e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000005e A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000005e A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:50,616] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:50,623] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+96) != <nullptr>) && (gep[inbounds](A.global,0+0+96) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+96)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+96)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:50,630] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:50,634] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffffa1))
                     (not (= A.global #xffffffa0)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000060 A.global)))
      (a!2 (ite (and (not (= A.global #xffffffa1))
                     (not (= A.global #xffffffa0)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffffa1)))
      (a!3 (ite (and (not (= A.global #xffffffa1))
                     (not (= A.global #xffffffa0)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffffa0))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000060 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffffa0
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffffa0))
                (not (= A.global #xffffff9f))
                (ite (= a!1 (bvadd #x00000060 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000060 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000060 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000060 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:50,641] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:50,647] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+98) != <nullptr>) && (gep[inbounds](A.global,0+0+98) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+98)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+98)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:50,654] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:50,658] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff9f))
                     (not (= A.global #xffffff9e)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000062 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff9f))
                     (not (= A.global #xffffff9e)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff9f)))
      (a!3 (ite (and (not (= A.global #xffffff9f))
                     (not (= A.global #xffffff9e)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff9e))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000062 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff9e
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff9e))
                (not (= A.global #xffffff9d))
                (ite (= a!1 (bvadd #x00000062 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000062 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000062 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000062 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:50,666] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:50,673] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+100) != <nullptr>) && (gep[inbounds](A.global,0+0+100) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+100)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+100)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:50,685] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:50,689] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff9d))
                     (not (= A.global #xffffff9c)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000064 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff9d))
                     (not (= A.global #xffffff9c)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff9d)))
      (a!3 (ite (and (not (= A.global #xffffff9d))
                     (not (= A.global #xffffff9c)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff9c))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000064 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff9c
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff9c))
                (not (= A.global #xffffff9b))
                (ite (= a!1 (bvadd #x00000064 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000064 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000064 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000064 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:50,695] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:50,701] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+102) != <nullptr>) && (gep[inbounds](A.global,0+0+102) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+102)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+102)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:50,708] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:50,712] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff9b))
                     (not (= A.global #xffffff9a)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000066 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff9b))
                     (not (= A.global #xffffff9a)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff9b)))
      (a!3 (ite (and (not (= A.global #xffffff9b))
                     (not (= A.global #xffffff9a)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff9a))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000066 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff9a
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff9a))
                (not (= A.global #xffffff99))
                (ite (= a!1 (bvadd #x00000066 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000066 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000066 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000066 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:50,719] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:50,726] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+104) != <nullptr>) && (gep[inbounds](A.global,0+0+104) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+104)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+104)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:50,733] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:50,737] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff99))
                     (not (= A.global #xffffff98)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000068 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff99))
                     (not (= A.global #xffffff98)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff99)))
      (a!3 (ite (and (not (= A.global #xffffff99))
                     (not (= A.global #xffffff98)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff98))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000068 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff98
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff98))
                (not (= A.global #xffffff97))
                (ite (= a!1 (bvadd #x00000068 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000068 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000068 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000068 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:50,743] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:50,750] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+106) != <nullptr>) && (gep[inbounds](A.global,0+0+106) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+106)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+106)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:50,757] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:50,760] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff97))
                     (not (= A.global #xffffff96)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000006a A.global)))
      (a!2 (ite (and (not (= A.global #xffffff97))
                     (not (= A.global #xffffff96)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff97)))
      (a!3 (ite (and (not (= A.global #xffffff97))
                     (not (= A.global #xffffff96)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff96))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000006a A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff96
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff96))
                (not (= A.global #xffffff95))
                (ite (= a!1 (bvadd #x0000006a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000006a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000006a A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000006a A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:50,767] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:50,775] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+108) != <nullptr>) && (gep[inbounds](A.global,0+0+108) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+108)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+108)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:50,781] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:50,785] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff95))
                     (not (= A.global #xffffff94)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000006c A.global)))
      (a!2 (ite (and (not (= A.global #xffffff95))
                     (not (= A.global #xffffff94)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff95)))
      (a!3 (ite (and (not (= A.global #xffffff95))
                     (not (= A.global #xffffff94)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff94))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000006c A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff94
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff94))
                (not (= A.global #xffffff93))
                (ite (= a!1 (bvadd #x0000006c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000006c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000006c A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000006c A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:50,792] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:50,799] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+110) != <nullptr>) && (gep[inbounds](A.global,0+0+110) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+110)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+110)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:50,805] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:50,809] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff93))
                     (not (= A.global #xffffff92)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000006e A.global)))
      (a!2 (ite (and (not (= A.global #xffffff93))
                     (not (= A.global #xffffff92)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff93)))
      (a!3 (ite (and (not (= A.global #xffffff93))
                     (not (= A.global #xffffff92)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff92))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000006e A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff92
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff92))
                (not (= A.global #xffffff91))
                (ite (= a!1 (bvadd #x0000006e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000006e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000006e A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000006e A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:50,816] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:50,823] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+112) != <nullptr>) && (gep[inbounds](A.global,0+0+112) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+112)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+112)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:50,830] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:50,833] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff91))
                     (not (= A.global #xffffff90)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000070 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff91))
                     (not (= A.global #xffffff90)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff91)))
      (a!3 (ite (and (not (= A.global #xffffff91))
                     (not (= A.global #xffffff90)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff90))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000070 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff90
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff90))
                (not (= A.global #xffffff8f))
                (ite (= a!1 (bvadd #x00000070 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000070 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000070 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000070 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:50,841] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:50,848] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+114) != <nullptr>) && (gep[inbounds](A.global,0+0+114) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+114)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+114)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:50,855] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:50,858] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff8f))
                     (not (= A.global #xffffff8e)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000072 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff8f))
                     (not (= A.global #xffffff8e)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff8f)))
      (a!3 (ite (and (not (= A.global #xffffff8f))
                     (not (= A.global #xffffff8e)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff8e))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000072 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff8e
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff8e))
                (not (= A.global #xffffff8d))
                (ite (= a!1 (bvadd #x00000072 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000072 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000072 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000072 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:50,866] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:50,873] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+116) != <nullptr>) && (gep[inbounds](A.global,0+0+116) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+116)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+116)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:50,885] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:50,888] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff8d))
                     (not (= A.global #xffffff8c)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000074 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff8d))
                     (not (= A.global #xffffff8c)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff8d)))
      (a!3 (ite (and (not (= A.global #xffffff8d))
                     (not (= A.global #xffffff8c)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff8c))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000074 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff8c
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff8c))
                (not (= A.global #xffffff8b))
                (ite (= a!1 (bvadd #x00000074 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000074 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000074 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000074 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:50,895] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:50,902] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+118) != <nullptr>) && (gep[inbounds](A.global,0+0+118) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+118)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+118)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:50,909] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:50,912] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff8b))
                     (not (= A.global #xffffff8a)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000076 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff8b))
                     (not (= A.global #xffffff8a)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff8b)))
      (a!3 (ite (and (not (= A.global #xffffff8b))
                     (not (= A.global #xffffff8a)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff8a))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000076 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff8a
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff8a))
                (not (= A.global #xffffff89))
                (ite (= a!1 (bvadd #x00000076 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000076 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000076 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000076 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:50,920] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:50,927] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+120) != <nullptr>) && (gep[inbounds](A.global,0+0+120) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+120)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+120)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:50,934] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:50,938] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff89))
                     (not (= A.global #xffffff88)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000078 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff89))
                     (not (= A.global #xffffff88)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff89)))
      (a!3 (ite (and (not (= A.global #xffffff89))
                     (not (= A.global #xffffff88)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff88))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000078 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff88
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff88))
                (not (= A.global #xffffff87))
                (ite (= a!1 (bvadd #x00000078 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000078 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000078 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000078 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:50,944] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:50,951] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+122) != <nullptr>) && (gep[inbounds](A.global,0+0+122) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+122)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+122)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:50,958] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:50,961] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff87))
                     (not (= A.global #xffffff86)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000007a A.global)))
      (a!2 (ite (and (not (= A.global #xffffff87))
                     (not (= A.global #xffffff86)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff87)))
      (a!3 (ite (and (not (= A.global #xffffff87))
                     (not (= A.global #xffffff86)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff86))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000007a A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff86
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff86))
                (not (= A.global #xffffff85))
                (ite (= a!1 (bvadd #x0000007a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000007a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000007a A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000007a A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:50,969] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:50,976] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+124) != <nullptr>) && (gep[inbounds](A.global,0+0+124) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+124)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+124)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:50,983] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:50,986] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff85))
                     (not (= A.global #xffffff84)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000007c A.global)))
      (a!2 (ite (and (not (= A.global #xffffff85))
                     (not (= A.global #xffffff84)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff85)))
      (a!3 (ite (and (not (= A.global #xffffff85))
                     (not (= A.global #xffffff84)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff84))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000007c A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff84
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff84))
                (not (= A.global #xffffff83))
                (ite (= a!1 (bvadd #x0000007c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000007c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000007c A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000007c A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:50,993] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:50,999] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+126) != <nullptr>) && (gep[inbounds](A.global,0+0+126) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+126)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+126)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:51,007] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:51,010] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff83))
                     (not (= A.global #xffffff82)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000007e A.global)))
      (a!2 (ite (and (not (= A.global #xffffff83))
                     (not (= A.global #xffffff82)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff83)))
      (a!3 (ite (and (not (= A.global #xffffff83))
                     (not (= A.global #xffffff82)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff82))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000007e A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff82
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff82))
                (not (= A.global #xffffff81))
                (ite (= a!1 (bvadd #x0000007e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000007e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000007e A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000007e A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:51,018] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:51,026] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+128) != <nullptr>) && (gep[inbounds](A.global,0+0+128) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+128)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+128)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:51,032] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:51,036] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff81))
                     (not (= A.global #xffffff80)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000080 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff81))
                     (not (= A.global #xffffff80)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff81)))
      (a!3 (ite (and (not (= A.global #xffffff81))
                     (not (= A.global #xffffff80)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff80))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000080 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff80
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff80))
                (not (= A.global #xffffff7f))
                (ite (= a!1 (bvadd #x00000080 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000080 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000080 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000080 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:51,042] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:51,050] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+130) != <nullptr>) && (gep[inbounds](A.global,0+0+130) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+130)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+130)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:51,057] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:51,060] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff7f))
                     (not (= A.global #xffffff7e)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000082 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff7f))
                     (not (= A.global #xffffff7e)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff7f)))
      (a!3 (ite (and (not (= A.global #xffffff7f))
                     (not (= A.global #xffffff7e)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff7e))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000082 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff7e
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff7e))
                (not (= A.global #xffffff7d))
                (ite (= a!1 (bvadd #x00000082 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000082 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000082 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000082 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:51,067] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:51,075] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+132) != <nullptr>) && (gep[inbounds](A.global,0+0+132) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+132)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+132)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:51,087] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:51,090] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff7d))
                     (not (= A.global #xffffff7c)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000084 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff7d))
                     (not (= A.global #xffffff7c)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff7d)))
      (a!3 (ite (and (not (= A.global #xffffff7d))
                     (not (= A.global #xffffff7c)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff7c))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000084 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff7c
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff7c))
                (not (= A.global #xffffff7b))
                (ite (= a!1 (bvadd #x00000084 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000084 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000084 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000084 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:51,098] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:51,104] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+134) != <nullptr>) && (gep[inbounds](A.global,0+0+134) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+134)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+134)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:51,111] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:51,115] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff7b))
                     (not (= A.global #xffffff7a)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000086 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff7b))
                     (not (= A.global #xffffff7a)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff7b)))
      (a!3 (ite (and (not (= A.global #xffffff7b))
                     (not (= A.global #xffffff7a)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff7a))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000086 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff7a
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff7a))
                (not (= A.global #xffffff79))
                (ite (= a!1 (bvadd #x00000086 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000086 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000086 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000086 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:51,122] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:51,128] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+136) != <nullptr>) && (gep[inbounds](A.global,0+0+136) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+136)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+136)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:51,136] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:51,139] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff79))
                     (not (= A.global #xffffff78)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000088 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff79))
                     (not (= A.global #xffffff78)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff79)))
      (a!3 (ite (and (not (= A.global #xffffff79))
                     (not (= A.global #xffffff78)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff78))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000088 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff78
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff78))
                (not (= A.global #xffffff77))
                (ite (= a!1 (bvadd #x00000088 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000088 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000088 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000088 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:51,146] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:51,153] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+138) != <nullptr>) && (gep[inbounds](A.global,0+0+138) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+138)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+138)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:51,161] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:51,165] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff77))
                     (not (= A.global #xffffff76)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000008a A.global)))
      (a!2 (ite (and (not (= A.global #xffffff77))
                     (not (= A.global #xffffff76)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff77)))
      (a!3 (ite (and (not (= A.global #xffffff77))
                     (not (= A.global #xffffff76)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff76))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000008a A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff76
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff76))
                (not (= A.global #xffffff75))
                (ite (= a!1 (bvadd #x0000008a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000008a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000008a A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000008a A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:51,172] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:51,178] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+140) != <nullptr>) && (gep[inbounds](A.global,0+0+140) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+140)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+140)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:51,185] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:51,189] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff75))
                     (not (= A.global #xffffff74)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000008c A.global)))
      (a!2 (ite (and (not (= A.global #xffffff75))
                     (not (= A.global #xffffff74)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff75)))
      (a!3 (ite (and (not (= A.global #xffffff75))
                     (not (= A.global #xffffff74)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff74))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000008c A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff74
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff74))
                (not (= A.global #xffffff73))
                (ite (= a!1 (bvadd #x0000008c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000008c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000008c A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000008c A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:51,195] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:51,203] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+142) != <nullptr>) && (gep[inbounds](A.global,0+0+142) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+142)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+142)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:51,210] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:51,213] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff73))
                     (not (= A.global #xffffff72)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000008e A.global)))
      (a!2 (ite (and (not (= A.global #xffffff73))
                     (not (= A.global #xffffff72)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff73)))
      (a!3 (ite (and (not (= A.global #xffffff73))
                     (not (= A.global #xffffff72)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff72))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000008e A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff72
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff72))
                (not (= A.global #xffffff71))
                (ite (= a!1 (bvadd #x0000008e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000008e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000008e A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000008e A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:51,220] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:51,228] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+144) != <nullptr>) && (gep[inbounds](A.global,0+0+144) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+144)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+144)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:51,235] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:51,239] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff71))
                     (not (= A.global #xffffff70)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000090 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff71))
                     (not (= A.global #xffffff70)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff71)))
      (a!3 (ite (and (not (= A.global #xffffff71))
                     (not (= A.global #xffffff70)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff70))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000090 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff70
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff70))
                (not (= A.global #xffffff6f))
                (ite (= a!1 (bvadd #x00000090 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000090 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000090 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000090 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:51,246] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:51,253] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+146) != <nullptr>) && (gep[inbounds](A.global,0+0+146) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+146)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+146)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:51,261] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:51,264] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff6f))
                     (not (= A.global #xffffff6e)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000092 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff6f))
                     (not (= A.global #xffffff6e)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff6f)))
      (a!3 (ite (and (not (= A.global #xffffff6f))
                     (not (= A.global #xffffff6e)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff6e))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000092 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff6e
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff6e))
                (not (= A.global #xffffff6d))
                (ite (= a!1 (bvadd #x00000092 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000092 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000092 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000092 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:51,270] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:51,279] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+148) != <nullptr>) && (gep[inbounds](A.global,0+0+148) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+148)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+148)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:51,291] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:51,295] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff6d))
                     (not (= A.global #xffffff6c)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000094 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff6d))
                     (not (= A.global #xffffff6c)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff6d)))
      (a!3 (ite (and (not (= A.global #xffffff6d))
                     (not (= A.global #xffffff6c)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff6c))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000094 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff6c
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff6c))
                (not (= A.global #xffffff6b))
                (ite (= a!1 (bvadd #x00000094 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000094 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000094 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000094 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:51,302] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:51,309] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+150) != <nullptr>) && (gep[inbounds](A.global,0+0+150) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+150)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+150)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:51,317] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:51,320] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff6b))
                     (not (= A.global #xffffff6a)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000096 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff6b))
                     (not (= A.global #xffffff6a)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff6b)))
      (a!3 (ite (and (not (= A.global #xffffff6b))
                     (not (= A.global #xffffff6a)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff6a))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000096 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff6a
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff6a))
                (not (= A.global #xffffff69))
                (ite (= a!1 (bvadd #x00000096 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000096 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000096 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000096 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:51,327] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:51,334] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+152) != <nullptr>) && (gep[inbounds](A.global,0+0+152) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+152)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+152)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:51,342] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:51,345] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff69))
                     (not (= A.global #xffffff68)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000098 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff69))
                     (not (= A.global #xffffff68)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff69)))
      (a!3 (ite (and (not (= A.global #xffffff69))
                     (not (= A.global #xffffff68)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff68))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000098 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff68
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff68))
                (not (= A.global #xffffff67))
                (ite (= a!1 (bvadd #x00000098 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000098 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000098 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000098 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:51,352] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:51,360] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+154) != <nullptr>) && (gep[inbounds](A.global,0+0+154) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+154)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+154)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:51,366] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:51,370] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff67))
                     (not (= A.global #xffffff66)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000009a A.global)))
      (a!2 (ite (and (not (= A.global #xffffff67))
                     (not (= A.global #xffffff66)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff67)))
      (a!3 (ite (and (not (= A.global #xffffff67))
                     (not (= A.global #xffffff66)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff66))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000009a A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff66
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff66))
                (not (= A.global #xffffff65))
                (ite (= a!1 (bvadd #x0000009a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000009a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000009a A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000009a A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:51,376] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:51,385] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+156) != <nullptr>) && (gep[inbounds](A.global,0+0+156) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+156)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+156)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:51,392] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:51,396] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff65))
                     (not (= A.global #xffffff64)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000009c A.global)))
      (a!2 (ite (and (not (= A.global #xffffff65))
                     (not (= A.global #xffffff64)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff65)))
      (a!3 (ite (and (not (= A.global #xffffff65))
                     (not (= A.global #xffffff64)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff64))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000009c A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff64
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff64))
                (not (= A.global #xffffff63))
                (ite (= a!1 (bvadd #x0000009c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000009c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000009c A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000009c A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:51,402] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:51,410] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+158) != <nullptr>) && (gep[inbounds](A.global,0+0+158) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+158)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+158)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:51,417] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:51,420] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff63))
                     (not (= A.global #xffffff62)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000009e A.global)))
      (a!2 (ite (and (not (= A.global #xffffff63))
                     (not (= A.global #xffffff62)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff63)))
      (a!3 (ite (and (not (= A.global #xffffff63))
                     (not (= A.global #xffffff62)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff62))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000009e A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff62
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff62))
                (not (= A.global #xffffff61))
                (ite (= a!1 (bvadd #x0000009e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000009e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000009e A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000009e A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:51,428] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:51,436] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+160) != <nullptr>) && (gep[inbounds](A.global,0+0+160) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+160)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+160)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:51,443] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:51,447] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff61))
                     (not (= A.global #xffffff60)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000000a0 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff61))
                     (not (= A.global #xffffff60)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff61)))
      (a!3 (ite (and (not (= A.global #xffffff61))
                     (not (= A.global #xffffff60)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff60))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000000a0 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff60
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff60))
                (not (= A.global #xffffff5f))
                (ite (= a!1 (bvadd #x000000a0 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000000a0 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000000a0 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000000a0 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:51,454] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:51,462] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+162) != <nullptr>) && (gep[inbounds](A.global,0+0+162) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+162)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+162)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:51,469] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:51,472] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff5f))
                     (not (= A.global #xffffff5e)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000000a2 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff5f))
                     (not (= A.global #xffffff5e)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff5f)))
      (a!3 (ite (and (not (= A.global #xffffff5f))
                     (not (= A.global #xffffff5e)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff5e))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000000a2 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff5e
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff5e))
                (not (= A.global #xffffff5d))
                (ite (= a!1 (bvadd #x000000a2 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000000a2 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000000a2 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000000a2 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:51,478] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:51,493] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+164) != <nullptr>) && (gep[inbounds](A.global,0+0+164) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+164)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+164)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:51,500] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:51,504] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff5d))
                     (not (= A.global #xffffff5c)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000000a4 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff5d))
                     (not (= A.global #xffffff5c)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff5d)))
      (a!3 (ite (and (not (= A.global #xffffff5d))
                     (not (= A.global #xffffff5c)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff5c))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000000a4 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff5c
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff5c))
                (not (= A.global #xffffff5b))
                (ite (= a!1 (bvadd #x000000a4 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000000a4 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000000a4 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000000a4 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:51,510] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:51,518] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+166) != <nullptr>) && (gep[inbounds](A.global,0+0+166) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+166)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+166)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:51,525] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:51,529] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff5b))
                     (not (= A.global #xffffff5a)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000000a6 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff5b))
                     (not (= A.global #xffffff5a)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff5b)))
      (a!3 (ite (and (not (= A.global #xffffff5b))
                     (not (= A.global #xffffff5a)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff5a))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000000a6 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff5a
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff5a))
                (not (= A.global #xffffff59))
                (ite (= a!1 (bvadd #x000000a6 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000000a6 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000000a6 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000000a6 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:51,535] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:51,544] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+168) != <nullptr>) && (gep[inbounds](A.global,0+0+168) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+168)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+168)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:51,551] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:51,555] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff59))
                     (not (= A.global #xffffff58)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000000a8 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff59))
                     (not (= A.global #xffffff58)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff59)))
      (a!3 (ite (and (not (= A.global #xffffff59))
                     (not (= A.global #xffffff58)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff58))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000000a8 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff58
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff58))
                (not (= A.global #xffffff57))
                (ite (= a!1 (bvadd #x000000a8 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000000a8 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000000a8 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000000a8 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:51,561] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:51,569] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+170) != <nullptr>) && (gep[inbounds](A.global,0+0+170) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+170)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+170)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:51,576] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:51,579] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff57))
                     (not (= A.global #xffffff56)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000000aa A.global)))
      (a!2 (ite (and (not (= A.global #xffffff57))
                     (not (= A.global #xffffff56)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff57)))
      (a!3 (ite (and (not (= A.global #xffffff57))
                     (not (= A.global #xffffff56)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff56))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000000aa A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff56
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff56))
                (not (= A.global #xffffff55))
                (ite (= a!1 (bvadd #x000000aa A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000000aa A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000000aa A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000000aa A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:51,587] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:51,595] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+172) != <nullptr>) && (gep[inbounds](A.global,0+0+172) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+172)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+172)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:51,601] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:51,605] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff55))
                     (not (= A.global #xffffff54)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000000ac A.global)))
      (a!2 (ite (and (not (= A.global #xffffff55))
                     (not (= A.global #xffffff54)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff55)))
      (a!3 (ite (and (not (= A.global #xffffff55))
                     (not (= A.global #xffffff54)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff54))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000000ac A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff54
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff54))
                (not (= A.global #xffffff53))
                (ite (= a!1 (bvadd #x000000ac A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000000ac A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000000ac A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000000ac A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:51,611] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:51,619] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+174) != <nullptr>) && (gep[inbounds](A.global,0+0+174) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+174)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+174)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:51,626] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:51,629] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff53))
                     (not (= A.global #xffffff52)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000000ae A.global)))
      (a!2 (ite (and (not (= A.global #xffffff53))
                     (not (= A.global #xffffff52)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff53)))
      (a!3 (ite (and (not (= A.global #xffffff53))
                     (not (= A.global #xffffff52)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff52))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000000ae A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff52
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff52))
                (not (= A.global #xffffff51))
                (ite (= a!1 (bvadd #x000000ae A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000000ae A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000000ae A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000000ae A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:51,637] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:51,645] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+176) != <nullptr>) && (gep[inbounds](A.global,0+0+176) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+176)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+176)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:51,652] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:51,656] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff51))
                     (not (= A.global #xffffff50)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000000b0 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff51))
                     (not (= A.global #xffffff50)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff51)))
      (a!3 (ite (and (not (= A.global #xffffff51))
                     (not (= A.global #xffffff50)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff50))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000000b0 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff50
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff50))
                (not (= A.global #xffffff4f))
                (ite (= a!1 (bvadd #x000000b0 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000000b0 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000000b0 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000000b0 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:51,662] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:51,670] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+178) != <nullptr>) && (gep[inbounds](A.global,0+0+178) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+178)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+178)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:51,678] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:51,681] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff4f))
                     (not (= A.global #xffffff4e)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000000b2 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff4f))
                     (not (= A.global #xffffff4e)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff4f)))
      (a!3 (ite (and (not (= A.global #xffffff4f))
                     (not (= A.global #xffffff4e)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff4e))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000000b2 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff4e
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff4e))
                (not (= A.global #xffffff4d))
                (ite (= a!1 (bvadd #x000000b2 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000000b2 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000000b2 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000000b2 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:51,687] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:51,702] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+180) != <nullptr>) && (gep[inbounds](A.global,0+0+180) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+180)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+180)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:51,710] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:51,713] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff4d))
                     (not (= A.global #xffffff4c)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000000b4 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff4d))
                     (not (= A.global #xffffff4c)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff4d)))
      (a!3 (ite (and (not (= A.global #xffffff4d))
                     (not (= A.global #xffffff4c)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff4c))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000000b4 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff4c
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff4c))
                (not (= A.global #xffffff4b))
                (ite (= a!1 (bvadd #x000000b4 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000000b4 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000000b4 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000000b4 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:51,721] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:51,730] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+182) != <nullptr>) && (gep[inbounds](A.global,0+0+182) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+182)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+182)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:51,737] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:51,741] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff4b))
                     (not (= A.global #xffffff4a)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000000b6 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff4b))
                     (not (= A.global #xffffff4a)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff4b)))
      (a!3 (ite (and (not (= A.global #xffffff4b))
                     (not (= A.global #xffffff4a)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff4a))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000000b6 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff4a
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff4a))
                (not (= A.global #xffffff49))
                (ite (= a!1 (bvadd #x000000b6 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000000b6 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000000b6 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000000b6 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:51,749] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:51,757] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+184) != <nullptr>) && (gep[inbounds](A.global,0+0+184) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+184)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+184)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:51,765] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:51,769] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff49))
                     (not (= A.global #xffffff48)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000000b8 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff49))
                     (not (= A.global #xffffff48)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff49)))
      (a!3 (ite (and (not (= A.global #xffffff49))
                     (not (= A.global #xffffff48)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff48))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000000b8 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff48
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff48))
                (not (= A.global #xffffff47))
                (ite (= a!1 (bvadd #x000000b8 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000000b8 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000000b8 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000000b8 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:51,776] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:51,785] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+186) != <nullptr>) && (gep[inbounds](A.global,0+0+186) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+186)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+186)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:51,793] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:51,797] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff47))
                     (not (= A.global #xffffff46)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000000ba A.global)))
      (a!2 (ite (and (not (= A.global #xffffff47))
                     (not (= A.global #xffffff46)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff47)))
      (a!3 (ite (and (not (= A.global #xffffff47))
                     (not (= A.global #xffffff46)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff46))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000000ba A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff46
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff46))
                (not (= A.global #xffffff45))
                (ite (= a!1 (bvadd #x000000ba A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000000ba A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000000ba A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000000ba A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:51,805] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:51,814] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+188) != <nullptr>) && (gep[inbounds](A.global,0+0+188) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+188)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+188)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:51,821] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:51,825] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff45))
                     (not (= A.global #xffffff44)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000000bc A.global)))
      (a!2 (ite (and (not (= A.global #xffffff45))
                     (not (= A.global #xffffff44)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff45)))
      (a!3 (ite (and (not (= A.global #xffffff45))
                     (not (= A.global #xffffff44)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff44))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000000bc A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff44
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff44))
                (not (= A.global #xffffff43))
                (ite (= a!1 (bvadd #x000000bc A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000000bc A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000000bc A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000000bc A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:51,835] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:51,843] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+190) != <nullptr>) && (gep[inbounds](A.global,0+0+190) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+190)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+190)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:51,851] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:51,855] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff43))
                     (not (= A.global #xffffff42)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000000be A.global)))
      (a!2 (ite (and (not (= A.global #xffffff43))
                     (not (= A.global #xffffff42)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff43)))
      (a!3 (ite (and (not (= A.global #xffffff43))
                     (not (= A.global #xffffff42)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff42))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000000be A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff42
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff42))
                (not (= A.global #xffffff41))
                (ite (= a!1 (bvadd #x000000be A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000000be A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000000be A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000000be A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:51,865] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:51,875] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+192) != <nullptr>) && (gep[inbounds](A.global,0+0+192) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+192)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+192)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:51,885] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:51,891] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff41))
                     (not (= A.global #xffffff40)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000000c0 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff41))
                     (not (= A.global #xffffff40)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff41)))
      (a!3 (ite (and (not (= A.global #xffffff41))
                     (not (= A.global #xffffff40)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff40))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000000c0 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff40
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff40))
                (not (= A.global #xffffff3f))
                (ite (= a!1 (bvadd #x000000c0 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000000c0 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000000c0 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000000c0 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:51,905] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:51,914] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+194) != <nullptr>) && (gep[inbounds](A.global,0+0+194) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+194)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+194)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:51,924] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:51,928] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff3f))
                     (not (= A.global #xffffff3e)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000000c2 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff3f))
                     (not (= A.global #xffffff3e)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff3f)))
      (a!3 (ite (and (not (= A.global #xffffff3f))
                     (not (= A.global #xffffff3e)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff3e))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000000c2 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff3e
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff3e))
                (not (= A.global #xffffff3d))
                (ite (= a!1 (bvadd #x000000c2 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000000c2 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000000c2 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000000c2 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:51,937] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:51,946] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+196) != <nullptr>) && (gep[inbounds](A.global,0+0+196) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+196)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+196)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:51,954] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:51,957] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff3d))
                     (not (= A.global #xffffff3c)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000000c4 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff3d))
                     (not (= A.global #xffffff3c)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff3d)))
      (a!3 (ite (and (not (= A.global #xffffff3d))
                     (not (= A.global #xffffff3c)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff3c))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000000c4 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff3c
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff3c))
                (not (= A.global #xffffff3b))
                (ite (= a!1 (bvadd #x000000c4 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000000c4 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000000c4 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000000c4 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:51,964] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:51,974] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+198) != <nullptr>) && (gep[inbounds](A.global,0+0+198) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+198)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+198)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:51,980] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:51,984] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff3b))
                     (not (= A.global #xffffff3a)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000000c6 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff3b))
                     (not (= A.global #xffffff3a)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff3b)))
      (a!3 (ite (and (not (= A.global #xffffff3b))
                     (not (= A.global #xffffff3a)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff3a))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000000c6 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff3a
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff3a))
                (not (= A.global #xffffff39))
                (ite (= a!1 (bvadd #x000000c6 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000000c6 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000000c6 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000000c6 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:51,992] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:52,001] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+200) != <nullptr>) && (gep[inbounds](A.global,0+0+200) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+200)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+200)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:52,009] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:52,013] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff39))
                     (not (= A.global #xffffff38)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000000c8 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff39))
                     (not (= A.global #xffffff38)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff39)))
      (a!3 (ite (and (not (= A.global #xffffff39))
                     (not (= A.global #xffffff38)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff38))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000000c8 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff38
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff38))
                (not (= A.global #xffffff37))
                (ite (= a!1 (bvadd #x000000c8 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000000c8 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000000c8 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000000c8 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:52,020] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:52,030] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+202) != <nullptr>) && (gep[inbounds](A.global,0+0+202) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+202)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+202)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:52,038] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:52,042] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff37))
                     (not (= A.global #xffffff36)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000000ca A.global)))
      (a!2 (ite (and (not (= A.global #xffffff37))
                     (not (= A.global #xffffff36)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff37)))
      (a!3 (ite (and (not (= A.global #xffffff37))
                     (not (= A.global #xffffff36)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff36))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000000ca A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff36
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff36))
                (not (= A.global #xffffff35))
                (ite (= a!1 (bvadd #x000000ca A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000000ca A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000000ca A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000000ca A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:52,050] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:52,060] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+204) != <nullptr>) && (gep[inbounds](A.global,0+0+204) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+204)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+204)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:52,071] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:52,075] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff35))
                     (not (= A.global #xffffff34)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000000cc A.global)))
      (a!2 (ite (and (not (= A.global #xffffff35))
                     (not (= A.global #xffffff34)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff35)))
      (a!3 (ite (and (not (= A.global #xffffff35))
                     (not (= A.global #xffffff34)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff34))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000000cc A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff34
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff34))
                (not (= A.global #xffffff33))
                (ite (= a!1 (bvadd #x000000cc A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000000cc A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000000cc A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000000cc A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:52,082] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:52,091] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+206) != <nullptr>) && (gep[inbounds](A.global,0+0+206) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+206)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+206)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:52,104] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:52,107] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff33))
                     (not (= A.global #xffffff32)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000000ce A.global)))
      (a!2 (ite (and (not (= A.global #xffffff33))
                     (not (= A.global #xffffff32)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff33)))
      (a!3 (ite (and (not (= A.global #xffffff33))
                     (not (= A.global #xffffff32)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff32))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000000ce A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff32
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff32))
                (not (= A.global #xffffff31))
                (ite (= a!1 (bvadd #x000000ce A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000000ce A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000000ce A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000000ce A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:52,116] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:52,125] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+208) != <nullptr>) && (gep[inbounds](A.global,0+0+208) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+208)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+208)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:52,132] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:52,136] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff31))
                     (not (= A.global #xffffff30)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000000d0 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff31))
                     (not (= A.global #xffffff30)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff31)))
      (a!3 (ite (and (not (= A.global #xffffff31))
                     (not (= A.global #xffffff30)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff30))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000000d0 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff30
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff30))
                (not (= A.global #xffffff2f))
                (ite (= a!1 (bvadd #x000000d0 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000000d0 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000000d0 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000000d0 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:52,143] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:52,153] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+210) != <nullptr>) && (gep[inbounds](A.global,0+0+210) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+210)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+210)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:52,160] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:52,163] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff2f))
                     (not (= A.global #xffffff2e)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000000d2 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff2f))
                     (not (= A.global #xffffff2e)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff2f)))
      (a!3 (ite (and (not (= A.global #xffffff2f))
                     (not (= A.global #xffffff2e)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff2e))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000000d2 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff2e
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff2e))
                (not (= A.global #xffffff2d))
                (ite (= a!1 (bvadd #x000000d2 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000000d2 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000000d2 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000000d2 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:52,171] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:52,182] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+212) != <nullptr>) && (gep[inbounds](A.global,0+0+212) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+212)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+212)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:52,189] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:52,192] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff2d))
                     (not (= A.global #xffffff2c)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000000d4 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff2d))
                     (not (= A.global #xffffff2c)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff2d)))
      (a!3 (ite (and (not (= A.global #xffffff2d))
                     (not (= A.global #xffffff2c)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff2c))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000000d4 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff2c
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff2c))
                (not (= A.global #xffffff2b))
                (ite (= a!1 (bvadd #x000000d4 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000000d4 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000000d4 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000000d4 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:52,199] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:52,209] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+214) != <nullptr>) && (gep[inbounds](A.global,0+0+214) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+214)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+214)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:52,216] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:52,220] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff2b))
                     (not (= A.global #xffffff2a)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000000d6 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff2b))
                     (not (= A.global #xffffff2a)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff2b)))
      (a!3 (ite (and (not (= A.global #xffffff2b))
                     (not (= A.global #xffffff2a)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff2a))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000000d6 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff2a
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff2a))
                (not (= A.global #xffffff29))
                (ite (= a!1 (bvadd #x000000d6 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000000d6 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000000d6 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000000d6 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:52,228] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:52,236] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+216) != <nullptr>) && (gep[inbounds](A.global,0+0+216) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+216)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+216)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:52,245] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:52,248] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff29))
                     (not (= A.global #xffffff28)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000000d8 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff29))
                     (not (= A.global #xffffff28)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff29)))
      (a!3 (ite (and (not (= A.global #xffffff29))
                     (not (= A.global #xffffff28)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff28))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000000d8 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff28
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff28))
                (not (= A.global #xffffff27))
                (ite (= a!1 (bvadd #x000000d8 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000000d8 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000000d8 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000000d8 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:52,254] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:52,264] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+218) != <nullptr>) && (gep[inbounds](A.global,0+0+218) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+218)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+218)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:52,271] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:52,275] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff27))
                     (not (= A.global #xffffff26)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000000da A.global)))
      (a!2 (ite (and (not (= A.global #xffffff27))
                     (not (= A.global #xffffff26)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff27)))
      (a!3 (ite (and (not (= A.global #xffffff27))
                     (not (= A.global #xffffff26)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff26))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000000da A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff26
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff26))
                (not (= A.global #xffffff25))
                (ite (= a!1 (bvadd #x000000da A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000000da A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000000da A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000000da A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:52,281] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:52,292] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+220) != <nullptr>) && (gep[inbounds](A.global,0+0+220) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+220)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+220)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:52,306] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:52,309] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff25))
                     (not (= A.global #xffffff24)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000000dc A.global)))
      (a!2 (ite (and (not (= A.global #xffffff25))
                     (not (= A.global #xffffff24)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff25)))
      (a!3 (ite (and (not (= A.global #xffffff25))
                     (not (= A.global #xffffff24)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff24))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000000dc A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff24
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff24))
                (not (= A.global #xffffff23))
                (ite (= a!1 (bvadd #x000000dc A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000000dc A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000000dc A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000000dc A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:52,316] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:52,329] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+222) != <nullptr>) && (gep[inbounds](A.global,0+0+222) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+222)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+222)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:52,337] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:52,340] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff23))
                     (not (= A.global #xffffff22)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000000de A.global)))
      (a!2 (ite (and (not (= A.global #xffffff23))
                     (not (= A.global #xffffff22)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff23)))
      (a!3 (ite (and (not (= A.global #xffffff23))
                     (not (= A.global #xffffff22)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff22))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000000de A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff22
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff22))
                (not (= A.global #xffffff21))
                (ite (= a!1 (bvadd #x000000de A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000000de A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000000de A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000000de A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:52,347] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:52,357] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+224) != <nullptr>) && (gep[inbounds](A.global,0+0+224) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+224)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+224)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:52,364] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:52,368] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff21))
                     (not (= A.global #xffffff20)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000000e0 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff21))
                     (not (= A.global #xffffff20)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff21)))
      (a!3 (ite (and (not (= A.global #xffffff21))
                     (not (= A.global #xffffff20)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff20))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000000e0 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff20
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff20))
                (not (= A.global #xffffff1f))
                (ite (= a!1 (bvadd #x000000e0 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000000e0 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000000e0 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000000e0 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:52,376] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:52,385] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+226) != <nullptr>) && (gep[inbounds](A.global,0+0+226) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+226)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+226)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:52,392] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:52,396] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff1f))
                     (not (= A.global #xffffff1e)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000000e2 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff1f))
                     (not (= A.global #xffffff1e)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff1f)))
      (a!3 (ite (and (not (= A.global #xffffff1f))
                     (not (= A.global #xffffff1e)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff1e))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000000e2 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff1e
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff1e))
                (not (= A.global #xffffff1d))
                (ite (= a!1 (bvadd #x000000e2 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000000e2 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000000e2 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000000e2 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:52,403] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:52,412] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+228) != <nullptr>) && (gep[inbounds](A.global,0+0+228) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+228)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+228)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:52,419] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:52,423] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff1d))
                     (not (= A.global #xffffff1c)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000000e4 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff1d))
                     (not (= A.global #xffffff1c)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff1d)))
      (a!3 (ite (and (not (= A.global #xffffff1d))
                     (not (= A.global #xffffff1c)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff1c))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000000e4 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff1c
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff1c))
                (not (= A.global #xffffff1b))
                (ite (= a!1 (bvadd #x000000e4 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000000e4 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000000e4 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000000e4 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:52,430] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:52,439] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+230) != <nullptr>) && (gep[inbounds](A.global,0+0+230) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+230)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+230)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:52,446] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:52,450] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff1b))
                     (not (= A.global #xffffff1a)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000000e6 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff1b))
                     (not (= A.global #xffffff1a)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff1b)))
      (a!3 (ite (and (not (= A.global #xffffff1b))
                     (not (= A.global #xffffff1a)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff1a))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000000e6 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff1a
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff1a))
                (not (= A.global #xffffff19))
                (ite (= a!1 (bvadd #x000000e6 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000000e6 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000000e6 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000000e6 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:52,457] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:52,466] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+232) != <nullptr>) && (gep[inbounds](A.global,0+0+232) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+232)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+232)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:52,473] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:52,476] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff19))
                     (not (= A.global #xffffff18)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000000e8 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff19))
                     (not (= A.global #xffffff18)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff19)))
      (a!3 (ite (and (not (= A.global #xffffff19))
                     (not (= A.global #xffffff18)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff18))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000000e8 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff18
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff18))
                (not (= A.global #xffffff17))
                (ite (= a!1 (bvadd #x000000e8 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000000e8 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000000e8 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000000e8 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:52,483] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:52,492] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+234) != <nullptr>) && (gep[inbounds](A.global,0+0+234) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+234)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+234)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:52,499] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:52,508] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff17))
                     (not (= A.global #xffffff16)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000000ea A.global)))
      (a!2 (ite (and (not (= A.global #xffffff17))
                     (not (= A.global #xffffff16)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff17)))
      (a!3 (ite (and (not (= A.global #xffffff17))
                     (not (= A.global #xffffff16)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff16))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000000ea A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff16
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff16))
                (not (= A.global #xffffff15))
                (ite (= a!1 (bvadd #x000000ea A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000000ea A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000000ea A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000000ea A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:52,514] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:52,525] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+236) != <nullptr>) && (gep[inbounds](A.global,0+0+236) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+236)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+236)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:52,531] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:52,534] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff15))
                     (not (= A.global #xffffff14)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000000ec A.global)))
      (a!2 (ite (and (not (= A.global #xffffff15))
                     (not (= A.global #xffffff14)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff15)))
      (a!3 (ite (and (not (= A.global #xffffff15))
                     (not (= A.global #xffffff14)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff14))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000000ec A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff14
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff14))
                (not (= A.global #xffffff13))
                (ite (= a!1 (bvadd #x000000ec A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000000ec A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000000ec A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000000ec A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:52,541] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:52,550] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+238) != <nullptr>) && (gep[inbounds](A.global,0+0+238) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+238)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+238)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:52,557] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:52,561] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff13))
                     (not (= A.global #xffffff12)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000000ee A.global)))
      (a!2 (ite (and (not (= A.global #xffffff13))
                     (not (= A.global #xffffff12)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff13)))
      (a!3 (ite (and (not (= A.global #xffffff13))
                     (not (= A.global #xffffff12)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff12))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000000ee A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff12
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff12))
                (not (= A.global #xffffff11))
                (ite (= a!1 (bvadd #x000000ee A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000000ee A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000000ee A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000000ee A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:52,568] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:52,577] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+240) != <nullptr>) && (gep[inbounds](A.global,0+0+240) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+240)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+240)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:52,585] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:52,588] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff11))
                     (not (= A.global #xffffff10)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000000f0 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff11))
                     (not (= A.global #xffffff10)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff11)))
      (a!3 (ite (and (not (= A.global #xffffff11))
                     (not (= A.global #xffffff10)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff10))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000000f0 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff10
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff10))
                (not (= A.global #xffffff0f))
                (ite (= a!1 (bvadd #x000000f0 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000000f0 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000000f0 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000000f0 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:52,595] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:52,604] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+242) != <nullptr>) && (gep[inbounds](A.global,0+0+242) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+242)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+242)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:52,610] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:52,614] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff0f))
                     (not (= A.global #xffffff0e)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000000f2 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff0f))
                     (not (= A.global #xffffff0e)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff0f)))
      (a!3 (ite (and (not (= A.global #xffffff0f))
                     (not (= A.global #xffffff0e)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff0e))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000000f2 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff0e
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff0e))
                (not (= A.global #xffffff0d))
                (ite (= a!1 (bvadd #x000000f2 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000000f2 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000000f2 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000000f2 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:52,622] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:52,630] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+244) != <nullptr>) && (gep[inbounds](A.global,0+0+244) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+244)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+244)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:52,637] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:52,642] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff0d))
                     (not (= A.global #xffffff0c)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000000f4 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff0d))
                     (not (= A.global #xffffff0c)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff0d)))
      (a!3 (ite (and (not (= A.global #xffffff0d))
                     (not (= A.global #xffffff0c)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff0c))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000000f4 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff0c
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff0c))
                (not (= A.global #xffffff0b))
                (ite (= a!1 (bvadd #x000000f4 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000000f4 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000000f4 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000000f4 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:52,648] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:52,658] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+246) != <nullptr>) && (gep[inbounds](A.global,0+0+246) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+246)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+246)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:52,665] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:52,668] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff0b))
                     (not (= A.global #xffffff0a)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000000f6 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff0b))
                     (not (= A.global #xffffff0a)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff0b)))
      (a!3 (ite (and (not (= A.global #xffffff0b))
                     (not (= A.global #xffffff0a)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff0a))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000000f6 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff0a
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff0a))
                (not (= A.global #xffffff09))
                (ite (= a!1 (bvadd #x000000f6 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000000f6 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000000f6 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000000f6 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:52,676] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:52,685] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+248) != <nullptr>) && (gep[inbounds](A.global,0+0+248) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+248)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+248)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:52,692] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:52,695] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff09))
                     (not (= A.global #xffffff08)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000000f8 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff09))
                     (not (= A.global #xffffff08)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff09)))
      (a!3 (ite (and (not (= A.global #xffffff09))
                     (not (= A.global #xffffff08)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff08))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000000f8 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff08
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff08))
                (not (= A.global #xffffff07))
                (ite (= a!1 (bvadd #x000000f8 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000000f8 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000000f8 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000000f8 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:52,702] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:52,717] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+250) != <nullptr>) && (gep[inbounds](A.global,0+0+250) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+250)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+250)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:52,723] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:52,727] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff07))
                     (not (= A.global #xffffff06)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000000fa A.global)))
      (a!2 (ite (and (not (= A.global #xffffff07))
                     (not (= A.global #xffffff06)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff07)))
      (a!3 (ite (and (not (= A.global #xffffff07))
                     (not (= A.global #xffffff06)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff06))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000000fa A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff06
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff06))
                (not (= A.global #xffffff05))
                (ite (= a!1 (bvadd #x000000fa A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000000fa A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000000fa A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000000fa A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:52,735] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:52,744] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+252) != <nullptr>) && (gep[inbounds](A.global,0+0+252) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+252)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+252)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:52,751] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:52,754] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff05))
                     (not (= A.global #xffffff04)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000000fc A.global)))
      (a!2 (ite (and (not (= A.global #xffffff05))
                     (not (= A.global #xffffff04)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff05)))
      (a!3 (ite (and (not (= A.global #xffffff05))
                     (not (= A.global #xffffff04)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff04))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000000fc A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff04
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff04))
                (not (= A.global #xffffff03))
                (ite (= a!1 (bvadd #x000000fc A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000000fc A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000000fc A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000000fc A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:52,761] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:52,771] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+254) != <nullptr>) && (gep[inbounds](A.global,0+0+254) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+254)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+254)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:52,778] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:52,781] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff03))
                     (not (= A.global #xffffff02)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000000fe A.global)))
      (a!2 (ite (and (not (= A.global #xffffff03))
                     (not (= A.global #xffffff02)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff03)))
      (a!3 (ite (and (not (= A.global #xffffff03))
                     (not (= A.global #xffffff02)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff02))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000000fe A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff02
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff02))
                (not (= A.global #xffffff01))
                (ite (= a!1 (bvadd #x000000fe A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000000fe A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000000fe A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000000fe A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:52,790] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:52,800] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+256) != <nullptr>) && (gep[inbounds](A.global,0+0+256) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+256)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+256)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:52,807] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:52,810] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xffffff01))
                     (not (= A.global #xffffff00)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000100 A.global)))
      (a!2 (ite (and (not (= A.global #xffffff01))
                     (not (= A.global #xffffff00)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xffffff01)))
      (a!3 (ite (and (not (= A.global #xffffff01))
                     (not (= A.global #xffffff00)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xffffff00))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000100 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xffffff00
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xffffff00))
                (not (= A.global #xfffffeff))
                (ite (= a!1 (bvadd #x00000100 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000100 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000100 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000100 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:52,817] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:52,826] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+258) != <nullptr>) && (gep[inbounds](A.global,0+0+258) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+258)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+258)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:52,834] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:52,837] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffeff))
                     (not (= A.global #xfffffefe)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000102 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffeff))
                     (not (= A.global #xfffffefe)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffeff)))
      (a!3 (ite (and (not (= A.global #xfffffeff))
                     (not (= A.global #xfffffefe)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffefe))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000102 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffefe
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffefe))
                (not (= A.global #xfffffefd))
                (ite (= a!1 (bvadd #x00000102 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000102 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000102 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000102 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:52,844] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:52,854] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+260) != <nullptr>) && (gep[inbounds](A.global,0+0+260) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+260)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+260)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:52,862] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:52,865] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffefd))
                     (not (= A.global #xfffffefc)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000104 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffefd))
                     (not (= A.global #xfffffefc)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffefd)))
      (a!3 (ite (and (not (= A.global #xfffffefd))
                     (not (= A.global #xfffffefc)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffefc))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000104 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffefc
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffefc))
                (not (= A.global #xfffffefb))
                (ite (= a!1 (bvadd #x00000104 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000104 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000104 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000104 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:52,872] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:52,881] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+262) != <nullptr>) && (gep[inbounds](A.global,0+0+262) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+262)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+262)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:52,889] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:52,892] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffefb))
                     (not (= A.global #xfffffefa)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000106 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffefb))
                     (not (= A.global #xfffffefa)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffefb)))
      (a!3 (ite (and (not (= A.global #xfffffefb))
                     (not (= A.global #xfffffefa)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffefa))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000106 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffefa
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffefa))
                (not (= A.global #xfffffef9))
                (ite (= a!1 (bvadd #x00000106 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000106 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000106 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000106 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:52,899] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:52,915] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+264) != <nullptr>) && (gep[inbounds](A.global,0+0+264) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+264)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+264)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:52,922] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:52,925] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffef9))
                     (not (= A.global #xfffffef8)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000108 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffef9))
                     (not (= A.global #xfffffef8)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffef9)))
      (a!3 (ite (and (not (= A.global #xfffffef9))
                     (not (= A.global #xfffffef8)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffef8))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000108 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffef8
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffef8))
                (not (= A.global #xfffffef7))
                (ite (= a!1 (bvadd #x00000108 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000108 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000108 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000108 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:52,932] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:52,942] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+266) != <nullptr>) && (gep[inbounds](A.global,0+0+266) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+266)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+266)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:52,949] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:52,952] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffef7))
                     (not (= A.global #xfffffef6)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000010a A.global)))
      (a!2 (ite (and (not (= A.global #xfffffef7))
                     (not (= A.global #xfffffef6)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffef7)))
      (a!3 (ite (and (not (= A.global #xfffffef7))
                     (not (= A.global #xfffffef6)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffef6))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000010a A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffef6
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffef6))
                (not (= A.global #xfffffef5))
                (ite (= a!1 (bvadd #x0000010a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000010a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000010a A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000010a A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:52,959] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:52,969] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+268) != <nullptr>) && (gep[inbounds](A.global,0+0+268) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+268)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+268)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:52,976] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:52,979] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffef5))
                     (not (= A.global #xfffffef4)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000010c A.global)))
      (a!2 (ite (and (not (= A.global #xfffffef5))
                     (not (= A.global #xfffffef4)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffef5)))
      (a!3 (ite (and (not (= A.global #xfffffef5))
                     (not (= A.global #xfffffef4)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffef4))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000010c A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffef4
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffef4))
                (not (= A.global #xfffffef3))
                (ite (= a!1 (bvadd #x0000010c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000010c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000010c A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000010c A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:52,985] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:52,996] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+270) != <nullptr>) && (gep[inbounds](A.global,0+0+270) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+270)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+270)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:53,002] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:53,005] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffef3))
                     (not (= A.global #xfffffef2)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000010e A.global)))
      (a!2 (ite (and (not (= A.global #xfffffef3))
                     (not (= A.global #xfffffef2)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffef3)))
      (a!3 (ite (and (not (= A.global #xfffffef3))
                     (not (= A.global #xfffffef2)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffef2))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000010e A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffef2
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffef2))
                (not (= A.global #xfffffef1))
                (ite (= a!1 (bvadd #x0000010e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000010e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000010e A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000010e A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:53,013] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:53,023] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+272) != <nullptr>) && (gep[inbounds](A.global,0+0+272) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+272)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+272)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:53,030] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:53,033] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffef1))
                     (not (= A.global #xfffffef0)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000110 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffef1))
                     (not (= A.global #xfffffef0)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffef1)))
      (a!3 (ite (and (not (= A.global #xfffffef1))
                     (not (= A.global #xfffffef0)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffef0))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000110 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffef0
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffef0))
                (not (= A.global #xfffffeef))
                (ite (= a!1 (bvadd #x00000110 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000110 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000110 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000110 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:53,039] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:53,050] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+274) != <nullptr>) && (gep[inbounds](A.global,0+0+274) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+274)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+274)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:53,056] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:53,060] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffeef))
                     (not (= A.global #xfffffeee)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000112 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffeef))
                     (not (= A.global #xfffffeee)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffeef)))
      (a!3 (ite (and (not (= A.global #xfffffeef))
                     (not (= A.global #xfffffeee)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffeee))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000112 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffeee
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffeee))
                (not (= A.global #xfffffeed))
                (ite (= a!1 (bvadd #x00000112 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000112 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000112 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000112 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:53,067] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:53,076] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+276) != <nullptr>) && (gep[inbounds](A.global,0+0+276) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+276)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+276)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:53,083] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:53,087] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffeed))
                     (not (= A.global #xfffffeec)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000114 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffeed))
                     (not (= A.global #xfffffeec)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffeed)))
      (a!3 (ite (and (not (= A.global #xfffffeed))
                     (not (= A.global #xfffffeec)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffeec))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000114 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffeec
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffeec))
                (not (= A.global #xfffffeeb))
                (ite (= a!1 (bvadd #x00000114 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000114 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000114 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000114 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:53,093] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:53,104] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+278) != <nullptr>) && (gep[inbounds](A.global,0+0+278) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+278)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+278)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:53,111] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:53,119] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffeeb))
                     (not (= A.global #xfffffeea)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000116 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffeeb))
                     (not (= A.global #xfffffeea)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffeeb)))
      (a!3 (ite (and (not (= A.global #xfffffeeb))
                     (not (= A.global #xfffffeea)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffeea))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000116 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffeea
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffeea))
                (not (= A.global #xfffffee9))
                (ite (= a!1 (bvadd #x00000116 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000116 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000116 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000116 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:53,126] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:53,137] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+280) != <nullptr>) && (gep[inbounds](A.global,0+0+280) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+280)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+280)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:53,143] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:53,147] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffee9))
                     (not (= A.global #xfffffee8)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000118 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffee9))
                     (not (= A.global #xfffffee8)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffee9)))
      (a!3 (ite (and (not (= A.global #xfffffee9))
                     (not (= A.global #xfffffee8)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffee8))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000118 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffee8
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffee8))
                (not (= A.global #xfffffee7))
                (ite (= a!1 (bvadd #x00000118 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000118 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000118 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000118 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:53,154] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:53,164] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+282) != <nullptr>) && (gep[inbounds](A.global,0+0+282) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+282)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+282)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:53,171] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:53,175] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffee7))
                     (not (= A.global #xfffffee6)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000011a A.global)))
      (a!2 (ite (and (not (= A.global #xfffffee7))
                     (not (= A.global #xfffffee6)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffee7)))
      (a!3 (ite (and (not (= A.global #xfffffee7))
                     (not (= A.global #xfffffee6)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffee6))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000011a A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffee6
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffee6))
                (not (= A.global #xfffffee5))
                (ite (= a!1 (bvadd #x0000011a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000011a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000011a A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000011a A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:53,181] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:53,192] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+284) != <nullptr>) && (gep[inbounds](A.global,0+0+284) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+284)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+284)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:53,199] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:53,203] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffee5))
                     (not (= A.global #xfffffee4)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000011c A.global)))
      (a!2 (ite (and (not (= A.global #xfffffee5))
                     (not (= A.global #xfffffee4)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffee5)))
      (a!3 (ite (and (not (= A.global #xfffffee5))
                     (not (= A.global #xfffffee4)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffee4))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000011c A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffee4
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffee4))
                (not (= A.global #xfffffee3))
                (ite (= a!1 (bvadd #x0000011c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000011c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000011c A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000011c A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:53,209] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:53,220] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+286) != <nullptr>) && (gep[inbounds](A.global,0+0+286) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+286)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+286)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:53,227] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:53,230] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffee3))
                     (not (= A.global #xfffffee2)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000011e A.global)))
      (a!2 (ite (and (not (= A.global #xfffffee3))
                     (not (= A.global #xfffffee2)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffee3)))
      (a!3 (ite (and (not (= A.global #xfffffee3))
                     (not (= A.global #xfffffee2)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffee2))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000011e A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffee2
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffee2))
                (not (= A.global #xfffffee1))
                (ite (= a!1 (bvadd #x0000011e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000011e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000011e A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000011e A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:53,237] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:53,248] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+288) != <nullptr>) && (gep[inbounds](A.global,0+0+288) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+288)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+288)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:53,254] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:53,258] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffee1))
                     (not (= A.global #xfffffee0)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000120 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffee1))
                     (not (= A.global #xfffffee0)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffee1)))
      (a!3 (ite (and (not (= A.global #xfffffee1))
                     (not (= A.global #xfffffee0)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffee0))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000120 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffee0
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffee0))
                (not (= A.global #xfffffedf))
                (ite (= a!1 (bvadd #x00000120 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000120 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000120 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000120 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:53,265] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:53,275] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+290) != <nullptr>) && (gep[inbounds](A.global,0+0+290) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+290)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+290)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:53,281] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:53,286] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffedf))
                     (not (= A.global #xfffffede)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000122 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffedf))
                     (not (= A.global #xfffffede)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffedf)))
      (a!3 (ite (and (not (= A.global #xfffffedf))
                     (not (= A.global #xfffffede)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffede))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000122 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffede
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffede))
                (not (= A.global #xfffffedd))
                (ite (= a!1 (bvadd #x00000122 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000122 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000122 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000122 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:53,292] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:53,302] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+292) != <nullptr>) && (gep[inbounds](A.global,0+0+292) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+292)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+292)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:53,310] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:53,313] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffedd))
                     (not (= A.global #xfffffedc)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000124 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffedd))
                     (not (= A.global #xfffffedc)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffedd)))
      (a!3 (ite (and (not (= A.global #xfffffedd))
                     (not (= A.global #xfffffedc)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffedc))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000124 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffedc
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffedc))
                (not (= A.global #xfffffedb))
                (ite (= a!1 (bvadd #x00000124 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000124 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000124 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000124 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:53,326] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:53,337] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+294) != <nullptr>) && (gep[inbounds](A.global,0+0+294) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+294)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+294)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:53,344] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:53,347] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffedb))
                     (not (= A.global #xfffffeda)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000126 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffedb))
                     (not (= A.global #xfffffeda)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffedb)))
      (a!3 (ite (and (not (= A.global #xfffffedb))
                     (not (= A.global #xfffffeda)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffeda))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000126 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffeda
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffeda))
                (not (= A.global #xfffffed9))
                (ite (= a!1 (bvadd #x00000126 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000126 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000126 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000126 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:53,355] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:53,366] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+296) != <nullptr>) && (gep[inbounds](A.global,0+0+296) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+296)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+296)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:53,372] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:53,375] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffed9))
                     (not (= A.global #xfffffed8)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000128 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffed9))
                     (not (= A.global #xfffffed8)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffed9)))
      (a!3 (ite (and (not (= A.global #xfffffed9))
                     (not (= A.global #xfffffed8)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffed8))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000128 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffed8
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffed8))
                (not (= A.global #xfffffed7))
                (ite (= a!1 (bvadd #x00000128 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000128 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000128 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000128 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:53,382] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:53,393] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+298) != <nullptr>) && (gep[inbounds](A.global,0+0+298) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+298)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+298)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:53,400] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:53,403] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffed7))
                     (not (= A.global #xfffffed6)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000012a A.global)))
      (a!2 (ite (and (not (= A.global #xfffffed7))
                     (not (= A.global #xfffffed6)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffed7)))
      (a!3 (ite (and (not (= A.global #xfffffed7))
                     (not (= A.global #xfffffed6)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffed6))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000012a A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffed6
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffed6))
                (not (= A.global #xfffffed5))
                (ite (= a!1 (bvadd #x0000012a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000012a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000012a A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000012a A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:53,411] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:53,421] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+300) != <nullptr>) && (gep[inbounds](A.global,0+0+300) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+300)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+300)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:53,428] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:53,432] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffed5))
                     (not (= A.global #xfffffed4)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000012c A.global)))
      (a!2 (ite (and (not (= A.global #xfffffed5))
                     (not (= A.global #xfffffed4)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffed5)))
      (a!3 (ite (and (not (= A.global #xfffffed5))
                     (not (= A.global #xfffffed4)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffed4))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000012c A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffed4
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffed4))
                (not (= A.global #xfffffed3))
                (ite (= a!1 (bvadd #x0000012c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000012c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000012c A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000012c A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:53,438] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:53,449] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+302) != <nullptr>) && (gep[inbounds](A.global,0+0+302) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+302)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+302)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:53,456] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:53,459] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffed3))
                     (not (= A.global #xfffffed2)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000012e A.global)))
      (a!2 (ite (and (not (= A.global #xfffffed3))
                     (not (= A.global #xfffffed2)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffed3)))
      (a!3 (ite (and (not (= A.global #xfffffed3))
                     (not (= A.global #xfffffed2)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffed2))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000012e A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffed2
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffed2))
                (not (= A.global #xfffffed1))
                (ite (= a!1 (bvadd #x0000012e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000012e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000012e A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000012e A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:53,466] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:53,477] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+304) != <nullptr>) && (gep[inbounds](A.global,0+0+304) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+304)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+304)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:53,484] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:53,488] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffed1))
                     (not (= A.global #xfffffed0)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000130 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffed1))
                     (not (= A.global #xfffffed0)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffed1)))
      (a!3 (ite (and (not (= A.global #xfffffed1))
                     (not (= A.global #xfffffed0)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffed0))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000130 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffed0
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffed0))
                (not (= A.global #xfffffecf))
                (ite (= a!1 (bvadd #x00000130 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000130 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000130 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000130 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:53,494] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:53,505] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+306) != <nullptr>) && (gep[inbounds](A.global,0+0+306) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+306)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+306)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:53,512] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:53,515] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffecf))
                     (not (= A.global #xfffffece)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000132 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffecf))
                     (not (= A.global #xfffffece)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffecf)))
      (a!3 (ite (and (not (= A.global #xfffffecf))
                     (not (= A.global #xfffffece)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffece))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000132 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffece
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffece))
                (not (= A.global #xfffffecd))
                (ite (= a!1 (bvadd #x00000132 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000132 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000132 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000132 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:53,528] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:53,538] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+308) != <nullptr>) && (gep[inbounds](A.global,0+0+308) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+308)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+308)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:53,545] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:53,548] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffecd))
                     (not (= A.global #xfffffecc)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000134 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffecd))
                     (not (= A.global #xfffffecc)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffecd)))
      (a!3 (ite (and (not (= A.global #xfffffecd))
                     (not (= A.global #xfffffecc)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffecc))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000134 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffecc
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffecc))
                (not (= A.global #xfffffecb))
                (ite (= a!1 (bvadd #x00000134 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000134 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000134 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000134 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:53,555] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:53,566] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+310) != <nullptr>) && (gep[inbounds](A.global,0+0+310) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+310)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+310)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:53,573] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:53,577] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffecb))
                     (not (= A.global #xfffffeca)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000136 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffecb))
                     (not (= A.global #xfffffeca)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffecb)))
      (a!3 (ite (and (not (= A.global #xfffffecb))
                     (not (= A.global #xfffffeca)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffeca))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000136 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffeca
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffeca))
                (not (= A.global #xfffffec9))
                (ite (= a!1 (bvadd #x00000136 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000136 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000136 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000136 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:53,584] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:53,595] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+312) != <nullptr>) && (gep[inbounds](A.global,0+0+312) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+312)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+312)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:53,602] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:53,605] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffec9))
                     (not (= A.global #xfffffec8)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000138 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffec9))
                     (not (= A.global #xfffffec8)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffec9)))
      (a!3 (ite (and (not (= A.global #xfffffec9))
                     (not (= A.global #xfffffec8)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffec8))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000138 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffec8
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffec8))
                (not (= A.global #xfffffec7))
                (ite (= a!1 (bvadd #x00000138 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000138 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000138 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000138 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:53,613] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:53,624] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+314) != <nullptr>) && (gep[inbounds](A.global,0+0+314) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+314)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+314)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:53,630] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:53,634] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffec7))
                     (not (= A.global #xfffffec6)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000013a A.global)))
      (a!2 (ite (and (not (= A.global #xfffffec7))
                     (not (= A.global #xfffffec6)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffec7)))
      (a!3 (ite (and (not (= A.global #xfffffec7))
                     (not (= A.global #xfffffec6)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffec6))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000013a A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffec6
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffec6))
                (not (= A.global #xfffffec5))
                (ite (= a!1 (bvadd #x0000013a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000013a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000013a A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000013a A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:53,640] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:53,651] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+316) != <nullptr>) && (gep[inbounds](A.global,0+0+316) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+316)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+316)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:53,658] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:53,662] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffec5))
                     (not (= A.global #xfffffec4)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000013c A.global)))
      (a!2 (ite (and (not (= A.global #xfffffec5))
                     (not (= A.global #xfffffec4)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffec5)))
      (a!3 (ite (and (not (= A.global #xfffffec5))
                     (not (= A.global #xfffffec4)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffec4))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000013c A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffec4
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffec4))
                (not (= A.global #xfffffec3))
                (ite (= a!1 (bvadd #x0000013c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000013c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000013c A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000013c A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:53,668] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:53,680] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+318) != <nullptr>) && (gep[inbounds](A.global,0+0+318) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+318)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+318)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:53,686] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:53,690] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffec3))
                     (not (= A.global #xfffffec2)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000013e A.global)))
      (a!2 (ite (and (not (= A.global #xfffffec3))
                     (not (= A.global #xfffffec2)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffec3)))
      (a!3 (ite (and (not (= A.global #xfffffec3))
                     (not (= A.global #xfffffec2)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffec2))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000013e A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffec2
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffec2))
                (not (= A.global #xfffffec1))
                (ite (= a!1 (bvadd #x0000013e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000013e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000013e A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000013e A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:53,697] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:53,708] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+320) != <nullptr>) && (gep[inbounds](A.global,0+0+320) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+320)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+320)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:53,715] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:53,718] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffec1))
                     (not (= A.global #xfffffec0)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000140 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffec1))
                     (not (= A.global #xfffffec0)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffec1)))
      (a!3 (ite (and (not (= A.global #xfffffec1))
                     (not (= A.global #xfffffec0)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffec0))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000140 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffec0
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffec0))
                (not (= A.global #xfffffebf))
                (ite (= a!1 (bvadd #x00000140 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000140 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000140 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000140 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:53,731] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:53,742] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+322) != <nullptr>) && (gep[inbounds](A.global,0+0+322) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+322)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+322)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:53,749] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:53,752] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffebf))
                     (not (= A.global #xfffffebe)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000142 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffebf))
                     (not (= A.global #xfffffebe)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffebf)))
      (a!3 (ite (and (not (= A.global #xfffffebf))
                     (not (= A.global #xfffffebe)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffebe))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000142 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffebe
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffebe))
                (not (= A.global #xfffffebd))
                (ite (= a!1 (bvadd #x00000142 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000142 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000142 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000142 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:53,759] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:53,770] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+324) != <nullptr>) && (gep[inbounds](A.global,0+0+324) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+324)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+324)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:53,777] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:53,781] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffebd))
                     (not (= A.global #xfffffebc)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000144 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffebd))
                     (not (= A.global #xfffffebc)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffebd)))
      (a!3 (ite (and (not (= A.global #xfffffebd))
                     (not (= A.global #xfffffebc)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffebc))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000144 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffebc
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffebc))
                (not (= A.global #xfffffebb))
                (ite (= a!1 (bvadd #x00000144 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000144 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000144 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000144 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:53,787] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:53,798] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+326) != <nullptr>) && (gep[inbounds](A.global,0+0+326) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+326)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+326)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:53,805] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:53,809] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffebb))
                     (not (= A.global #xfffffeba)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000146 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffebb))
                     (not (= A.global #xfffffeba)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffebb)))
      (a!3 (ite (and (not (= A.global #xfffffebb))
                     (not (= A.global #xfffffeba)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffeba))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000146 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffeba
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffeba))
                (not (= A.global #xfffffeb9))
                (ite (= a!1 (bvadd #x00000146 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000146 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000146 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000146 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:53,816] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:53,827] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+328) != <nullptr>) && (gep[inbounds](A.global,0+0+328) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+328)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+328)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:53,834] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:53,838] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffeb9))
                     (not (= A.global #xfffffeb8)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000148 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffeb9))
                     (not (= A.global #xfffffeb8)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffeb9)))
      (a!3 (ite (and (not (= A.global #xfffffeb9))
                     (not (= A.global #xfffffeb8)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffeb8))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000148 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffeb8
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffeb8))
                (not (= A.global #xfffffeb7))
                (ite (= a!1 (bvadd #x00000148 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000148 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000148 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000148 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:53,844] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:53,855] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+330) != <nullptr>) && (gep[inbounds](A.global,0+0+330) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+330)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+330)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:53,863] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:53,866] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffeb7))
                     (not (= A.global #xfffffeb6)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000014a A.global)))
      (a!2 (ite (and (not (= A.global #xfffffeb7))
                     (not (= A.global #xfffffeb6)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffeb7)))
      (a!3 (ite (and (not (= A.global #xfffffeb7))
                     (not (= A.global #xfffffeb6)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffeb6))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000014a A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffeb6
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffeb6))
                (not (= A.global #xfffffeb5))
                (ite (= a!1 (bvadd #x0000014a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000014a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000014a A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000014a A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:53,873] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:53,884] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+332) != <nullptr>) && (gep[inbounds](A.global,0+0+332) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+332)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+332)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:53,891] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:53,895] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffeb5))
                     (not (= A.global #xfffffeb4)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000014c A.global)))
      (a!2 (ite (and (not (= A.global #xfffffeb5))
                     (not (= A.global #xfffffeb4)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffeb5)))
      (a!3 (ite (and (not (= A.global #xfffffeb5))
                     (not (= A.global #xfffffeb4)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffeb4))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000014c A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffeb4
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffeb4))
                (not (= A.global #xfffffeb3))
                (ite (= a!1 (bvadd #x0000014c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000014c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000014c A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000014c A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:53,901] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:53,912] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+334) != <nullptr>) && (gep[inbounds](A.global,0+0+334) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+334)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+334)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:53,919] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:53,929] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffeb3))
                     (not (= A.global #xfffffeb2)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000014e A.global)))
      (a!2 (ite (and (not (= A.global #xfffffeb3))
                     (not (= A.global #xfffffeb2)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffeb3)))
      (a!3 (ite (and (not (= A.global #xfffffeb3))
                     (not (= A.global #xfffffeb2)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffeb2))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000014e A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffeb2
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffeb2))
                (not (= A.global #xfffffeb1))
                (ite (= a!1 (bvadd #x0000014e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000014e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000014e A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000014e A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:53,936] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:53,948] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+336) != <nullptr>) && (gep[inbounds](A.global,0+0+336) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+336)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+336)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:53,955] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:53,958] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffeb1))
                     (not (= A.global #xfffffeb0)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000150 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffeb1))
                     (not (= A.global #xfffffeb0)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffeb1)))
      (a!3 (ite (and (not (= A.global #xfffffeb1))
                     (not (= A.global #xfffffeb0)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffeb0))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000150 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffeb0
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffeb0))
                (not (= A.global #xfffffeaf))
                (ite (= a!1 (bvadd #x00000150 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000150 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000150 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000150 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:53,965] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:53,976] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+338) != <nullptr>) && (gep[inbounds](A.global,0+0+338) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+338)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+338)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:53,984] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:53,987] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffeaf))
                     (not (= A.global #xfffffeae)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000152 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffeaf))
                     (not (= A.global #xfffffeae)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffeaf)))
      (a!3 (ite (and (not (= A.global #xfffffeaf))
                     (not (= A.global #xfffffeae)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffeae))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000152 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffeae
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffeae))
                (not (= A.global #xfffffead))
                (ite (= a!1 (bvadd #x00000152 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000152 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000152 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000152 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:53,996] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:54,006] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+340) != <nullptr>) && (gep[inbounds](A.global,0+0+340) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+340)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+340)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:54,014] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:54,017] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffead))
                     (not (= A.global #xfffffeac)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000154 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffead))
                     (not (= A.global #xfffffeac)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffead)))
      (a!3 (ite (and (not (= A.global #xfffffead))
                     (not (= A.global #xfffffeac)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffeac))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000154 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffeac
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffeac))
                (not (= A.global #xfffffeab))
                (ite (= a!1 (bvadd #x00000154 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000154 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000154 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000154 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:54,024] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:54,035] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+342) != <nullptr>) && (gep[inbounds](A.global,0+0+342) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+342)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+342)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:54,042] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:54,046] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffeab))
                     (not (= A.global #xfffffeaa)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000156 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffeab))
                     (not (= A.global #xfffffeaa)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffeab)))
      (a!3 (ite (and (not (= A.global #xfffffeab))
                     (not (= A.global #xfffffeaa)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffeaa))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000156 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffeaa
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffeaa))
                (not (= A.global #xfffffea9))
                (ite (= a!1 (bvadd #x00000156 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000156 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000156 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000156 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:54,052] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:54,064] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+344) != <nullptr>) && (gep[inbounds](A.global,0+0+344) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+344)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+344)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:54,071] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:54,075] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffea9))
                     (not (= A.global #xfffffea8)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000158 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffea9))
                     (not (= A.global #xfffffea8)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffea9)))
      (a!3 (ite (and (not (= A.global #xfffffea9))
                     (not (= A.global #xfffffea8)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffea8))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000158 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffea8
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffea8))
                (not (= A.global #xfffffea7))
                (ite (= a!1 (bvadd #x00000158 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000158 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000158 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000158 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:54,082] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:54,093] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+346) != <nullptr>) && (gep[inbounds](A.global,0+0+346) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+346)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+346)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:54,100] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:54,104] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffea7))
                     (not (= A.global #xfffffea6)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000015a A.global)))
      (a!2 (ite (and (not (= A.global #xfffffea7))
                     (not (= A.global #xfffffea6)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffea7)))
      (a!3 (ite (and (not (= A.global #xfffffea7))
                     (not (= A.global #xfffffea6)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffea6))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000015a A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffea6
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffea6))
                (not (= A.global #xfffffea5))
                (ite (= a!1 (bvadd #x0000015a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000015a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000015a A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000015a A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:54,111] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:54,122] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+348) != <nullptr>) && (gep[inbounds](A.global,0+0+348) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+348)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+348)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:54,135] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:54,138] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffea5))
                     (not (= A.global #xfffffea4)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000015c A.global)))
      (a!2 (ite (and (not (= A.global #xfffffea5))
                     (not (= A.global #xfffffea4)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffea5)))
      (a!3 (ite (and (not (= A.global #xfffffea5))
                     (not (= A.global #xfffffea4)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffea4))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000015c A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffea4
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffea4))
                (not (= A.global #xfffffea3))
                (ite (= a!1 (bvadd #x0000015c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000015c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000015c A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000015c A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:54,144] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:54,156] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+350) != <nullptr>) && (gep[inbounds](A.global,0+0+350) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+350)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+350)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:54,163] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:54,167] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffea3))
                     (not (= A.global #xfffffea2)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000015e A.global)))
      (a!2 (ite (and (not (= A.global #xfffffea3))
                     (not (= A.global #xfffffea2)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffea3)))
      (a!3 (ite (and (not (= A.global #xfffffea3))
                     (not (= A.global #xfffffea2)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffea2))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000015e A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffea2
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffea2))
                (not (= A.global #xfffffea1))
                (ite (= a!1 (bvadd #x0000015e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000015e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000015e A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000015e A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:54,174] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:54,186] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+352) != <nullptr>) && (gep[inbounds](A.global,0+0+352) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+352)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+352)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:54,193] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:54,197] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffea1))
                     (not (= A.global #xfffffea0)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000160 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffea1))
                     (not (= A.global #xfffffea0)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffea1)))
      (a!3 (ite (and (not (= A.global #xfffffea1))
                     (not (= A.global #xfffffea0)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffea0))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000160 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffea0
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffea0))
                (not (= A.global #xfffffe9f))
                (ite (= a!1 (bvadd #x00000160 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000160 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000160 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000160 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:54,203] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:54,214] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+354) != <nullptr>) && (gep[inbounds](A.global,0+0+354) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+354)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+354)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:54,221] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:54,225] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe9f))
                     (not (= A.global #xfffffe9e)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000162 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe9f))
                     (not (= A.global #xfffffe9e)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe9f)))
      (a!3 (ite (and (not (= A.global #xfffffe9f))
                     (not (= A.global #xfffffe9e)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe9e))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000162 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe9e
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe9e))
                (not (= A.global #xfffffe9d))
                (ite (= a!1 (bvadd #x00000162 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000162 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000162 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000162 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:54,232] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:54,244] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+356) != <nullptr>) && (gep[inbounds](A.global,0+0+356) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+356)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+356)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:54,251] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:54,254] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe9d))
                     (not (= A.global #xfffffe9c)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000164 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe9d))
                     (not (= A.global #xfffffe9c)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe9d)))
      (a!3 (ite (and (not (= A.global #xfffffe9d))
                     (not (= A.global #xfffffe9c)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe9c))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000164 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe9c
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe9c))
                (not (= A.global #xfffffe9b))
                (ite (= a!1 (bvadd #x00000164 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000164 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000164 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000164 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:54,260] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:54,272] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+358) != <nullptr>) && (gep[inbounds](A.global,0+0+358) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+358)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+358)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:54,280] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:54,283] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe9b))
                     (not (= A.global #xfffffe9a)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000166 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe9b))
                     (not (= A.global #xfffffe9a)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe9b)))
      (a!3 (ite (and (not (= A.global #xfffffe9b))
                     (not (= A.global #xfffffe9a)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe9a))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000166 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe9a
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe9a))
                (not (= A.global #xfffffe99))
                (ite (= a!1 (bvadd #x00000166 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000166 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000166 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000166 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:54,291] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:54,302] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+360) != <nullptr>) && (gep[inbounds](A.global,0+0+360) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+360)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+360)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:54,309] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:54,312] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe99))
                     (not (= A.global #xfffffe98)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000168 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe99))
                     (not (= A.global #xfffffe98)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe99)))
      (a!3 (ite (and (not (= A.global #xfffffe99))
                     (not (= A.global #xfffffe98)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe98))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000168 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe98
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe98))
                (not (= A.global #xfffffe97))
                (ite (= a!1 (bvadd #x00000168 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000168 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000168 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000168 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:54,319] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:54,337] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+362) != <nullptr>) && (gep[inbounds](A.global,0+0+362) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+362)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+362)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:54,344] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:54,347] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe97))
                     (not (= A.global #xfffffe96)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000016a A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe97))
                     (not (= A.global #xfffffe96)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe97)))
      (a!3 (ite (and (not (= A.global #xfffffe97))
                     (not (= A.global #xfffffe96)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe96))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000016a A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe96
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe96))
                (not (= A.global #xfffffe95))
                (ite (= a!1 (bvadd #x0000016a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000016a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000016a A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000016a A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:54,354] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:54,366] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+364) != <nullptr>) && (gep[inbounds](A.global,0+0+364) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+364)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+364)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:54,373] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:54,377] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe95))
                     (not (= A.global #xfffffe94)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000016c A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe95))
                     (not (= A.global #xfffffe94)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe95)))
      (a!3 (ite (and (not (= A.global #xfffffe95))
                     (not (= A.global #xfffffe94)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe94))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000016c A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe94
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe94))
                (not (= A.global #xfffffe93))
                (ite (= a!1 (bvadd #x0000016c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000016c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000016c A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000016c A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:54,383] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:54,395] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+366) != <nullptr>) && (gep[inbounds](A.global,0+0+366) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+366)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+366)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:54,402] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:54,406] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe93))
                     (not (= A.global #xfffffe92)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000016e A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe93))
                     (not (= A.global #xfffffe92)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe93)))
      (a!3 (ite (and (not (= A.global #xfffffe93))
                     (not (= A.global #xfffffe92)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe92))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000016e A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe92
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe92))
                (not (= A.global #xfffffe91))
                (ite (= a!1 (bvadd #x0000016e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000016e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000016e A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000016e A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:54,412] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:54,424] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+368) != <nullptr>) && (gep[inbounds](A.global,0+0+368) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+368)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+368)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:54,431] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:54,435] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe91))
                     (not (= A.global #xfffffe90)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000170 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe91))
                     (not (= A.global #xfffffe90)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe91)))
      (a!3 (ite (and (not (= A.global #xfffffe91))
                     (not (= A.global #xfffffe90)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe90))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000170 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe90
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe90))
                (not (= A.global #xfffffe8f))
                (ite (= a!1 (bvadd #x00000170 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000170 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000170 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000170 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:54,441] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:54,453] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+370) != <nullptr>) && (gep[inbounds](A.global,0+0+370) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+370)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+370)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:54,460] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:54,464] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe8f))
                     (not (= A.global #xfffffe8e)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000172 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe8f))
                     (not (= A.global #xfffffe8e)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe8f)))
      (a!3 (ite (and (not (= A.global #xfffffe8f))
                     (not (= A.global #xfffffe8e)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe8e))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000172 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe8e
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe8e))
                (not (= A.global #xfffffe8d))
                (ite (= a!1 (bvadd #x00000172 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000172 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000172 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000172 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:54,470] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:54,483] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+372) != <nullptr>) && (gep[inbounds](A.global,0+0+372) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+372)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+372)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:54,490] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:54,494] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe8d))
                     (not (= A.global #xfffffe8c)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000174 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe8d))
                     (not (= A.global #xfffffe8c)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe8d)))
      (a!3 (ite (and (not (= A.global #xfffffe8d))
                     (not (= A.global #xfffffe8c)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe8c))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000174 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe8c
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe8c))
                (not (= A.global #xfffffe8b))
                (ite (= a!1 (bvadd #x00000174 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000174 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000174 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000174 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:54,500] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:54,512] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+374) != <nullptr>) && (gep[inbounds](A.global,0+0+374) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+374)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+374)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:54,519] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:54,523] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe8b))
                     (not (= A.global #xfffffe8a)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000176 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe8b))
                     (not (= A.global #xfffffe8a)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe8b)))
      (a!3 (ite (and (not (= A.global #xfffffe8b))
                     (not (= A.global #xfffffe8a)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe8a))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000176 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe8a
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe8a))
                (not (= A.global #xfffffe89))
                (ite (= a!1 (bvadd #x00000176 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000176 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000176 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000176 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:54,530] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:54,548] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+376) != <nullptr>) && (gep[inbounds](A.global,0+0+376) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+376)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+376)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:54,555] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:54,558] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe89))
                     (not (= A.global #xfffffe88)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000178 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe89))
                     (not (= A.global #xfffffe88)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe89)))
      (a!3 (ite (and (not (= A.global #xfffffe89))
                     (not (= A.global #xfffffe88)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe88))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000178 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe88
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe88))
                (not (= A.global #xfffffe87))
                (ite (= a!1 (bvadd #x00000178 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000178 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000178 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000178 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:54,565] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:54,577] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+378) != <nullptr>) && (gep[inbounds](A.global,0+0+378) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+378)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+378)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:54,584] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:54,588] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe87))
                     (not (= A.global #xfffffe86)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000017a A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe87))
                     (not (= A.global #xfffffe86)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe87)))
      (a!3 (ite (and (not (= A.global #xfffffe87))
                     (not (= A.global #xfffffe86)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe86))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000017a A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe86
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe86))
                (not (= A.global #xfffffe85))
                (ite (= a!1 (bvadd #x0000017a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000017a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000017a A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000017a A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:54,594] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:54,607] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+380) != <nullptr>) && (gep[inbounds](A.global,0+0+380) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+380)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+380)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:54,613] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:54,618] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe85))
                     (not (= A.global #xfffffe84)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000017c A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe85))
                     (not (= A.global #xfffffe84)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe85)))
      (a!3 (ite (and (not (= A.global #xfffffe85))
                     (not (= A.global #xfffffe84)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe84))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000017c A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe84
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe84))
                (not (= A.global #xfffffe83))
                (ite (= a!1 (bvadd #x0000017c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000017c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000017c A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000017c A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:54,624] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:54,636] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+382) != <nullptr>) && (gep[inbounds](A.global,0+0+382) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+382)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+382)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:54,644] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:54,648] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe83))
                     (not (= A.global #xfffffe82)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000017e A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe83))
                     (not (= A.global #xfffffe82)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe83)))
      (a!3 (ite (and (not (= A.global #xfffffe83))
                     (not (= A.global #xfffffe82)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe82))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000017e A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe82
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe82))
                (not (= A.global #xfffffe81))
                (ite (= a!1 (bvadd #x0000017e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000017e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000017e A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000017e A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:54,654] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:54,667] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+384) != <nullptr>) && (gep[inbounds](A.global,0+0+384) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+384)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+384)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:54,675] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:54,678] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe81))
                     (not (= A.global #xfffffe80)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000180 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe81))
                     (not (= A.global #xfffffe80)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe81)))
      (a!3 (ite (and (not (= A.global #xfffffe81))
                     (not (= A.global #xfffffe80)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe80))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000180 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe80
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe80))
                (not (= A.global #xfffffe7f))
                (ite (= a!1 (bvadd #x00000180 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000180 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000180 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000180 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:54,686] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:54,698] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+386) != <nullptr>) && (gep[inbounds](A.global,0+0+386) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+386)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+386)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:54,705] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:54,709] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe7f))
                     (not (= A.global #xfffffe7e)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000182 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe7f))
                     (not (= A.global #xfffffe7e)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe7f)))
      (a!3 (ite (and (not (= A.global #xfffffe7f))
                     (not (= A.global #xfffffe7e)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe7e))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000182 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe7e
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe7e))
                (not (= A.global #xfffffe7d))
                (ite (= a!1 (bvadd #x00000182 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000182 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000182 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000182 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:54,717] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:54,730] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+388) != <nullptr>) && (gep[inbounds](A.global,0+0+388) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+388)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+388)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:54,743] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:54,747] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe7d))
                     (not (= A.global #xfffffe7c)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000184 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe7d))
                     (not (= A.global #xfffffe7c)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe7d)))
      (a!3 (ite (and (not (= A.global #xfffffe7d))
                     (not (= A.global #xfffffe7c)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe7c))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000184 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe7c
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe7c))
                (not (= A.global #xfffffe7b))
                (ite (= a!1 (bvadd #x00000184 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000184 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000184 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000184 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:54,753] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:54,765] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+390) != <nullptr>) && (gep[inbounds](A.global,0+0+390) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+390)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+390)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:54,772] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:54,776] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe7b))
                     (not (= A.global #xfffffe7a)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000186 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe7b))
                     (not (= A.global #xfffffe7a)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe7b)))
      (a!3 (ite (and (not (= A.global #xfffffe7b))
                     (not (= A.global #xfffffe7a)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe7a))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000186 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe7a
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe7a))
                (not (= A.global #xfffffe79))
                (ite (= a!1 (bvadd #x00000186 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000186 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000186 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000186 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:54,783] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:54,795] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+392) != <nullptr>) && (gep[inbounds](A.global,0+0+392) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+392)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+392)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:54,803] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:54,806] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe79))
                     (not (= A.global #xfffffe78)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000188 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe79))
                     (not (= A.global #xfffffe78)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe79)))
      (a!3 (ite (and (not (= A.global #xfffffe79))
                     (not (= A.global #xfffffe78)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe78))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000188 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe78
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe78))
                (not (= A.global #xfffffe77))
                (ite (= a!1 (bvadd #x00000188 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000188 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000188 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000188 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:54,812] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:54,825] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+394) != <nullptr>) && (gep[inbounds](A.global,0+0+394) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+394)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+394)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:54,832] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:54,836] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe77))
                     (not (= A.global #xfffffe76)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000018a A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe77))
                     (not (= A.global #xfffffe76)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe77)))
      (a!3 (ite (and (not (= A.global #xfffffe77))
                     (not (= A.global #xfffffe76)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe76))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000018a A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe76
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe76))
                (not (= A.global #xfffffe75))
                (ite (= a!1 (bvadd #x0000018a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000018a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000018a A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000018a A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:54,843] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:54,855] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+396) != <nullptr>) && (gep[inbounds](A.global,0+0+396) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+396)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+396)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:54,862] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:54,866] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe75))
                     (not (= A.global #xfffffe74)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000018c A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe75))
                     (not (= A.global #xfffffe74)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe75)))
      (a!3 (ite (and (not (= A.global #xfffffe75))
                     (not (= A.global #xfffffe74)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe74))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000018c A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe74
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe74))
                (not (= A.global #xfffffe73))
                (ite (= a!1 (bvadd #x0000018c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000018c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000018c A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000018c A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:54,872] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:54,885] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+398) != <nullptr>) && (gep[inbounds](A.global,0+0+398) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+398)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+398)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:54,892] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:54,895] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe73))
                     (not (= A.global #xfffffe72)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000018e A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe73))
                     (not (= A.global #xfffffe72)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe73)))
      (a!3 (ite (and (not (= A.global #xfffffe73))
                     (not (= A.global #xfffffe72)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe72))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000018e A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe72
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe72))
                (not (= A.global #xfffffe71))
                (ite (= a!1 (bvadd #x0000018e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000018e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000018e A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000018e A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:54,903] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:54,915] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+400) != <nullptr>) && (gep[inbounds](A.global,0+0+400) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+400)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+400)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:54,922] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:54,926] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe71))
                     (not (= A.global #xfffffe70)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000190 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe71))
                     (not (= A.global #xfffffe70)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe71)))
      (a!3 (ite (and (not (= A.global #xfffffe71))
                     (not (= A.global #xfffffe70)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe70))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000190 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe70
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe70))
                (not (= A.global #xfffffe6f))
                (ite (= a!1 (bvadd #x00000190 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000190 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000190 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000190 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:54,932] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:54,951] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+402) != <nullptr>) && (gep[inbounds](A.global,0+0+402) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+402)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+402)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:54,958] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:54,961] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe6f))
                     (not (= A.global #xfffffe6e)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000192 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe6f))
                     (not (= A.global #xfffffe6e)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe6f)))
      (a!3 (ite (and (not (= A.global #xfffffe6f))
                     (not (= A.global #xfffffe6e)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe6e))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000192 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe6e
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe6e))
                (not (= A.global #xfffffe6d))
                (ite (= a!1 (bvadd #x00000192 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000192 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000192 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000192 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:54,968] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:54,981] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+404) != <nullptr>) && (gep[inbounds](A.global,0+0+404) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+404)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+404)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:54,988] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:54,992] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe6d))
                     (not (= A.global #xfffffe6c)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000194 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe6d))
                     (not (= A.global #xfffffe6c)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe6d)))
      (a!3 (ite (and (not (= A.global #xfffffe6d))
                     (not (= A.global #xfffffe6c)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe6c))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000194 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe6c
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe6c))
                (not (= A.global #xfffffe6b))
                (ite (= a!1 (bvadd #x00000194 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000194 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000194 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000194 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:55,001] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:55,014] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+406) != <nullptr>) && (gep[inbounds](A.global,0+0+406) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+406)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+406)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:55,020] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:55,024] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe6b))
                     (not (= A.global #xfffffe6a)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000196 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe6b))
                     (not (= A.global #xfffffe6a)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe6b)))
      (a!3 (ite (and (not (= A.global #xfffffe6b))
                     (not (= A.global #xfffffe6a)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe6a))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000196 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe6a
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe6a))
                (not (= A.global #xfffffe69))
                (ite (= a!1 (bvadd #x00000196 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000196 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000196 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000196 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:55,032] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:55,045] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+408) != <nullptr>) && (gep[inbounds](A.global,0+0+408) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+408)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+408)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:55,052] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:55,055] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe69))
                     (not (= A.global #xfffffe68)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000198 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe69))
                     (not (= A.global #xfffffe68)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe69)))
      (a!3 (ite (and (not (= A.global #xfffffe69))
                     (not (= A.global #xfffffe68)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe68))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000198 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe68
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe68))
                (not (= A.global #xfffffe67))
                (ite (= a!1 (bvadd #x00000198 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000198 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000198 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000198 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:55,063] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:55,077] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+410) != <nullptr>) && (gep[inbounds](A.global,0+0+410) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+410)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+410)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:55,084] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:55,087] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe67))
                     (not (= A.global #xfffffe66)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000019a A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe67))
                     (not (= A.global #xfffffe66)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe67)))
      (a!3 (ite (and (not (= A.global #xfffffe67))
                     (not (= A.global #xfffffe66)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe66))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000019a A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe66
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe66))
                (not (= A.global #xfffffe65))
                (ite (= a!1 (bvadd #x0000019a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000019a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000019a A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000019a A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:55,094] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:55,107] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+412) != <nullptr>) && (gep[inbounds](A.global,0+0+412) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+412)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+412)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:55,114] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:55,118] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe65))
                     (not (= A.global #xfffffe64)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000019c A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe65))
                     (not (= A.global #xfffffe64)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe65)))
      (a!3 (ite (and (not (= A.global #xfffffe65))
                     (not (= A.global #xfffffe64)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe64))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000019c A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe64
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe64))
                (not (= A.global #xfffffe63))
                (ite (= a!1 (bvadd #x0000019c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000019c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000019c A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000019c A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:55,124] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:55,137] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+414) != <nullptr>) && (gep[inbounds](A.global,0+0+414) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+414)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+414)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:55,150] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:55,153] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe63))
                     (not (= A.global #xfffffe62)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000019e A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe63))
                     (not (= A.global #xfffffe62)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe63)))
      (a!3 (ite (and (not (= A.global #xfffffe63))
                     (not (= A.global #xfffffe62)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe62))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000019e A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe62
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe62))
                (not (= A.global #xfffffe61))
                (ite (= a!1 (bvadd #x0000019e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000019e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000019e A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000019e A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:55,160] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:55,174] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+416) != <nullptr>) && (gep[inbounds](A.global,0+0+416) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+416)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+416)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:55,180] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:55,183] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe61))
                     (not (= A.global #xfffffe60)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000001a0 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe61))
                     (not (= A.global #xfffffe60)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe61)))
      (a!3 (ite (and (not (= A.global #xfffffe61))
                     (not (= A.global #xfffffe60)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe60))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000001a0 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe60
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe60))
                (not (= A.global #xfffffe5f))
                (ite (= a!1 (bvadd #x000001a0 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000001a0 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000001a0 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000001a0 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:55,190] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:55,203] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+418) != <nullptr>) && (gep[inbounds](A.global,0+0+418) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+418)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+418)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:55,210] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:55,214] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe5f))
                     (not (= A.global #xfffffe5e)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000001a2 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe5f))
                     (not (= A.global #xfffffe5e)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe5f)))
      (a!3 (ite (and (not (= A.global #xfffffe5f))
                     (not (= A.global #xfffffe5e)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe5e))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000001a2 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe5e
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe5e))
                (not (= A.global #xfffffe5d))
                (ite (= a!1 (bvadd #x000001a2 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000001a2 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000001a2 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000001a2 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:55,220] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:55,234] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+420) != <nullptr>) && (gep[inbounds](A.global,0+0+420) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+420)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+420)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:55,241] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:55,245] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe5d))
                     (not (= A.global #xfffffe5c)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000001a4 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe5d))
                     (not (= A.global #xfffffe5c)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe5d)))
      (a!3 (ite (and (not (= A.global #xfffffe5d))
                     (not (= A.global #xfffffe5c)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe5c))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000001a4 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe5c
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe5c))
                (not (= A.global #xfffffe5b))
                (ite (= a!1 (bvadd #x000001a4 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000001a4 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000001a4 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000001a4 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:55,254] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:55,266] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+422) != <nullptr>) && (gep[inbounds](A.global,0+0+422) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+422)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+422)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:55,274] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:55,277] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe5b))
                     (not (= A.global #xfffffe5a)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000001a6 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe5b))
                     (not (= A.global #xfffffe5a)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe5b)))
      (a!3 (ite (and (not (= A.global #xfffffe5b))
                     (not (= A.global #xfffffe5a)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe5a))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000001a6 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe5a
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe5a))
                (not (= A.global #xfffffe59))
                (ite (= a!1 (bvadd #x000001a6 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000001a6 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000001a6 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000001a6 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:55,284] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:55,298] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+424) != <nullptr>) && (gep[inbounds](A.global,0+0+424) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+424)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+424)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:55,305] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:55,308] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe59))
                     (not (= A.global #xfffffe58)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000001a8 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe59))
                     (not (= A.global #xfffffe58)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe59)))
      (a!3 (ite (and (not (= A.global #xfffffe59))
                     (not (= A.global #xfffffe58)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe58))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000001a8 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe58
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe58))
                (not (= A.global #xfffffe57))
                (ite (= a!1 (bvadd #x000001a8 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000001a8 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000001a8 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000001a8 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:55,314] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:55,327] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+426) != <nullptr>) && (gep[inbounds](A.global,0+0+426) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+426)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+426)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:55,334] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:55,338] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe57))
                     (not (= A.global #xfffffe56)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000001aa A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe57))
                     (not (= A.global #xfffffe56)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe57)))
      (a!3 (ite (and (not (= A.global #xfffffe57))
                     (not (= A.global #xfffffe56)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe56))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000001aa A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe56
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe56))
                (not (= A.global #xfffffe55))
                (ite (= a!1 (bvadd #x000001aa A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000001aa A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000001aa A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000001aa A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:55,353] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:55,366] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+428) != <nullptr>) && (gep[inbounds](A.global,0+0+428) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+428)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+428)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:55,373] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:55,376] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe55))
                     (not (= A.global #xfffffe54)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000001ac A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe55))
                     (not (= A.global #xfffffe54)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe55)))
      (a!3 (ite (and (not (= A.global #xfffffe55))
                     (not (= A.global #xfffffe54)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe54))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000001ac A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe54
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe54))
                (not (= A.global #xfffffe53))
                (ite (= a!1 (bvadd #x000001ac A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000001ac A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000001ac A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000001ac A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:55,383] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:55,396] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+430) != <nullptr>) && (gep[inbounds](A.global,0+0+430) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+430)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+430)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:55,403] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:55,407] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe53))
                     (not (= A.global #xfffffe52)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000001ae A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe53))
                     (not (= A.global #xfffffe52)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe53)))
      (a!3 (ite (and (not (= A.global #xfffffe53))
                     (not (= A.global #xfffffe52)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe52))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000001ae A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe52
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe52))
                (not (= A.global #xfffffe51))
                (ite (= a!1 (bvadd #x000001ae A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000001ae A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000001ae A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000001ae A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:55,414] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:55,427] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+432) != <nullptr>) && (gep[inbounds](A.global,0+0+432) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+432)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+432)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:55,434] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:55,438] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe51))
                     (not (= A.global #xfffffe50)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000001b0 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe51))
                     (not (= A.global #xfffffe50)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe51)))
      (a!3 (ite (and (not (= A.global #xfffffe51))
                     (not (= A.global #xfffffe50)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe50))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000001b0 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe50
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe50))
                (not (= A.global #xfffffe4f))
                (ite (= a!1 (bvadd #x000001b0 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000001b0 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000001b0 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000001b0 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:55,447] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:55,461] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+434) != <nullptr>) && (gep[inbounds](A.global,0+0+434) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+434)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+434)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:55,468] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:55,471] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe4f))
                     (not (= A.global #xfffffe4e)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000001b2 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe4f))
                     (not (= A.global #xfffffe4e)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe4f)))
      (a!3 (ite (and (not (= A.global #xfffffe4f))
                     (not (= A.global #xfffffe4e)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe4e))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000001b2 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe4e
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe4e))
                (not (= A.global #xfffffe4d))
                (ite (= a!1 (bvadd #x000001b2 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000001b2 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000001b2 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000001b2 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:55,480] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:55,494] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+436) != <nullptr>) && (gep[inbounds](A.global,0+0+436) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+436)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+436)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:55,500] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:55,505] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe4d))
                     (not (= A.global #xfffffe4c)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000001b4 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe4d))
                     (not (= A.global #xfffffe4c)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe4d)))
      (a!3 (ite (and (not (= A.global #xfffffe4d))
                     (not (= A.global #xfffffe4c)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe4c))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000001b4 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe4c
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe4c))
                (not (= A.global #xfffffe4b))
                (ite (= a!1 (bvadd #x000001b4 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000001b4 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000001b4 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000001b4 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:55,511] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:55,524] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+438) != <nullptr>) && (gep[inbounds](A.global,0+0+438) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+438)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+438)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:55,531] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:55,535] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe4b))
                     (not (= A.global #xfffffe4a)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000001b6 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe4b))
                     (not (= A.global #xfffffe4a)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe4b)))
      (a!3 (ite (and (not (= A.global #xfffffe4b))
                     (not (= A.global #xfffffe4a)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe4a))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000001b6 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe4a
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe4a))
                (not (= A.global #xfffffe49))
                (ite (= a!1 (bvadd #x000001b6 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000001b6 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000001b6 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000001b6 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:55,542] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:55,561] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+440) != <nullptr>) && (gep[inbounds](A.global,0+0+440) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+440)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+440)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:55,568] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:55,571] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe49))
                     (not (= A.global #xfffffe48)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000001b8 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe49))
                     (not (= A.global #xfffffe48)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe49)))
      (a!3 (ite (and (not (= A.global #xfffffe49))
                     (not (= A.global #xfffffe48)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe48))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000001b8 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe48
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe48))
                (not (= A.global #xfffffe47))
                (ite (= a!1 (bvadd #x000001b8 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000001b8 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000001b8 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000001b8 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:55,578] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:55,591] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+442) != <nullptr>) && (gep[inbounds](A.global,0+0+442) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+442)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+442)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:55,598] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:55,602] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe47))
                     (not (= A.global #xfffffe46)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000001ba A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe47))
                     (not (= A.global #xfffffe46)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe47)))
      (a!3 (ite (and (not (= A.global #xfffffe47))
                     (not (= A.global #xfffffe46)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe46))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000001ba A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe46
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe46))
                (not (= A.global #xfffffe45))
                (ite (= a!1 (bvadd #x000001ba A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000001ba A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000001ba A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000001ba A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:55,609] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:55,623] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+444) != <nullptr>) && (gep[inbounds](A.global,0+0+444) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+444)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+444)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:55,630] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:55,633] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe45))
                     (not (= A.global #xfffffe44)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000001bc A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe45))
                     (not (= A.global #xfffffe44)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe45)))
      (a!3 (ite (and (not (= A.global #xfffffe45))
                     (not (= A.global #xfffffe44)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe44))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000001bc A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe44
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe44))
                (not (= A.global #xfffffe43))
                (ite (= a!1 (bvadd #x000001bc A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000001bc A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000001bc A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000001bc A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:55,640] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:55,653] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+446) != <nullptr>) && (gep[inbounds](A.global,0+0+446) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+446)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+446)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:55,660] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:55,664] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe43))
                     (not (= A.global #xfffffe42)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000001be A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe43))
                     (not (= A.global #xfffffe42)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe43)))
      (a!3 (ite (and (not (= A.global #xfffffe43))
                     (not (= A.global #xfffffe42)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe42))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000001be A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe42
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe42))
                (not (= A.global #xfffffe41))
                (ite (= a!1 (bvadd #x000001be A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000001be A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000001be A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000001be A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:55,672] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:55,685] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+448) != <nullptr>) && (gep[inbounds](A.global,0+0+448) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+448)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+448)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:55,692] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:55,695] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe41))
                     (not (= A.global #xfffffe40)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000001c0 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe41))
                     (not (= A.global #xfffffe40)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe41)))
      (a!3 (ite (and (not (= A.global #xfffffe41))
                     (not (= A.global #xfffffe40)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe40))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000001c0 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe40
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe40))
                (not (= A.global #xfffffe3f))
                (ite (= a!1 (bvadd #x000001c0 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000001c0 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000001c0 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000001c0 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:55,702] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:55,716] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+450) != <nullptr>) && (gep[inbounds](A.global,0+0+450) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+450)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+450)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:55,723] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:55,726] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe3f))
                     (not (= A.global #xfffffe3e)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000001c2 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe3f))
                     (not (= A.global #xfffffe3e)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe3f)))
      (a!3 (ite (and (not (= A.global #xfffffe3f))
                     (not (= A.global #xfffffe3e)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe3e))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000001c2 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe3e
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe3e))
                (not (= A.global #xfffffe3d))
                (ite (= a!1 (bvadd #x000001c2 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000001c2 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000001c2 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000001c2 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:55,734] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:55,748] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+452) != <nullptr>) && (gep[inbounds](A.global,0+0+452) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+452)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+452)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:55,760] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:55,763] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe3d))
                     (not (= A.global #xfffffe3c)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000001c4 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe3d))
                     (not (= A.global #xfffffe3c)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe3d)))
      (a!3 (ite (and (not (= A.global #xfffffe3d))
                     (not (= A.global #xfffffe3c)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe3c))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000001c4 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe3c
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe3c))
                (not (= A.global #xfffffe3b))
                (ite (= a!1 (bvadd #x000001c4 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000001c4 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000001c4 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000001c4 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:55,770] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:55,783] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+454) != <nullptr>) && (gep[inbounds](A.global,0+0+454) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+454)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+454)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:55,790] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:55,794] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe3b))
                     (not (= A.global #xfffffe3a)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000001c6 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe3b))
                     (not (= A.global #xfffffe3a)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe3b)))
      (a!3 (ite (and (not (= A.global #xfffffe3b))
                     (not (= A.global #xfffffe3a)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe3a))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000001c6 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe3a
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe3a))
                (not (= A.global #xfffffe39))
                (ite (= a!1 (bvadd #x000001c6 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000001c6 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000001c6 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000001c6 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:55,801] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:55,815] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+456) != <nullptr>) && (gep[inbounds](A.global,0+0+456) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+456)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+456)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:55,822] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:55,826] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe39))
                     (not (= A.global #xfffffe38)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000001c8 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe39))
                     (not (= A.global #xfffffe38)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe39)))
      (a!3 (ite (and (not (= A.global #xfffffe39))
                     (not (= A.global #xfffffe38)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe38))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000001c8 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe38
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe38))
                (not (= A.global #xfffffe37))
                (ite (= a!1 (bvadd #x000001c8 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000001c8 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000001c8 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000001c8 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:55,832] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:55,846] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+458) != <nullptr>) && (gep[inbounds](A.global,0+0+458) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+458)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+458)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:55,852] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:55,856] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe37))
                     (not (= A.global #xfffffe36)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000001ca A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe37))
                     (not (= A.global #xfffffe36)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe37)))
      (a!3 (ite (and (not (= A.global #xfffffe37))
                     (not (= A.global #xfffffe36)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe36))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000001ca A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe36
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe36))
                (not (= A.global #xfffffe35))
                (ite (= a!1 (bvadd #x000001ca A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000001ca A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000001ca A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000001ca A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:55,863] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:55,877] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+460) != <nullptr>) && (gep[inbounds](A.global,0+0+460) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+460)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+460)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:55,883] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:55,887] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe35))
                     (not (= A.global #xfffffe34)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000001cc A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe35))
                     (not (= A.global #xfffffe34)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe35)))
      (a!3 (ite (and (not (= A.global #xfffffe35))
                     (not (= A.global #xfffffe34)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe34))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000001cc A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe34
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe34))
                (not (= A.global #xfffffe33))
                (ite (= a!1 (bvadd #x000001cc A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000001cc A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000001cc A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000001cc A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:55,894] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:55,908] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+462) != <nullptr>) && (gep[inbounds](A.global,0+0+462) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+462)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+462)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:55,915] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:55,918] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe33))
                     (not (= A.global #xfffffe32)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000001ce A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe33))
                     (not (= A.global #xfffffe32)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe33)))
      (a!3 (ite (and (not (= A.global #xfffffe33))
                     (not (= A.global #xfffffe32)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe32))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000001ce A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe32
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe32))
                (not (= A.global #xfffffe31))
                (ite (= a!1 (bvadd #x000001ce A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000001ce A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000001ce A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000001ce A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:55,926] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:55,940] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+464) != <nullptr>) && (gep[inbounds](A.global,0+0+464) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+464)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+464)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:55,947] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:55,951] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe31))
                     (not (= A.global #xfffffe30)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000001d0 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe31))
                     (not (= A.global #xfffffe30)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe31)))
      (a!3 (ite (and (not (= A.global #xfffffe31))
                     (not (= A.global #xfffffe30)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe30))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000001d0 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe30
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe30))
                (not (= A.global #xfffffe2f))
                (ite (= a!1 (bvadd #x000001d0 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000001d0 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000001d0 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000001d0 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:55,963] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:55,978] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+466) != <nullptr>) && (gep[inbounds](A.global,0+0+466) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+466)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+466)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:55,984] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:55,988] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe2f))
                     (not (= A.global #xfffffe2e)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000001d2 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe2f))
                     (not (= A.global #xfffffe2e)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe2f)))
      (a!3 (ite (and (not (= A.global #xfffffe2f))
                     (not (= A.global #xfffffe2e)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe2e))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000001d2 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe2e
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe2e))
                (not (= A.global #xfffffe2d))
                (ite (= a!1 (bvadd #x000001d2 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000001d2 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000001d2 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000001d2 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:55,995] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:56,009] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+468) != <nullptr>) && (gep[inbounds](A.global,0+0+468) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+468)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+468)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:56,016] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:56,020] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe2d))
                     (not (= A.global #xfffffe2c)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000001d4 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe2d))
                     (not (= A.global #xfffffe2c)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe2d)))
      (a!3 (ite (and (not (= A.global #xfffffe2d))
                     (not (= A.global #xfffffe2c)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe2c))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000001d4 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe2c
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe2c))
                (not (= A.global #xfffffe2b))
                (ite (= a!1 (bvadd #x000001d4 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000001d4 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000001d4 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000001d4 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:56,027] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:56,041] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+470) != <nullptr>) && (gep[inbounds](A.global,0+0+470) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+470)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+470)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:56,048] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:56,052] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe2b))
                     (not (= A.global #xfffffe2a)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000001d6 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe2b))
                     (not (= A.global #xfffffe2a)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe2b)))
      (a!3 (ite (and (not (= A.global #xfffffe2b))
                     (not (= A.global #xfffffe2a)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe2a))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000001d6 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe2a
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe2a))
                (not (= A.global #xfffffe29))
                (ite (= a!1 (bvadd #x000001d6 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000001d6 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000001d6 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000001d6 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:56,058] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:56,073] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+472) != <nullptr>) && (gep[inbounds](A.global,0+0+472) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+472)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+472)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:56,080] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:56,083] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe29))
                     (not (= A.global #xfffffe28)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000001d8 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe29))
                     (not (= A.global #xfffffe28)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe29)))
      (a!3 (ite (and (not (= A.global #xfffffe29))
                     (not (= A.global #xfffffe28)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe28))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000001d8 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe28
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe28))
                (not (= A.global #xfffffe27))
                (ite (= a!1 (bvadd #x000001d8 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000001d8 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000001d8 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000001d8 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:56,090] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:56,104] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+474) != <nullptr>) && (gep[inbounds](A.global,0+0+474) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+474)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+474)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:56,111] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:56,114] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe27))
                     (not (= A.global #xfffffe26)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000001da A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe27))
                     (not (= A.global #xfffffe26)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe27)))
      (a!3 (ite (and (not (= A.global #xfffffe27))
                     (not (= A.global #xfffffe26)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe26))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000001da A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe26
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe26))
                (not (= A.global #xfffffe25))
                (ite (= a!1 (bvadd #x000001da A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000001da A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000001da A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000001da A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:56,121] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:56,135] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+476) != <nullptr>) && (gep[inbounds](A.global,0+0+476) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+476)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+476)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:56,143] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:56,146] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe25))
                     (not (= A.global #xfffffe24)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000001dc A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe25))
                     (not (= A.global #xfffffe24)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe25)))
      (a!3 (ite (and (not (= A.global #xfffffe25))
                     (not (= A.global #xfffffe24)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe24))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000001dc A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe24
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe24))
                (not (= A.global #xfffffe23))
                (ite (= a!1 (bvadd #x000001dc A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000001dc A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000001dc A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000001dc A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:56,153] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:56,173] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+478) != <nullptr>) && (gep[inbounds](A.global,0+0+478) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+478)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+478)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:56,180] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:56,183] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe23))
                     (not (= A.global #xfffffe22)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000001de A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe23))
                     (not (= A.global #xfffffe22)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe23)))
      (a!3 (ite (and (not (= A.global #xfffffe23))
                     (not (= A.global #xfffffe22)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe22))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000001de A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe22
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe22))
                (not (= A.global #xfffffe21))
                (ite (= a!1 (bvadd #x000001de A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000001de A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000001de A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000001de A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:56,191] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:56,205] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+480) != <nullptr>) && (gep[inbounds](A.global,0+0+480) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+480)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+480)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:56,212] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:56,216] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe21))
                     (not (= A.global #xfffffe20)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000001e0 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe21))
                     (not (= A.global #xfffffe20)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe21)))
      (a!3 (ite (and (not (= A.global #xfffffe21))
                     (not (= A.global #xfffffe20)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe20))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000001e0 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe20
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe20))
                (not (= A.global #xfffffe1f))
                (ite (= a!1 (bvadd #x000001e0 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000001e0 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000001e0 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000001e0 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:56,222] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:56,237] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+482) != <nullptr>) && (gep[inbounds](A.global,0+0+482) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+482)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+482)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:56,243] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:56,247] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe1f))
                     (not (= A.global #xfffffe1e)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000001e2 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe1f))
                     (not (= A.global #xfffffe1e)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe1f)))
      (a!3 (ite (and (not (= A.global #xfffffe1f))
                     (not (= A.global #xfffffe1e)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe1e))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000001e2 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe1e
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe1e))
                (not (= A.global #xfffffe1d))
                (ite (= a!1 (bvadd #x000001e2 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000001e2 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000001e2 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000001e2 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:56,254] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:56,268] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+484) != <nullptr>) && (gep[inbounds](A.global,0+0+484) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+484)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+484)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:56,275] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:56,279] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe1d))
                     (not (= A.global #xfffffe1c)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000001e4 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe1d))
                     (not (= A.global #xfffffe1c)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe1d)))
      (a!3 (ite (and (not (= A.global #xfffffe1d))
                     (not (= A.global #xfffffe1c)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe1c))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000001e4 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe1c
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe1c))
                (not (= A.global #xfffffe1b))
                (ite (= a!1 (bvadd #x000001e4 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000001e4 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000001e4 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000001e4 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:56,286] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:56,300] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+486) != <nullptr>) && (gep[inbounds](A.global,0+0+486) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+486)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+486)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:56,308] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:56,311] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe1b))
                     (not (= A.global #xfffffe1a)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000001e6 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe1b))
                     (not (= A.global #xfffffe1a)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe1b)))
      (a!3 (ite (and (not (= A.global #xfffffe1b))
                     (not (= A.global #xfffffe1a)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe1a))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000001e6 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe1a
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe1a))
                (not (= A.global #xfffffe19))
                (ite (= a!1 (bvadd #x000001e6 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000001e6 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000001e6 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000001e6 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:56,318] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:56,333] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+488) != <nullptr>) && (gep[inbounds](A.global,0+0+488) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+488)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+488)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:56,340] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:56,343] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe19))
                     (not (= A.global #xfffffe18)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000001e8 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe19))
                     (not (= A.global #xfffffe18)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe19)))
      (a!3 (ite (and (not (= A.global #xfffffe19))
                     (not (= A.global #xfffffe18)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe18))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000001e8 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe18
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe18))
                (not (= A.global #xfffffe17))
                (ite (= a!1 (bvadd #x000001e8 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000001e8 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000001e8 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000001e8 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:56,350] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:56,371] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+490) != <nullptr>) && (gep[inbounds](A.global,0+0+490) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+490)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+490)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:56,378] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:56,382] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe17))
                     (not (= A.global #xfffffe16)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000001ea A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe17))
                     (not (= A.global #xfffffe16)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe17)))
      (a!3 (ite (and (not (= A.global #xfffffe17))
                     (not (= A.global #xfffffe16)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe16))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000001ea A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe16
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe16))
                (not (= A.global #xfffffe15))
                (ite (= a!1 (bvadd #x000001ea A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000001ea A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000001ea A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000001ea A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:56,389] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:56,403] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+492) != <nullptr>) && (gep[inbounds](A.global,0+0+492) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+492)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+492)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:56,410] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:56,414] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe15))
                     (not (= A.global #xfffffe14)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000001ec A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe15))
                     (not (= A.global #xfffffe14)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe15)))
      (a!3 (ite (and (not (= A.global #xfffffe15))
                     (not (= A.global #xfffffe14)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe14))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000001ec A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe14
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe14))
                (not (= A.global #xfffffe13))
                (ite (= a!1 (bvadd #x000001ec A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000001ec A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000001ec A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000001ec A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:56,421] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:56,436] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+494) != <nullptr>) && (gep[inbounds](A.global,0+0+494) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+494)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+494)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:56,443] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:56,446] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe13))
                     (not (= A.global #xfffffe12)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000001ee A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe13))
                     (not (= A.global #xfffffe12)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe13)))
      (a!3 (ite (and (not (= A.global #xfffffe13))
                     (not (= A.global #xfffffe12)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe12))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000001ee A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe12
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe12))
                (not (= A.global #xfffffe11))
                (ite (= a!1 (bvadd #x000001ee A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000001ee A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000001ee A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000001ee A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:56,453] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:56,468] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+496) != <nullptr>) && (gep[inbounds](A.global,0+0+496) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+496)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+496)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:56,475] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:56,478] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe11))
                     (not (= A.global #xfffffe10)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000001f0 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe11))
                     (not (= A.global #xfffffe10)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe11)))
      (a!3 (ite (and (not (= A.global #xfffffe11))
                     (not (= A.global #xfffffe10)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe10))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000001f0 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe10
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe10))
                (not (= A.global #xfffffe0f))
                (ite (= a!1 (bvadd #x000001f0 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000001f0 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000001f0 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000001f0 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:56,484] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:56,499] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+498) != <nullptr>) && (gep[inbounds](A.global,0+0+498) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+498)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+498)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:56,507] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:56,510] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe0f))
                     (not (= A.global #xfffffe0e)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000001f2 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe0f))
                     (not (= A.global #xfffffe0e)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe0f)))
      (a!3 (ite (and (not (= A.global #xfffffe0f))
                     (not (= A.global #xfffffe0e)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe0e))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000001f2 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe0e
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe0e))
                (not (= A.global #xfffffe0d))
                (ite (= a!1 (bvadd #x000001f2 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000001f2 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000001f2 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000001f2 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:56,517] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:56,532] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+500) != <nullptr>) && (gep[inbounds](A.global,0+0+500) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+500)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+500)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:56,539] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:56,543] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe0d))
                     (not (= A.global #xfffffe0c)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000001f4 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe0d))
                     (not (= A.global #xfffffe0c)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe0d)))
      (a!3 (ite (and (not (= A.global #xfffffe0d))
                     (not (= A.global #xfffffe0c)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe0c))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000001f4 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe0c
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe0c))
                (not (= A.global #xfffffe0b))
                (ite (= a!1 (bvadd #x000001f4 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000001f4 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000001f4 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000001f4 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:56,549] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:56,570] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+502) != <nullptr>) && (gep[inbounds](A.global,0+0+502) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+502)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+502)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:56,577] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:56,580] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe0b))
                     (not (= A.global #xfffffe0a)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000001f6 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe0b))
                     (not (= A.global #xfffffe0a)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe0b)))
      (a!3 (ite (and (not (= A.global #xfffffe0b))
                     (not (= A.global #xfffffe0a)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe0a))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000001f6 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe0a
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe0a))
                (not (= A.global #xfffffe09))
                (ite (= a!1 (bvadd #x000001f6 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000001f6 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000001f6 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000001f6 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:56,588] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:56,602] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+504) != <nullptr>) && (gep[inbounds](A.global,0+0+504) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+504)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+504)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:56,610] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:56,614] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe09))
                     (not (= A.global #xfffffe08)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000001f8 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe09))
                     (not (= A.global #xfffffe08)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe09)))
      (a!3 (ite (and (not (= A.global #xfffffe09))
                     (not (= A.global #xfffffe08)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe08))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000001f8 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe08
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe08))
                (not (= A.global #xfffffe07))
                (ite (= a!1 (bvadd #x000001f8 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000001f8 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000001f8 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000001f8 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:56,620] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:56,635] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+506) != <nullptr>) && (gep[inbounds](A.global,0+0+506) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+506)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+506)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:56,642] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:56,646] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe07))
                     (not (= A.global #xfffffe06)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000001fa A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe07))
                     (not (= A.global #xfffffe06)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe07)))
      (a!3 (ite (and (not (= A.global #xfffffe07))
                     (not (= A.global #xfffffe06)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe06))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000001fa A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe06
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe06))
                (not (= A.global #xfffffe05))
                (ite (= a!1 (bvadd #x000001fa A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000001fa A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000001fa A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000001fa A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:56,653] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:56,668] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+508) != <nullptr>) && (gep[inbounds](A.global,0+0+508) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+508)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+508)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:56,675] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:56,679] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe05))
                     (not (= A.global #xfffffe04)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000001fc A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe05))
                     (not (= A.global #xfffffe04)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe05)))
      (a!3 (ite (and (not (= A.global #xfffffe05))
                     (not (= A.global #xfffffe04)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe04))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000001fc A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe04
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe04))
                (not (= A.global #xfffffe03))
                (ite (= a!1 (bvadd #x000001fc A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000001fc A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000001fc A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000001fc A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:56,685] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:56,700] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+510) != <nullptr>) && (gep[inbounds](A.global,0+0+510) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+510)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+510)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:56,707] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:56,711] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe03))
                     (not (= A.global #xfffffe02)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000001fe A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe03))
                     (not (= A.global #xfffffe02)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe03)))
      (a!3 (ite (and (not (= A.global #xfffffe03))
                     (not (= A.global #xfffffe02)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe02))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000001fe A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe02
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe02))
                (not (= A.global #xfffffe01))
                (ite (= a!1 (bvadd #x000001fe A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000001fe A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000001fe A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000001fe A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:56,726] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:56,741] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+512) != <nullptr>) && (gep[inbounds](A.global,0+0+512) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+512)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+512)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:56,748] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:56,752] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffe01))
                     (not (= A.global #xfffffe00)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000200 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffe01))
                     (not (= A.global #xfffffe00)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffe01)))
      (a!3 (ite (and (not (= A.global #xfffffe01))
                     (not (= A.global #xfffffe00)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffe00))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000200 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffe00
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffe00))
                (not (= A.global #xfffffdff))
                (ite (= a!1 (bvadd #x00000200 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000200 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000200 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000200 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:56,758] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:56,779] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+514) != <nullptr>) && (gep[inbounds](A.global,0+0+514) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+514)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+514)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:56,785] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:56,789] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffdff))
                     (not (= A.global #xfffffdfe)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000202 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffdff))
                     (not (= A.global #xfffffdfe)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffdff)))
      (a!3 (ite (and (not (= A.global #xfffffdff))
                     (not (= A.global #xfffffdfe)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffdfe))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000202 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffdfe
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffdfe))
                (not (= A.global #xfffffdfd))
                (ite (= a!1 (bvadd #x00000202 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000202 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000202 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000202 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:56,796] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:56,811] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+516) != <nullptr>) && (gep[inbounds](A.global,0+0+516) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+516)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+516)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:56,817] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:56,821] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffdfd))
                     (not (= A.global #xfffffdfc)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000204 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffdfd))
                     (not (= A.global #xfffffdfc)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffdfd)))
      (a!3 (ite (and (not (= A.global #xfffffdfd))
                     (not (= A.global #xfffffdfc)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffdfc))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000204 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffdfc
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffdfc))
                (not (= A.global #xfffffdfb))
                (ite (= a!1 (bvadd #x00000204 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000204 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000204 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000204 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:56,829] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:56,844] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+518) != <nullptr>) && (gep[inbounds](A.global,0+0+518) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+518)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+518)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:56,850] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:56,855] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffdfb))
                     (not (= A.global #xfffffdfa)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000206 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffdfb))
                     (not (= A.global #xfffffdfa)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffdfb)))
      (a!3 (ite (and (not (= A.global #xfffffdfb))
                     (not (= A.global #xfffffdfa)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffdfa))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000206 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffdfa
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffdfa))
                (not (= A.global #xfffffdf9))
                (ite (= a!1 (bvadd #x00000206 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000206 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000206 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000206 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:56,861] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:56,876] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+520) != <nullptr>) && (gep[inbounds](A.global,0+0+520) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+520)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+520)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:56,883] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:56,887] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffdf9))
                     (not (= A.global #xfffffdf8)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000208 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffdf9))
                     (not (= A.global #xfffffdf8)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffdf9)))
      (a!3 (ite (and (not (= A.global #xfffffdf9))
                     (not (= A.global #xfffffdf8)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffdf8))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000208 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffdf8
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffdf8))
                (not (= A.global #xfffffdf7))
                (ite (= a!1 (bvadd #x00000208 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000208 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000208 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000208 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:56,894] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:56,909] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+522) != <nullptr>) && (gep[inbounds](A.global,0+0+522) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+522)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+522)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:56,915] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:56,919] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffdf7))
                     (not (= A.global #xfffffdf6)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000020a A.global)))
      (a!2 (ite (and (not (= A.global #xfffffdf7))
                     (not (= A.global #xfffffdf6)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffdf7)))
      (a!3 (ite (and (not (= A.global #xfffffdf7))
                     (not (= A.global #xfffffdf6)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffdf6))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000020a A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffdf6
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffdf6))
                (not (= A.global #xfffffdf5))
                (ite (= a!1 (bvadd #x0000020a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000020a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000020a A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000020a A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:56,926] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:56,941] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+524) != <nullptr>) && (gep[inbounds](A.global,0+0+524) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+524)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+524)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:56,948] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:56,952] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffdf5))
                     (not (= A.global #xfffffdf4)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000020c A.global)))
      (a!2 (ite (and (not (= A.global #xfffffdf5))
                     (not (= A.global #xfffffdf4)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffdf5)))
      (a!3 (ite (and (not (= A.global #xfffffdf5))
                     (not (= A.global #xfffffdf4)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffdf4))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000020c A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffdf4
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffdf4))
                (not (= A.global #xfffffdf3))
                (ite (= a!1 (bvadd #x0000020c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000020c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000020c A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000020c A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:56,959] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:56,980] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+526) != <nullptr>) && (gep[inbounds](A.global,0+0+526) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+526)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+526)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:56,986] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:56,990] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffdf3))
                     (not (= A.global #xfffffdf2)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000020e A.global)))
      (a!2 (ite (and (not (= A.global #xfffffdf3))
                     (not (= A.global #xfffffdf2)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffdf3)))
      (a!3 (ite (and (not (= A.global #xfffffdf3))
                     (not (= A.global #xfffffdf2)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffdf2))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000020e A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffdf2
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffdf2))
                (not (= A.global #xfffffdf1))
                (ite (= a!1 (bvadd #x0000020e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000020e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000020e A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000020e A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:56,997] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:57,013] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+528) != <nullptr>) && (gep[inbounds](A.global,0+0+528) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+528)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+528)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:57,020] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:57,024] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffdf1))
                     (not (= A.global #xfffffdf0)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000210 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffdf1))
                     (not (= A.global #xfffffdf0)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffdf1)))
      (a!3 (ite (and (not (= A.global #xfffffdf1))
                     (not (= A.global #xfffffdf0)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffdf0))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000210 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffdf0
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffdf0))
                (not (= A.global #xfffffdef))
                (ite (= a!1 (bvadd #x00000210 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000210 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000210 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000210 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:57,030] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:57,045] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+530) != <nullptr>) && (gep[inbounds](A.global,0+0+530) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+530)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+530)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:57,053] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:57,056] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffdef))
                     (not (= A.global #xfffffdee)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000212 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffdef))
                     (not (= A.global #xfffffdee)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffdef)))
      (a!3 (ite (and (not (= A.global #xfffffdef))
                     (not (= A.global #xfffffdee)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffdee))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000212 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffdee
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffdee))
                (not (= A.global #xfffffded))
                (ite (= a!1 (bvadd #x00000212 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000212 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000212 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000212 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:57,062] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:57,078] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+532) != <nullptr>) && (gep[inbounds](A.global,0+0+532) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+532)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+532)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:57,086] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:57,089] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffded))
                     (not (= A.global #xfffffdec)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000214 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffded))
                     (not (= A.global #xfffffdec)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffded)))
      (a!3 (ite (and (not (= A.global #xfffffded))
                     (not (= A.global #xfffffdec)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffdec))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000214 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffdec
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffdec))
                (not (= A.global #xfffffdeb))
                (ite (= a!1 (bvadd #x00000214 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000214 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000214 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000214 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:57,096] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:57,111] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+534) != <nullptr>) && (gep[inbounds](A.global,0+0+534) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+534)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+534)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:57,118] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:57,121] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffdeb))
                     (not (= A.global #xfffffdea)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000216 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffdeb))
                     (not (= A.global #xfffffdea)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffdeb)))
      (a!3 (ite (and (not (= A.global #xfffffdeb))
                     (not (= A.global #xfffffdea)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffdea))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000216 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffdea
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffdea))
                (not (= A.global #xfffffde9))
                (ite (= a!1 (bvadd #x00000216 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000216 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000216 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000216 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:57,129] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:57,145] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+536) != <nullptr>) && (gep[inbounds](A.global,0+0+536) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+536)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+536)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:57,151] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:57,155] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffde9))
                     (not (= A.global #xfffffde8)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000218 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffde9))
                     (not (= A.global #xfffffde8)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffde9)))
      (a!3 (ite (and (not (= A.global #xfffffde9))
                     (not (= A.global #xfffffde8)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffde8))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000218 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffde8
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffde8))
                (not (= A.global #xfffffde7))
                (ite (= a!1 (bvadd #x00000218 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000218 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000218 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000218 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:57,162] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:57,183] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+538) != <nullptr>) && (gep[inbounds](A.global,0+0+538) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+538)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+538)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:57,189] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:57,194] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffde7))
                     (not (= A.global #xfffffde6)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000021a A.global)))
      (a!2 (ite (and (not (= A.global #xfffffde7))
                     (not (= A.global #xfffffde6)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffde7)))
      (a!3 (ite (and (not (= A.global #xfffffde7))
                     (not (= A.global #xfffffde6)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffde6))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000021a A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffde6
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffde6))
                (not (= A.global #xfffffde5))
                (ite (= a!1 (bvadd #x0000021a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000021a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000021a A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000021a A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:57,200] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:57,216] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+540) != <nullptr>) && (gep[inbounds](A.global,0+0+540) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+540)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+540)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:57,222] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:57,226] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffde5))
                     (not (= A.global #xfffffde4)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000021c A.global)))
      (a!2 (ite (and (not (= A.global #xfffffde5))
                     (not (= A.global #xfffffde4)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffde5)))
      (a!3 (ite (and (not (= A.global #xfffffde5))
                     (not (= A.global #xfffffde4)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffde4))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000021c A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffde4
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffde4))
                (not (= A.global #xfffffde3))
                (ite (= a!1 (bvadd #x0000021c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000021c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000021c A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000021c A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:57,233] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:57,248] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+542) != <nullptr>) && (gep[inbounds](A.global,0+0+542) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+542)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+542)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:57,255] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:57,258] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffde3))
                     (not (= A.global #xfffffde2)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000021e A.global)))
      (a!2 (ite (and (not (= A.global #xfffffde3))
                     (not (= A.global #xfffffde2)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffde3)))
      (a!3 (ite (and (not (= A.global #xfffffde3))
                     (not (= A.global #xfffffde2)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffde2))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000021e A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffde2
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffde2))
                (not (= A.global #xfffffde1))
                (ite (= a!1 (bvadd #x0000021e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000021e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000021e A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000021e A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:57,265] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:57,281] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+544) != <nullptr>) && (gep[inbounds](A.global,0+0+544) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+544)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+544)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:57,288] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:57,292] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffde1))
                     (not (= A.global #xfffffde0)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000220 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffde1))
                     (not (= A.global #xfffffde0)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffde1)))
      (a!3 (ite (and (not (= A.global #xfffffde1))
                     (not (= A.global #xfffffde0)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffde0))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000220 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffde0
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffde0))
                (not (= A.global #xfffffddf))
                (ite (= a!1 (bvadd #x00000220 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000220 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000220 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000220 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:57,298] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:57,313] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+546) != <nullptr>) && (gep[inbounds](A.global,0+0+546) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+546)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+546)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:57,321] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:57,324] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffddf))
                     (not (= A.global #xfffffdde)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000222 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffddf))
                     (not (= A.global #xfffffdde)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffddf)))
      (a!3 (ite (and (not (= A.global #xfffffddf))
                     (not (= A.global #xfffffdde)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffdde))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000222 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffdde
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffdde))
                (not (= A.global #xfffffddd))
                (ite (= a!1 (bvadd #x00000222 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000222 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000222 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000222 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:57,331] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:57,347] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+548) != <nullptr>) && (gep[inbounds](A.global,0+0+548) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+548)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+548)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:57,354] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:57,357] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffddd))
                     (not (= A.global #xfffffddc)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000224 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffddd))
                     (not (= A.global #xfffffddc)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffddd)))
      (a!3 (ite (and (not (= A.global #xfffffddd))
                     (not (= A.global #xfffffddc)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffddc))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000224 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffddc
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffddc))
                (not (= A.global #xfffffddb))
                (ite (= a!1 (bvadd #x00000224 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000224 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000224 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000224 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:57,365] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:57,385] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+550) != <nullptr>) && (gep[inbounds](A.global,0+0+550) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+550)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+550)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:57,394] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:57,398] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffddb))
                     (not (= A.global #xfffffdda)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000226 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffddb))
                     (not (= A.global #xfffffdda)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffddb)))
      (a!3 (ite (and (not (= A.global #xfffffddb))
                     (not (= A.global #xfffffdda)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffdda))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000226 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffdda
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffdda))
                (not (= A.global #xfffffdd9))
                (ite (= a!1 (bvadd #x00000226 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000226 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000226 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000226 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:57,405] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:57,420] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+552) != <nullptr>) && (gep[inbounds](A.global,0+0+552) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+552)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+552)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:57,428] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:57,431] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffdd9))
                     (not (= A.global #xfffffdd8)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000228 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffdd9))
                     (not (= A.global #xfffffdd8)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffdd9)))
      (a!3 (ite (and (not (= A.global #xfffffdd9))
                     (not (= A.global #xfffffdd8)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffdd8))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000228 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffdd8
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffdd8))
                (not (= A.global #xfffffdd7))
                (ite (= a!1 (bvadd #x00000228 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000228 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000228 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000228 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:57,438] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:57,454] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+554) != <nullptr>) && (gep[inbounds](A.global,0+0+554) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+554)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+554)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:57,460] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:57,464] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffdd7))
                     (not (= A.global #xfffffdd6)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000022a A.global)))
      (a!2 (ite (and (not (= A.global #xfffffdd7))
                     (not (= A.global #xfffffdd6)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffdd7)))
      (a!3 (ite (and (not (= A.global #xfffffdd7))
                     (not (= A.global #xfffffdd6)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffdd6))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000022a A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffdd6
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffdd6))
                (not (= A.global #xfffffdd5))
                (ite (= a!1 (bvadd #x0000022a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000022a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000022a A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000022a A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:57,471] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:57,487] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+556) != <nullptr>) && (gep[inbounds](A.global,0+0+556) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+556)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+556)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:57,494] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:57,498] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffdd5))
                     (not (= A.global #xfffffdd4)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000022c A.global)))
      (a!2 (ite (and (not (= A.global #xfffffdd5))
                     (not (= A.global #xfffffdd4)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffdd5)))
      (a!3 (ite (and (not (= A.global #xfffffdd5))
                     (not (= A.global #xfffffdd4)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffdd4))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000022c A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffdd4
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffdd4))
                (not (= A.global #xfffffdd3))
                (ite (= a!1 (bvadd #x0000022c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000022c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000022c A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000022c A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:57,504] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:57,520] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+558) != <nullptr>) && (gep[inbounds](A.global,0+0+558) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+558)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+558)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:57,527] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:57,531] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffdd3))
                     (not (= A.global #xfffffdd2)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000022e A.global)))
      (a!2 (ite (and (not (= A.global #xfffffdd3))
                     (not (= A.global #xfffffdd2)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffdd3)))
      (a!3 (ite (and (not (= A.global #xfffffdd3))
                     (not (= A.global #xfffffdd2)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffdd2))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000022e A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffdd2
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffdd2))
                (not (= A.global #xfffffdd1))
                (ite (= a!1 (bvadd #x0000022e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000022e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000022e A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000022e A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:57,538] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:57,554] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+560) != <nullptr>) && (gep[inbounds](A.global,0+0+560) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+560)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+560)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:57,561] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:57,564] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffdd1))
                     (not (= A.global #xfffffdd0)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000230 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffdd1))
                     (not (= A.global #xfffffdd0)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffdd1)))
      (a!3 (ite (and (not (= A.global #xfffffdd1))
                     (not (= A.global #xfffffdd0)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffdd0))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000230 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffdd0
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffdd0))
                (not (= A.global #xfffffdcf))
                (ite (= a!1 (bvadd #x00000230 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000230 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000230 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000230 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:57,571] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:57,592] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+562) != <nullptr>) && (gep[inbounds](A.global,0+0+562) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+562)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+562)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:57,599] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:57,603] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffdcf))
                     (not (= A.global #xfffffdce)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000232 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffdcf))
                     (not (= A.global #xfffffdce)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffdcf)))
      (a!3 (ite (and (not (= A.global #xfffffdcf))
                     (not (= A.global #xfffffdce)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffdce))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000232 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffdce
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffdce))
                (not (= A.global #xfffffdcd))
                (ite (= a!1 (bvadd #x00000232 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000232 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000232 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000232 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:57,610] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:57,625] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+564) != <nullptr>) && (gep[inbounds](A.global,0+0+564) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+564)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+564)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:57,632] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:57,636] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffdcd))
                     (not (= A.global #xfffffdcc)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000234 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffdcd))
                     (not (= A.global #xfffffdcc)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffdcd)))
      (a!3 (ite (and (not (= A.global #xfffffdcd))
                     (not (= A.global #xfffffdcc)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffdcc))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000234 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffdcc
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffdcc))
                (not (= A.global #xfffffdcb))
                (ite (= a!1 (bvadd #x00000234 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000234 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000234 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000234 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:57,642] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:57,658] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+566) != <nullptr>) && (gep[inbounds](A.global,0+0+566) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+566)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+566)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:57,665] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:57,669] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffdcb))
                     (not (= A.global #xfffffdca)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000236 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffdcb))
                     (not (= A.global #xfffffdca)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffdcb)))
      (a!3 (ite (and (not (= A.global #xfffffdcb))
                     (not (= A.global #xfffffdca)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffdca))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000236 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffdca
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffdca))
                (not (= A.global #xfffffdc9))
                (ite (= a!1 (bvadd #x00000236 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000236 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000236 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000236 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:57,676] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:57,693] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+568) != <nullptr>) && (gep[inbounds](A.global,0+0+568) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+568)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+568)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:57,700] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:57,703] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffdc9))
                     (not (= A.global #xfffffdc8)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000238 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffdc9))
                     (not (= A.global #xfffffdc8)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffdc9)))
      (a!3 (ite (and (not (= A.global #xfffffdc9))
                     (not (= A.global #xfffffdc8)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffdc8))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000238 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffdc8
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffdc8))
                (not (= A.global #xfffffdc7))
                (ite (= a!1 (bvadd #x00000238 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000238 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000238 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000238 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:57,710] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:57,727] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+570) != <nullptr>) && (gep[inbounds](A.global,0+0+570) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+570)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+570)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:57,733] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:57,736] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffdc7))
                     (not (= A.global #xfffffdc6)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000023a A.global)))
      (a!2 (ite (and (not (= A.global #xfffffdc7))
                     (not (= A.global #xfffffdc6)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffdc7)))
      (a!3 (ite (and (not (= A.global #xfffffdc7))
                     (not (= A.global #xfffffdc6)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffdc6))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000023a A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffdc6
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffdc6))
                (not (= A.global #xfffffdc5))
                (ite (= a!1 (bvadd #x0000023a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000023a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000023a A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000023a A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:57,744] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:57,761] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+572) != <nullptr>) && (gep[inbounds](A.global,0+0+572) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+572)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+572)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:57,767] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:57,771] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffdc5))
                     (not (= A.global #xfffffdc4)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000023c A.global)))
      (a!2 (ite (and (not (= A.global #xfffffdc5))
                     (not (= A.global #xfffffdc4)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffdc5)))
      (a!3 (ite (and (not (= A.global #xfffffdc5))
                     (not (= A.global #xfffffdc4)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffdc4))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000023c A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffdc4
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffdc4))
                (not (= A.global #xfffffdc3))
                (ite (= a!1 (bvadd #x0000023c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000023c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000023c A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000023c A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:57,778] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:57,799] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+574) != <nullptr>) && (gep[inbounds](A.global,0+0+574) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+574)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+574)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:57,807] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:57,810] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffdc3))
                     (not (= A.global #xfffffdc2)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000023e A.global)))
      (a!2 (ite (and (not (= A.global #xfffffdc3))
                     (not (= A.global #xfffffdc2)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffdc3)))
      (a!3 (ite (and (not (= A.global #xfffffdc3))
                     (not (= A.global #xfffffdc2)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffdc2))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000023e A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffdc2
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffdc2))
                (not (= A.global #xfffffdc1))
                (ite (= a!1 (bvadd #x0000023e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000023e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000023e A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000023e A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:57,817] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:57,833] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+576) != <nullptr>) && (gep[inbounds](A.global,0+0+576) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+576)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+576)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:57,840] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:57,844] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffdc1))
                     (not (= A.global #xfffffdc0)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000240 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffdc1))
                     (not (= A.global #xfffffdc0)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffdc1)))
      (a!3 (ite (and (not (= A.global #xfffffdc1))
                     (not (= A.global #xfffffdc0)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffdc0))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000240 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffdc0
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffdc0))
                (not (= A.global #xfffffdbf))
                (ite (= a!1 (bvadd #x00000240 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000240 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000240 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000240 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:57,850] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:57,866] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+578) != <nullptr>) && (gep[inbounds](A.global,0+0+578) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+578)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+578)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:57,873] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:57,876] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffdbf))
                     (not (= A.global #xfffffdbe)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000242 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffdbf))
                     (not (= A.global #xfffffdbe)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffdbf)))
      (a!3 (ite (and (not (= A.global #xfffffdbf))
                     (not (= A.global #xfffffdbe)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffdbe))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000242 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffdbe
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffdbe))
                (not (= A.global #xfffffdbd))
                (ite (= a!1 (bvadd #x00000242 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000242 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000242 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000242 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:57,883] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:57,899] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+580) != <nullptr>) && (gep[inbounds](A.global,0+0+580) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+580)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+580)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:57,907] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:57,910] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffdbd))
                     (not (= A.global #xfffffdbc)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000244 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffdbd))
                     (not (= A.global #xfffffdbc)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffdbd)))
      (a!3 (ite (and (not (= A.global #xfffffdbd))
                     (not (= A.global #xfffffdbc)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffdbc))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000244 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffdbc
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffdbc))
                (not (= A.global #xfffffdbb))
                (ite (= a!1 (bvadd #x00000244 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000244 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000244 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000244 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:57,916] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:57,933] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+582) != <nullptr>) && (gep[inbounds](A.global,0+0+582) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+582)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+582)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:57,939] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:57,943] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffdbb))
                     (not (= A.global #xfffffdba)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000246 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffdbb))
                     (not (= A.global #xfffffdba)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffdbb)))
      (a!3 (ite (and (not (= A.global #xfffffdbb))
                     (not (= A.global #xfffffdba)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffdba))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000246 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffdba
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffdba))
                (not (= A.global #xfffffdb9))
                (ite (= a!1 (bvadd #x00000246 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000246 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000246 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000246 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:57,950] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:57,967] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+584) != <nullptr>) && (gep[inbounds](A.global,0+0+584) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+584)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+584)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:57,973] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:57,977] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffdb9))
                     (not (= A.global #xfffffdb8)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000248 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffdb9))
                     (not (= A.global #xfffffdb8)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffdb9)))
      (a!3 (ite (and (not (= A.global #xfffffdb9))
                     (not (= A.global #xfffffdb8)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffdb8))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000248 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffdb8
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffdb8))
                (not (= A.global #xfffffdb7))
                (ite (= a!1 (bvadd #x00000248 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000248 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000248 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000248 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:57,984] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:58,006] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+586) != <nullptr>) && (gep[inbounds](A.global,0+0+586) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+586)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+586)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:58,014] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:58,017] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffdb7))
                     (not (= A.global #xfffffdb6)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000024a A.global)))
      (a!2 (ite (and (not (= A.global #xfffffdb7))
                     (not (= A.global #xfffffdb6)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffdb7)))
      (a!3 (ite (and (not (= A.global #xfffffdb7))
                     (not (= A.global #xfffffdb6)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffdb6))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000024a A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffdb6
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffdb6))
                (not (= A.global #xfffffdb5))
                (ite (= a!1 (bvadd #x0000024a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000024a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000024a A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000024a A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:58,024] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:58,040] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+588) != <nullptr>) && (gep[inbounds](A.global,0+0+588) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+588)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+588)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:58,048] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:58,051] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffdb5))
                     (not (= A.global #xfffffdb4)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000024c A.global)))
      (a!2 (ite (and (not (= A.global #xfffffdb5))
                     (not (= A.global #xfffffdb4)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffdb5)))
      (a!3 (ite (and (not (= A.global #xfffffdb5))
                     (not (= A.global #xfffffdb4)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffdb4))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000024c A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffdb4
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffdb4))
                (not (= A.global #xfffffdb3))
                (ite (= a!1 (bvadd #x0000024c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000024c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000024c A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000024c A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:58,058] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:58,075] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+590) != <nullptr>) && (gep[inbounds](A.global,0+0+590) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+590)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+590)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:58,082] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:58,085] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffdb3))
                     (not (= A.global #xfffffdb2)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000024e A.global)))
      (a!2 (ite (and (not (= A.global #xfffffdb3))
                     (not (= A.global #xfffffdb2)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffdb3)))
      (a!3 (ite (and (not (= A.global #xfffffdb3))
                     (not (= A.global #xfffffdb2)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffdb2))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000024e A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffdb2
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffdb2))
                (not (= A.global #xfffffdb1))
                (ite (= a!1 (bvadd #x0000024e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000024e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000024e A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000024e A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:58,093] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:58,110] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+592) != <nullptr>) && (gep[inbounds](A.global,0+0+592) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+592)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+592)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:58,117] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:58,120] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffdb1))
                     (not (= A.global #xfffffdb0)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000250 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffdb1))
                     (not (= A.global #xfffffdb0)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffdb1)))
      (a!3 (ite (and (not (= A.global #xfffffdb1))
                     (not (= A.global #xfffffdb0)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffdb0))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000250 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffdb0
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffdb0))
                (not (= A.global #xfffffdaf))
                (ite (= a!1 (bvadd #x00000250 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000250 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000250 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000250 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:58,127] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:58,144] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+594) != <nullptr>) && (gep[inbounds](A.global,0+0+594) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+594)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+594)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:58,151] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:58,155] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffdaf))
                     (not (= A.global #xfffffdae)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000252 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffdaf))
                     (not (= A.global #xfffffdae)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffdaf)))
      (a!3 (ite (and (not (= A.global #xfffffdaf))
                     (not (= A.global #xfffffdae)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffdae))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000252 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffdae
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffdae))
                (not (= A.global #xfffffdad))
                (ite (= a!1 (bvadd #x00000252 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000252 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000252 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000252 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:58,162] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:58,179] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+596) != <nullptr>) && (gep[inbounds](A.global,0+0+596) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+596)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+596)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:58,186] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:58,195] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffdad))
                     (not (= A.global #xfffffdac)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000254 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffdad))
                     (not (= A.global #xfffffdac)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffdad)))
      (a!3 (ite (and (not (= A.global #xfffffdad))
                     (not (= A.global #xfffffdac)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffdac))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000254 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffdac
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffdac))
                (not (= A.global #xfffffdab))
                (ite (= a!1 (bvadd #x00000254 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000254 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000254 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000254 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:58,202] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:58,219] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+598) != <nullptr>) && (gep[inbounds](A.global,0+0+598) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+598)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+598)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:58,227] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:58,230] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffdab))
                     (not (= A.global #xfffffdaa)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000256 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffdab))
                     (not (= A.global #xfffffdaa)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffdab)))
      (a!3 (ite (and (not (= A.global #xfffffdab))
                     (not (= A.global #xfffffdaa)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffdaa))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000256 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffdaa
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffdaa))
                (not (= A.global #xfffffda9))
                (ite (= a!1 (bvadd #x00000256 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000256 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000256 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000256 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:58,238] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:58,255] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+600) != <nullptr>) && (gep[inbounds](A.global,0+0+600) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+600)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+600)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:58,262] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:58,265] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffda9))
                     (not (= A.global #xfffffda8)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000258 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffda9))
                     (not (= A.global #xfffffda8)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffda9)))
      (a!3 (ite (and (not (= A.global #xfffffda9))
                     (not (= A.global #xfffffda8)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffda8))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000258 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffda8
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffda8))
                (not (= A.global #xfffffda7))
                (ite (= a!1 (bvadd #x00000258 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000258 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000258 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000258 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:58,271] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:58,289] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+602) != <nullptr>) && (gep[inbounds](A.global,0+0+602) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+602)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+602)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:58,295] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:58,299] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffda7))
                     (not (= A.global #xfffffda6)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000025a A.global)))
      (a!2 (ite (and (not (= A.global #xfffffda7))
                     (not (= A.global #xfffffda6)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffda7)))
      (a!3 (ite (and (not (= A.global #xfffffda7))
                     (not (= A.global #xfffffda6)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffda6))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000025a A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffda6
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffda6))
                (not (= A.global #xfffffda5))
                (ite (= a!1 (bvadd #x0000025a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000025a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000025a A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000025a A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:58,306] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:58,324] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+604) != <nullptr>) && (gep[inbounds](A.global,0+0+604) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+604)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+604)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:58,330] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:58,333] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffda5))
                     (not (= A.global #xfffffda4)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000025c A.global)))
      (a!2 (ite (and (not (= A.global #xfffffda5))
                     (not (= A.global #xfffffda4)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffda5)))
      (a!3 (ite (and (not (= A.global #xfffffda5))
                     (not (= A.global #xfffffda4)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffda4))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000025c A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffda4
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffda4))
                (not (= A.global #xfffffda3))
                (ite (= a!1 (bvadd #x0000025c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000025c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000025c A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000025c A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:58,340] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:58,358] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+606) != <nullptr>) && (gep[inbounds](A.global,0+0+606) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+606)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+606)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:58,365] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:58,369] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffda3))
                     (not (= A.global #xfffffda2)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000025e A.global)))
      (a!2 (ite (and (not (= A.global #xfffffda3))
                     (not (= A.global #xfffffda2)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffda3)))
      (a!3 (ite (and (not (= A.global #xfffffda3))
                     (not (= A.global #xfffffda2)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffda2))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000025e A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffda2
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffda2))
                (not (= A.global #xfffffda1))
                (ite (= a!1 (bvadd #x0000025e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000025e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000025e A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000025e A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:58,376] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:58,400] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+608) != <nullptr>) && (gep[inbounds](A.global,0+0+608) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+608)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+608)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:58,407] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:58,410] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffda1))
                     (not (= A.global #xfffffda0)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000260 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffda1))
                     (not (= A.global #xfffffda0)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffda1)))
      (a!3 (ite (and (not (= A.global #xfffffda1))
                     (not (= A.global #xfffffda0)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffda0))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000260 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffda0
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffda0))
                (not (= A.global #xfffffd9f))
                (ite (= a!1 (bvadd #x00000260 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000260 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000260 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000260 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:58,417] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:58,434] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+610) != <nullptr>) && (gep[inbounds](A.global,0+0+610) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+610)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+610)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:58,441] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:58,445] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd9f))
                     (not (= A.global #xfffffd9e)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000262 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd9f))
                     (not (= A.global #xfffffd9e)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd9f)))
      (a!3 (ite (and (not (= A.global #xfffffd9f))
                     (not (= A.global #xfffffd9e)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd9e))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000262 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd9e
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd9e))
                (not (= A.global #xfffffd9d))
                (ite (= a!1 (bvadd #x00000262 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000262 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000262 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000262 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:58,452] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:58,469] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+612) != <nullptr>) && (gep[inbounds](A.global,0+0+612) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+612)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+612)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:58,476] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:58,479] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd9d))
                     (not (= A.global #xfffffd9c)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000264 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd9d))
                     (not (= A.global #xfffffd9c)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd9d)))
      (a!3 (ite (and (not (= A.global #xfffffd9d))
                     (not (= A.global #xfffffd9c)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd9c))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000264 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd9c
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd9c))
                (not (= A.global #xfffffd9b))
                (ite (= a!1 (bvadd #x00000264 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000264 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000264 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000264 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:58,487] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:58,504] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+614) != <nullptr>) && (gep[inbounds](A.global,0+0+614) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+614)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+614)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:58,510] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:58,514] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd9b))
                     (not (= A.global #xfffffd9a)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000266 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd9b))
                     (not (= A.global #xfffffd9a)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd9b)))
      (a!3 (ite (and (not (= A.global #xfffffd9b))
                     (not (= A.global #xfffffd9a)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd9a))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000266 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd9a
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd9a))
                (not (= A.global #xfffffd99))
                (ite (= a!1 (bvadd #x00000266 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000266 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000266 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000266 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:58,521] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:58,539] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+616) != <nullptr>) && (gep[inbounds](A.global,0+0+616) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+616)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+616)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:58,545] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:58,549] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd99))
                     (not (= A.global #xfffffd98)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000268 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd99))
                     (not (= A.global #xfffffd98)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd99)))
      (a!3 (ite (and (not (= A.global #xfffffd99))
                     (not (= A.global #xfffffd98)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd98))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000268 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd98
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd98))
                (not (= A.global #xfffffd97))
                (ite (= a!1 (bvadd #x00000268 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000268 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000268 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000268 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:58,556] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:58,573] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+618) != <nullptr>) && (gep[inbounds](A.global,0+0+618) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+618)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+618)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:58,580] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:58,584] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd97))
                     (not (= A.global #xfffffd96)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000026a A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd97))
                     (not (= A.global #xfffffd96)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd97)))
      (a!3 (ite (and (not (= A.global #xfffffd97))
                     (not (= A.global #xfffffd96)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd96))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000026a A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd96
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd96))
                (not (= A.global #xfffffd95))
                (ite (= a!1 (bvadd #x0000026a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000026a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000026a A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000026a A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:58,591] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:58,616] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+620) != <nullptr>) && (gep[inbounds](A.global,0+0+620) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+620)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+620)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:58,622] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:58,625] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd95))
                     (not (= A.global #xfffffd94)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000026c A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd95))
                     (not (= A.global #xfffffd94)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd95)))
      (a!3 (ite (and (not (= A.global #xfffffd95))
                     (not (= A.global #xfffffd94)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd94))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000026c A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd94
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd94))
                (not (= A.global #xfffffd93))
                (ite (= a!1 (bvadd #x0000026c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000026c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000026c A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000026c A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:58,632] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:58,650] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+622) != <nullptr>) && (gep[inbounds](A.global,0+0+622) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+622)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+622)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:58,656] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:58,659] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd93))
                     (not (= A.global #xfffffd92)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000026e A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd93))
                     (not (= A.global #xfffffd92)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd93)))
      (a!3 (ite (and (not (= A.global #xfffffd93))
                     (not (= A.global #xfffffd92)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd92))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000026e A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd92
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd92))
                (not (= A.global #xfffffd91))
                (ite (= a!1 (bvadd #x0000026e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000026e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000026e A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000026e A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:58,667] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:58,684] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+624) != <nullptr>) && (gep[inbounds](A.global,0+0+624) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+624)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+624)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:58,691] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:58,696] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd91))
                     (not (= A.global #xfffffd90)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000270 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd91))
                     (not (= A.global #xfffffd90)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd91)))
      (a!3 (ite (and (not (= A.global #xfffffd91))
                     (not (= A.global #xfffffd90)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd90))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000270 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd90
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd90))
                (not (= A.global #xfffffd8f))
                (ite (= a!1 (bvadd #x00000270 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000270 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000270 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000270 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:58,702] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:58,719] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+626) != <nullptr>) && (gep[inbounds](A.global,0+0+626) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+626)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+626)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:58,727] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:58,730] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd8f))
                     (not (= A.global #xfffffd8e)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000272 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd8f))
                     (not (= A.global #xfffffd8e)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd8f)))
      (a!3 (ite (and (not (= A.global #xfffffd8f))
                     (not (= A.global #xfffffd8e)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd8e))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000272 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd8e
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd8e))
                (not (= A.global #xfffffd8d))
                (ite (= a!1 (bvadd #x00000272 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000272 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000272 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000272 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:58,737] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:58,755] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+628) != <nullptr>) && (gep[inbounds](A.global,0+0+628) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+628)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+628)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:58,762] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:58,766] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd8d))
                     (not (= A.global #xfffffd8c)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000274 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd8d))
                     (not (= A.global #xfffffd8c)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd8d)))
      (a!3 (ite (and (not (= A.global #xfffffd8d))
                     (not (= A.global #xfffffd8c)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd8c))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000274 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd8c
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd8c))
                (not (= A.global #xfffffd8b))
                (ite (= a!1 (bvadd #x00000274 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000274 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000274 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000274 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:58,772] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:58,790] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+630) != <nullptr>) && (gep[inbounds](A.global,0+0+630) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+630)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+630)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:58,797] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:58,806] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd8b))
                     (not (= A.global #xfffffd8a)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000276 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd8b))
                     (not (= A.global #xfffffd8a)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd8b)))
      (a!3 (ite (and (not (= A.global #xfffffd8b))
                     (not (= A.global #xfffffd8a)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd8a))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000276 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd8a
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd8a))
                (not (= A.global #xfffffd89))
                (ite (= a!1 (bvadd #x00000276 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000276 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000276 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000276 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:58,813] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:58,830] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+632) != <nullptr>) && (gep[inbounds](A.global,0+0+632) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+632)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+632)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:58,837] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:58,841] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd89))
                     (not (= A.global #xfffffd88)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000278 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd89))
                     (not (= A.global #xfffffd88)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd89)))
      (a!3 (ite (and (not (= A.global #xfffffd89))
                     (not (= A.global #xfffffd88)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd88))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000278 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd88
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd88))
                (not (= A.global #xfffffd87))
                (ite (= a!1 (bvadd #x00000278 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000278 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000278 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000278 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:58,847] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:58,865] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+634) != <nullptr>) && (gep[inbounds](A.global,0+0+634) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+634)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+634)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:58,872] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:58,875] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd87))
                     (not (= A.global #xfffffd86)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000027a A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd87))
                     (not (= A.global #xfffffd86)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd87)))
      (a!3 (ite (and (not (= A.global #xfffffd87))
                     (not (= A.global #xfffffd86)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd86))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000027a A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd86
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd86))
                (not (= A.global #xfffffd85))
                (ite (= a!1 (bvadd #x0000027a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000027a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000027a A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000027a A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:58,882] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:58,900] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+636) != <nullptr>) && (gep[inbounds](A.global,0+0+636) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+636)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+636)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:58,907] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:58,910] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd85))
                     (not (= A.global #xfffffd84)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000027c A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd85))
                     (not (= A.global #xfffffd84)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd85)))
      (a!3 (ite (and (not (= A.global #xfffffd85))
                     (not (= A.global #xfffffd84)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd84))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000027c A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd84
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd84))
                (not (= A.global #xfffffd83))
                (ite (= a!1 (bvadd #x0000027c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000027c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000027c A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000027c A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:58,917] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:58,935] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+638) != <nullptr>) && (gep[inbounds](A.global,0+0+638) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+638)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+638)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:58,942] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:58,945] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd83))
                     (not (= A.global #xfffffd82)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000027e A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd83))
                     (not (= A.global #xfffffd82)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd83)))
      (a!3 (ite (and (not (= A.global #xfffffd83))
                     (not (= A.global #xfffffd82)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd82))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000027e A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd82
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd82))
                (not (= A.global #xfffffd81))
                (ite (= a!1 (bvadd #x0000027e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000027e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000027e A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000027e A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:58,952] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:58,970] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+640) != <nullptr>) && (gep[inbounds](A.global,0+0+640) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+640)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+640)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:58,976] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:58,980] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd81))
                     (not (= A.global #xfffffd80)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000280 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd81))
                     (not (= A.global #xfffffd80)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd81)))
      (a!3 (ite (and (not (= A.global #xfffffd81))
                     (not (= A.global #xfffffd80)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd80))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000280 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd80
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd80))
                (not (= A.global #xfffffd7f))
                (ite (= a!1 (bvadd #x00000280 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000280 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000280 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000280 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:58,986] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:59,011] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+642) != <nullptr>) && (gep[inbounds](A.global,0+0+642) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+642)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+642)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:59,017] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:59,021] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd7f))
                     (not (= A.global #xfffffd7e)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000282 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd7f))
                     (not (= A.global #xfffffd7e)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd7f)))
      (a!3 (ite (and (not (= A.global #xfffffd7f))
                     (not (= A.global #xfffffd7e)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd7e))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000282 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd7e
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd7e))
                (not (= A.global #xfffffd7d))
                (ite (= a!1 (bvadd #x00000282 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000282 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000282 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000282 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:59,028] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:59,045] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+644) != <nullptr>) && (gep[inbounds](A.global,0+0+644) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+644)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+644)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:59,052] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:59,056] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd7d))
                     (not (= A.global #xfffffd7c)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000284 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd7d))
                     (not (= A.global #xfffffd7c)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd7d)))
      (a!3 (ite (and (not (= A.global #xfffffd7d))
                     (not (= A.global #xfffffd7c)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd7c))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000284 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd7c
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd7c))
                (not (= A.global #xfffffd7b))
                (ite (= a!1 (bvadd #x00000284 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000284 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000284 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000284 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:59,063] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:59,081] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+646) != <nullptr>) && (gep[inbounds](A.global,0+0+646) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+646)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+646)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:59,088] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:59,092] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd7b))
                     (not (= A.global #xfffffd7a)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000286 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd7b))
                     (not (= A.global #xfffffd7a)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd7b)))
      (a!3 (ite (and (not (= A.global #xfffffd7b))
                     (not (= A.global #xfffffd7a)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd7a))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000286 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd7a
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd7a))
                (not (= A.global #xfffffd79))
                (ite (= a!1 (bvadd #x00000286 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000286 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000286 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000286 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:59,099] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:59,117] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+648) != <nullptr>) && (gep[inbounds](A.global,0+0+648) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+648)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+648)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:59,124] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:59,127] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd79))
                     (not (= A.global #xfffffd78)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000288 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd79))
                     (not (= A.global #xfffffd78)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd79)))
      (a!3 (ite (and (not (= A.global #xfffffd79))
                     (not (= A.global #xfffffd78)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd78))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000288 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd78
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd78))
                (not (= A.global #xfffffd77))
                (ite (= a!1 (bvadd #x00000288 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000288 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000288 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000288 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:59,135] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:59,153] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+650) != <nullptr>) && (gep[inbounds](A.global,0+0+650) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+650)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+650)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:59,160] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:59,164] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd77))
                     (not (= A.global #xfffffd76)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000028a A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd77))
                     (not (= A.global #xfffffd76)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd77)))
      (a!3 (ite (and (not (= A.global #xfffffd77))
                     (not (= A.global #xfffffd76)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd76))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000028a A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd76
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd76))
                (not (= A.global #xfffffd75))
                (ite (= a!1 (bvadd #x0000028a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000028a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000028a A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000028a A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:59,171] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:59,189] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+652) != <nullptr>) && (gep[inbounds](A.global,0+0+652) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+652)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+652)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:59,196] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:59,200] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd75))
                     (not (= A.global #xfffffd74)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000028c A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd75))
                     (not (= A.global #xfffffd74)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd75)))
      (a!3 (ite (and (not (= A.global #xfffffd75))
                     (not (= A.global #xfffffd74)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd74))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000028c A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd74
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd74))
                (not (= A.global #xfffffd73))
                (ite (= a!1 (bvadd #x0000028c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000028c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000028c A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000028c A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:59,213] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:59,230] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+654) != <nullptr>) && (gep[inbounds](A.global,0+0+654) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+654)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+654)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:59,237] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:59,241] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd73))
                     (not (= A.global #xfffffd72)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000028e A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd73))
                     (not (= A.global #xfffffd72)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd73)))
      (a!3 (ite (and (not (= A.global #xfffffd73))
                     (not (= A.global #xfffffd72)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd72))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000028e A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd72
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd72))
                (not (= A.global #xfffffd71))
                (ite (= a!1 (bvadd #x0000028e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000028e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000028e A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000028e A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:59,248] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:59,266] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+656) != <nullptr>) && (gep[inbounds](A.global,0+0+656) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+656)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+656)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:59,273] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:59,277] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd71))
                     (not (= A.global #xfffffd70)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000290 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd71))
                     (not (= A.global #xfffffd70)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd71)))
      (a!3 (ite (and (not (= A.global #xfffffd71))
                     (not (= A.global #xfffffd70)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd70))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000290 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd70
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd70))
                (not (= A.global #xfffffd6f))
                (ite (= a!1 (bvadd #x00000290 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000290 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000290 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000290 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:59,284] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:59,301] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+658) != <nullptr>) && (gep[inbounds](A.global,0+0+658) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+658)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+658)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:59,308] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:59,311] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd6f))
                     (not (= A.global #xfffffd6e)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000292 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd6f))
                     (not (= A.global #xfffffd6e)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd6f)))
      (a!3 (ite (and (not (= A.global #xfffffd6f))
                     (not (= A.global #xfffffd6e)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd6e))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000292 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd6e
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd6e))
                (not (= A.global #xfffffd6d))
                (ite (= a!1 (bvadd #x00000292 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000292 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000292 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000292 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:59,318] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:59,336] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+660) != <nullptr>) && (gep[inbounds](A.global,0+0+660) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+660)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+660)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:59,343] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:59,346] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd6d))
                     (not (= A.global #xfffffd6c)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000294 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd6d))
                     (not (= A.global #xfffffd6c)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd6d)))
      (a!3 (ite (and (not (= A.global #xfffffd6d))
                     (not (= A.global #xfffffd6c)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd6c))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000294 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd6c
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd6c))
                (not (= A.global #xfffffd6b))
                (ite (= a!1 (bvadd #x00000294 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000294 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000294 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000294 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:59,353] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:59,372] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+662) != <nullptr>) && (gep[inbounds](A.global,0+0+662) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+662)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+662)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:59,379] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:59,382] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd6b))
                     (not (= A.global #xfffffd6a)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000296 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd6b))
                     (not (= A.global #xfffffd6a)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd6b)))
      (a!3 (ite (and (not (= A.global #xfffffd6b))
                     (not (= A.global #xfffffd6a)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd6a))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000296 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd6a
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd6a))
                (not (= A.global #xfffffd69))
                (ite (= a!1 (bvadd #x00000296 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000296 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000296 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000296 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:59,390] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:59,415] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+664) != <nullptr>) && (gep[inbounds](A.global,0+0+664) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+664)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+664)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:59,422] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:59,425] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd69))
                     (not (= A.global #xfffffd68)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000298 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd69))
                     (not (= A.global #xfffffd68)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd69)))
      (a!3 (ite (and (not (= A.global #xfffffd69))
                     (not (= A.global #xfffffd68)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd68))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000298 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd68
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd68))
                (not (= A.global #xfffffd67))
                (ite (= a!1 (bvadd #x00000298 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000298 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000298 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000298 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:59,432] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:59,450] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+666) != <nullptr>) && (gep[inbounds](A.global,0+0+666) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+666)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+666)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:59,458] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:59,461] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd67))
                     (not (= A.global #xfffffd66)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000029a A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd67))
                     (not (= A.global #xfffffd66)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd67)))
      (a!3 (ite (and (not (= A.global #xfffffd67))
                     (not (= A.global #xfffffd66)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd66))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000029a A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd66
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd66))
                (not (= A.global #xfffffd65))
                (ite (= a!1 (bvadd #x0000029a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000029a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000029a A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000029a A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:59,467] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:59,485] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+668) != <nullptr>) && (gep[inbounds](A.global,0+0+668) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+668)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+668)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:59,493] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:59,496] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd65))
                     (not (= A.global #xfffffd64)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000029c A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd65))
                     (not (= A.global #xfffffd64)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd65)))
      (a!3 (ite (and (not (= A.global #xfffffd65))
                     (not (= A.global #xfffffd64)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd64))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000029c A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd64
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd64))
                (not (= A.global #xfffffd63))
                (ite (= a!1 (bvadd #x0000029c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000029c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000029c A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000029c A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:59,502] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:59,521] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+670) != <nullptr>) && (gep[inbounds](A.global,0+0+670) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+670)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+670)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:59,528] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:59,532] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd63))
                     (not (= A.global #xfffffd62)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000029e A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd63))
                     (not (= A.global #xfffffd62)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd63)))
      (a!3 (ite (and (not (= A.global #xfffffd63))
                     (not (= A.global #xfffffd62)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd62))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000029e A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd62
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd62))
                (not (= A.global #xfffffd61))
                (ite (= a!1 (bvadd #x0000029e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000029e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000029e A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000029e A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:59,539] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:59,558] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+672) != <nullptr>) && (gep[inbounds](A.global,0+0+672) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+672)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+672)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:59,564] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:59,568] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd61))
                     (not (= A.global #xfffffd60)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000002a0 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd61))
                     (not (= A.global #xfffffd60)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd61)))
      (a!3 (ite (and (not (= A.global #xfffffd61))
                     (not (= A.global #xfffffd60)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd60))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000002a0 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd60
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd60))
                (not (= A.global #xfffffd5f))
                (ite (= a!1 (bvadd #x000002a0 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000002a0 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000002a0 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000002a0 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:59,574] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:59,593] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+674) != <nullptr>) && (gep[inbounds](A.global,0+0+674) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+674)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+674)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:59,600] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:59,603] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd5f))
                     (not (= A.global #xfffffd5e)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000002a2 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd5f))
                     (not (= A.global #xfffffd5e)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd5f)))
      (a!3 (ite (and (not (= A.global #xfffffd5f))
                     (not (= A.global #xfffffd5e)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd5e))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000002a2 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd5e
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd5e))
                (not (= A.global #xfffffd5d))
                (ite (= a!1 (bvadd #x000002a2 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000002a2 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000002a2 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000002a2 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:59,610] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:59,634] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+676) != <nullptr>) && (gep[inbounds](A.global,0+0+676) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+676)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+676)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:59,641] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:59,645] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd5d))
                     (not (= A.global #xfffffd5c)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000002a4 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd5d))
                     (not (= A.global #xfffffd5c)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd5d)))
      (a!3 (ite (and (not (= A.global #xfffffd5d))
                     (not (= A.global #xfffffd5c)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd5c))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000002a4 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd5c
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd5c))
                (not (= A.global #xfffffd5b))
                (ite (= a!1 (bvadd #x000002a4 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000002a4 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000002a4 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000002a4 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:59,651] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:59,669] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+678) != <nullptr>) && (gep[inbounds](A.global,0+0+678) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+678)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+678)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:59,677] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:59,680] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd5b))
                     (not (= A.global #xfffffd5a)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000002a6 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd5b))
                     (not (= A.global #xfffffd5a)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd5b)))
      (a!3 (ite (and (not (= A.global #xfffffd5b))
                     (not (= A.global #xfffffd5a)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd5a))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000002a6 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd5a
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd5a))
                (not (= A.global #xfffffd59))
                (ite (= a!1 (bvadd #x000002a6 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000002a6 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000002a6 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000002a6 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:59,688] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:59,705] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+680) != <nullptr>) && (gep[inbounds](A.global,0+0+680) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+680)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+680)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:59,713] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:59,716] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd59))
                     (not (= A.global #xfffffd58)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000002a8 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd59))
                     (not (= A.global #xfffffd58)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd59)))
      (a!3 (ite (and (not (= A.global #xfffffd59))
                     (not (= A.global #xfffffd58)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd58))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000002a8 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd58
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd58))
                (not (= A.global #xfffffd57))
                (ite (= a!1 (bvadd #x000002a8 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000002a8 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000002a8 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000002a8 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:59,723] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:59,741] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+682) != <nullptr>) && (gep[inbounds](A.global,0+0+682) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+682)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+682)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:59,748] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:59,751] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd57))
                     (not (= A.global #xfffffd56)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000002aa A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd57))
                     (not (= A.global #xfffffd56)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd57)))
      (a!3 (ite (and (not (= A.global #xfffffd57))
                     (not (= A.global #xfffffd56)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd56))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000002aa A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd56
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd56))
                (not (= A.global #xfffffd55))
                (ite (= a!1 (bvadd #x000002aa A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000002aa A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000002aa A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000002aa A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:59,760] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:59,779] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+684) != <nullptr>) && (gep[inbounds](A.global,0+0+684) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+684)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+684)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:59,785] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:59,790] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd55))
                     (not (= A.global #xfffffd54)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000002ac A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd55))
                     (not (= A.global #xfffffd54)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd55)))
      (a!3 (ite (and (not (= A.global #xfffffd55))
                     (not (= A.global #xfffffd54)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd54))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000002ac A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd54
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd54))
                (not (= A.global #xfffffd53))
                (ite (= a!1 (bvadd #x000002ac A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000002ac A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000002ac A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000002ac A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:59,796] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:59,820] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+686) != <nullptr>) && (gep[inbounds](A.global,0+0+686) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+686)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+686)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:59,827] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:59,830] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd53))
                     (not (= A.global #xfffffd52)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000002ae A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd53))
                     (not (= A.global #xfffffd52)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd53)))
      (a!3 (ite (and (not (= A.global #xfffffd53))
                     (not (= A.global #xfffffd52)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd52))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000002ae A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd52
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd52))
                (not (= A.global #xfffffd51))
                (ite (= a!1 (bvadd #x000002ae A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000002ae A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000002ae A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000002ae A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:59,837] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:59,856] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+688) != <nullptr>) && (gep[inbounds](A.global,0+0+688) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+688)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+688)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:59,863] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:59,867] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd51))
                     (not (= A.global #xfffffd50)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000002b0 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd51))
                     (not (= A.global #xfffffd50)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd51)))
      (a!3 (ite (and (not (= A.global #xfffffd51))
                     (not (= A.global #xfffffd50)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd50))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000002b0 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd50
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd50))
                (not (= A.global #xfffffd4f))
                (ite (= a!1 (bvadd #x000002b0 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000002b0 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000002b0 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000002b0 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:59,874] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:59,892] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+690) != <nullptr>) && (gep[inbounds](A.global,0+0+690) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+690)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+690)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:59,900] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:59,903] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd4f))
                     (not (= A.global #xfffffd4e)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000002b2 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd4f))
                     (not (= A.global #xfffffd4e)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd4f)))
      (a!3 (ite (and (not (= A.global #xfffffd4f))
                     (not (= A.global #xfffffd4e)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd4e))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000002b2 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd4e
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd4e))
                (not (= A.global #xfffffd4d))
                (ite (= a!1 (bvadd #x000002b2 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000002b2 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000002b2 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000002b2 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:59,911] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:59,930] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+692) != <nullptr>) && (gep[inbounds](A.global,0+0+692) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+692)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+692)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:59,937] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:59,940] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd4d))
                     (not (= A.global #xfffffd4c)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000002b4 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd4d))
                     (not (= A.global #xfffffd4c)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd4d)))
      (a!3 (ite (and (not (= A.global #xfffffd4d))
                     (not (= A.global #xfffffd4c)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd4c))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000002b4 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd4c
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd4c))
                (not (= A.global #xfffffd4b))
                (ite (= a!1 (bvadd #x000002b4 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000002b4 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000002b4 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000002b4 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:59,947] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:32:59,965] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+694) != <nullptr>) && (gep[inbounds](A.global,0+0+694) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+694)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+694)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:32:59,972] DEBUG Checking state for sanity... OK
[2015-05-19 16:32:59,976] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd4b))
                     (not (= A.global #xfffffd4a)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000002b6 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd4b))
                     (not (= A.global #xfffffd4a)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd4b)))
      (a!3 (ite (and (not (= A.global #xfffffd4b))
                     (not (= A.global #xfffffd4a)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd4a))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000002b6 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd4a
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd4a))
                (not (= A.global #xfffffd49))
                (ite (= a!1 (bvadd #x000002b6 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000002b6 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000002b6 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000002b6 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:32:59,985] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:00,003] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+696) != <nullptr>) && (gep[inbounds](A.global,0+0+696) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+696)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+696)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:00,011] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:00,014] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd49))
                     (not (= A.global #xfffffd48)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000002b8 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd49))
                     (not (= A.global #xfffffd48)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd49)))
      (a!3 (ite (and (not (= A.global #xfffffd49))
                     (not (= A.global #xfffffd48)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd48))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000002b8 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd48
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd48))
                (not (= A.global #xfffffd47))
                (ite (= a!1 (bvadd #x000002b8 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000002b8 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000002b8 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000002b8 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:00,027] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:00,045] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+698) != <nullptr>) && (gep[inbounds](A.global,0+0+698) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+698)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+698)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:00,052] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:00,056] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd47))
                     (not (= A.global #xfffffd46)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000002ba A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd47))
                     (not (= A.global #xfffffd46)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd47)))
      (a!3 (ite (and (not (= A.global #xfffffd47))
                     (not (= A.global #xfffffd46)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd46))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000002ba A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd46
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd46))
                (not (= A.global #xfffffd45))
                (ite (= a!1 (bvadd #x000002ba A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000002ba A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000002ba A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000002ba A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:00,063] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:00,082] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+700) != <nullptr>) && (gep[inbounds](A.global,0+0+700) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+700)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+700)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:00,089] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:00,092] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd45))
                     (not (= A.global #xfffffd44)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000002bc A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd45))
                     (not (= A.global #xfffffd44)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd45)))
      (a!3 (ite (and (not (= A.global #xfffffd45))
                     (not (= A.global #xfffffd44)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd44))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000002bc A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd44
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd44))
                (not (= A.global #xfffffd43))
                (ite (= a!1 (bvadd #x000002bc A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000002bc A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000002bc A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000002bc A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:00,099] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:00,117] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+702) != <nullptr>) && (gep[inbounds](A.global,0+0+702) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+702)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+702)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:00,125] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:00,128] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd43))
                     (not (= A.global #xfffffd42)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000002be A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd43))
                     (not (= A.global #xfffffd42)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd43)))
      (a!3 (ite (and (not (= A.global #xfffffd43))
                     (not (= A.global #xfffffd42)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd42))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000002be A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd42
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd42))
                (not (= A.global #xfffffd41))
                (ite (= a!1 (bvadd #x000002be A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000002be A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000002be A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000002be A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:00,136] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:00,155] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+704) != <nullptr>) && (gep[inbounds](A.global,0+0+704) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+704)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+704)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:00,165] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:00,171] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd41))
                     (not (= A.global #xfffffd40)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000002c0 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd41))
                     (not (= A.global #xfffffd40)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd41)))
      (a!3 (ite (and (not (= A.global #xfffffd41))
                     (not (= A.global #xfffffd40)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd40))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000002c0 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd40
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd40))
                (not (= A.global #xfffffd3f))
                (ite (= a!1 (bvadd #x000002c0 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000002c0 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000002c0 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000002c0 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:00,178] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:00,197] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+706) != <nullptr>) && (gep[inbounds](A.global,0+0+706) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+706)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+706)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:00,204] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:00,208] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd3f))
                     (not (= A.global #xfffffd3e)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000002c2 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd3f))
                     (not (= A.global #xfffffd3e)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd3f)))
      (a!3 (ite (and (not (= A.global #xfffffd3f))
                     (not (= A.global #xfffffd3e)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd3e))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000002c2 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd3e
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd3e))
                (not (= A.global #xfffffd3d))
                (ite (= a!1 (bvadd #x000002c2 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000002c2 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000002c2 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000002c2 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:00,215] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:00,239] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+708) != <nullptr>) && (gep[inbounds](A.global,0+0+708) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+708)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+708)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:00,246] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:00,249] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd3d))
                     (not (= A.global #xfffffd3c)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000002c4 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd3d))
                     (not (= A.global #xfffffd3c)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd3d)))
      (a!3 (ite (and (not (= A.global #xfffffd3d))
                     (not (= A.global #xfffffd3c)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd3c))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000002c4 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd3c
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd3c))
                (not (= A.global #xfffffd3b))
                (ite (= a!1 (bvadd #x000002c4 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000002c4 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000002c4 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000002c4 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:00,255] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:00,275] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+710) != <nullptr>) && (gep[inbounds](A.global,0+0+710) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+710)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+710)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:00,282] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:00,285] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd3b))
                     (not (= A.global #xfffffd3a)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000002c6 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd3b))
                     (not (= A.global #xfffffd3a)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd3b)))
      (a!3 (ite (and (not (= A.global #xfffffd3b))
                     (not (= A.global #xfffffd3a)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd3a))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000002c6 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd3a
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd3a))
                (not (= A.global #xfffffd39))
                (ite (= a!1 (bvadd #x000002c6 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000002c6 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000002c6 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000002c6 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:00,294] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:00,312] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+712) != <nullptr>) && (gep[inbounds](A.global,0+0+712) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+712)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+712)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:00,320] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:00,323] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd39))
                     (not (= A.global #xfffffd38)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000002c8 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd39))
                     (not (= A.global #xfffffd38)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd39)))
      (a!3 (ite (and (not (= A.global #xfffffd39))
                     (not (= A.global #xfffffd38)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd38))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000002c8 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd38
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd38))
                (not (= A.global #xfffffd37))
                (ite (= a!1 (bvadd #x000002c8 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000002c8 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000002c8 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000002c8 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:00,330] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:00,349] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+714) != <nullptr>) && (gep[inbounds](A.global,0+0+714) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+714)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+714)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:00,358] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:00,361] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd37))
                     (not (= A.global #xfffffd36)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000002ca A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd37))
                     (not (= A.global #xfffffd36)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd37)))
      (a!3 (ite (and (not (= A.global #xfffffd37))
                     (not (= A.global #xfffffd36)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd36))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000002ca A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd36
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd36))
                (not (= A.global #xfffffd35))
                (ite (= a!1 (bvadd #x000002ca A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000002ca A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000002ca A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000002ca A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:00,369] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:00,392] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+716) != <nullptr>) && (gep[inbounds](A.global,0+0+716) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+716)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+716)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:00,399] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:00,403] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd35))
                     (not (= A.global #xfffffd34)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000002cc A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd35))
                     (not (= A.global #xfffffd34)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd35)))
      (a!3 (ite (and (not (= A.global #xfffffd35))
                     (not (= A.global #xfffffd34)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd34))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000002cc A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd34
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd34))
                (not (= A.global #xfffffd33))
                (ite (= a!1 (bvadd #x000002cc A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000002cc A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000002cc A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000002cc A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:00,414] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:00,439] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+718) != <nullptr>) && (gep[inbounds](A.global,0+0+718) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+718)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+718)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:00,447] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:00,450] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd33))
                     (not (= A.global #xfffffd32)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000002ce A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd33))
                     (not (= A.global #xfffffd32)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd33)))
      (a!3 (ite (and (not (= A.global #xfffffd33))
                     (not (= A.global #xfffffd32)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd32))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000002ce A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd32
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd32))
                (not (= A.global #xfffffd31))
                (ite (= a!1 (bvadd #x000002ce A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000002ce A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000002ce A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000002ce A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:00,458] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:00,478] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+720) != <nullptr>) && (gep[inbounds](A.global,0+0+720) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+720)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+720)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:00,485] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:00,488] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd31))
                     (not (= A.global #xfffffd30)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000002d0 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd31))
                     (not (= A.global #xfffffd30)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd31)))
      (a!3 (ite (and (not (= A.global #xfffffd31))
                     (not (= A.global #xfffffd30)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd30))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000002d0 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd30
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd30))
                (not (= A.global #xfffffd2f))
                (ite (= a!1 (bvadd #x000002d0 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000002d0 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000002d0 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000002d0 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:00,495] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:00,514] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+722) != <nullptr>) && (gep[inbounds](A.global,0+0+722) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+722)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+722)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:00,521] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:00,525] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd2f))
                     (not (= A.global #xfffffd2e)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000002d2 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd2f))
                     (not (= A.global #xfffffd2e)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd2f)))
      (a!3 (ite (and (not (= A.global #xfffffd2f))
                     (not (= A.global #xfffffd2e)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd2e))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000002d2 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd2e
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd2e))
                (not (= A.global #xfffffd2d))
                (ite (= a!1 (bvadd #x000002d2 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000002d2 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000002d2 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000002d2 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:00,534] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:00,553] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+724) != <nullptr>) && (gep[inbounds](A.global,0+0+724) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+724)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+724)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:00,560] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:00,563] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd2d))
                     (not (= A.global #xfffffd2c)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000002d4 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd2d))
                     (not (= A.global #xfffffd2c)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd2d)))
      (a!3 (ite (and (not (= A.global #xfffffd2d))
                     (not (= A.global #xfffffd2c)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd2c))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000002d4 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd2c
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd2c))
                (not (= A.global #xfffffd2b))
                (ite (= a!1 (bvadd #x000002d4 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000002d4 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000002d4 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000002d4 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:00,570] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:00,590] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+726) != <nullptr>) && (gep[inbounds](A.global,0+0+726) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+726)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+726)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:00,599] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:00,602] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd2b))
                     (not (= A.global #xfffffd2a)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000002d6 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd2b))
                     (not (= A.global #xfffffd2a)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd2b)))
      (a!3 (ite (and (not (= A.global #xfffffd2b))
                     (not (= A.global #xfffffd2a)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd2a))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000002d6 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd2a
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd2a))
                (not (= A.global #xfffffd29))
                (ite (= a!1 (bvadd #x000002d6 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000002d6 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000002d6 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000002d6 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:00,610] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:00,638] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+728) != <nullptr>) && (gep[inbounds](A.global,0+0+728) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+728)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+728)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:00,645] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:00,649] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd29))
                     (not (= A.global #xfffffd28)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000002d8 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd29))
                     (not (= A.global #xfffffd28)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd29)))
      (a!3 (ite (and (not (= A.global #xfffffd29))
                     (not (= A.global #xfffffd28)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd28))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000002d8 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd28
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd28))
                (not (= A.global #xfffffd27))
                (ite (= a!1 (bvadd #x000002d8 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000002d8 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000002d8 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000002d8 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:00,656] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:00,675] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+730) != <nullptr>) && (gep[inbounds](A.global,0+0+730) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+730)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+730)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:00,683] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:00,686] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd27))
                     (not (= A.global #xfffffd26)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000002da A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd27))
                     (not (= A.global #xfffffd26)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd27)))
      (a!3 (ite (and (not (= A.global #xfffffd27))
                     (not (= A.global #xfffffd26)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd26))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000002da A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd26
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd26))
                (not (= A.global #xfffffd25))
                (ite (= a!1 (bvadd #x000002da A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000002da A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000002da A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000002da A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:00,693] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:00,713] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+732) != <nullptr>) && (gep[inbounds](A.global,0+0+732) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+732)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+732)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:00,720] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:00,723] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd25))
                     (not (= A.global #xfffffd24)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000002dc A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd25))
                     (not (= A.global #xfffffd24)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd25)))
      (a!3 (ite (and (not (= A.global #xfffffd25))
                     (not (= A.global #xfffffd24)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd24))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000002dc A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd24
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd24))
                (not (= A.global #xfffffd23))
                (ite (= a!1 (bvadd #x000002dc A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000002dc A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000002dc A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000002dc A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:00,730] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:00,750] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+734) != <nullptr>) && (gep[inbounds](A.global,0+0+734) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+734)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+734)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:00,757] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:00,761] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd23))
                     (not (= A.global #xfffffd22)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000002de A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd23))
                     (not (= A.global #xfffffd22)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd23)))
      (a!3 (ite (and (not (= A.global #xfffffd23))
                     (not (= A.global #xfffffd22)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd22))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000002de A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd22
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd22))
                (not (= A.global #xfffffd21))
                (ite (= a!1 (bvadd #x000002de A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000002de A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000002de A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000002de A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:00,768] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:00,790] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+736) != <nullptr>) && (gep[inbounds](A.global,0+0+736) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+736)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+736)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:00,798] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:00,802] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd21))
                     (not (= A.global #xfffffd20)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000002e0 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd21))
                     (not (= A.global #xfffffd20)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd21)))
      (a!3 (ite (and (not (= A.global #xfffffd21))
                     (not (= A.global #xfffffd20)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd20))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000002e0 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd20
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd20))
                (not (= A.global #xfffffd1f))
                (ite (= a!1 (bvadd #x000002e0 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000002e0 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000002e0 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000002e0 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:00,813] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:00,844] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+738) != <nullptr>) && (gep[inbounds](A.global,0+0+738) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+738)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+738)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:00,851] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:00,855] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd1f))
                     (not (= A.global #xfffffd1e)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000002e2 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd1f))
                     (not (= A.global #xfffffd1e)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd1f)))
      (a!3 (ite (and (not (= A.global #xfffffd1f))
                     (not (= A.global #xfffffd1e)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd1e))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000002e2 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd1e
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd1e))
                (not (= A.global #xfffffd1d))
                (ite (= a!1 (bvadd #x000002e2 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000002e2 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000002e2 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000002e2 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:00,862] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:00,882] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+740) != <nullptr>) && (gep[inbounds](A.global,0+0+740) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+740)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+740)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:00,889] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:00,892] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd1d))
                     (not (= A.global #xfffffd1c)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000002e4 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd1d))
                     (not (= A.global #xfffffd1c)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd1d)))
      (a!3 (ite (and (not (= A.global #xfffffd1d))
                     (not (= A.global #xfffffd1c)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd1c))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000002e4 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd1c
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd1c))
                (not (= A.global #xfffffd1b))
                (ite (= a!1 (bvadd #x000002e4 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000002e4 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000002e4 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000002e4 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:00,899] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:00,918] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+742) != <nullptr>) && (gep[inbounds](A.global,0+0+742) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+742)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+742)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:00,925] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:00,929] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd1b))
                     (not (= A.global #xfffffd1a)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000002e6 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd1b))
                     (not (= A.global #xfffffd1a)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd1b)))
      (a!3 (ite (and (not (= A.global #xfffffd1b))
                     (not (= A.global #xfffffd1a)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd1a))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000002e6 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd1a
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd1a))
                (not (= A.global #xfffffd19))
                (ite (= a!1 (bvadd #x000002e6 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000002e6 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000002e6 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000002e6 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:00,936] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:00,956] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+744) != <nullptr>) && (gep[inbounds](A.global,0+0+744) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+744)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+744)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:00,963] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:00,966] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd19))
                     (not (= A.global #xfffffd18)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000002e8 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd19))
                     (not (= A.global #xfffffd18)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd19)))
      (a!3 (ite (and (not (= A.global #xfffffd19))
                     (not (= A.global #xfffffd18)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd18))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000002e8 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd18
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd18))
                (not (= A.global #xfffffd17))
                (ite (= a!1 (bvadd #x000002e8 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000002e8 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000002e8 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000002e8 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:00,973] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:00,994] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+746) != <nullptr>) && (gep[inbounds](A.global,0+0+746) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+746)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+746)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:01,002] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:01,006] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd17))
                     (not (= A.global #xfffffd16)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000002ea A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd17))
                     (not (= A.global #xfffffd16)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd17)))
      (a!3 (ite (and (not (= A.global #xfffffd17))
                     (not (= A.global #xfffffd16)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd16))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000002ea A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd16
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd16))
                (not (= A.global #xfffffd15))
                (ite (= a!1 (bvadd #x000002ea A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000002ea A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000002ea A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000002ea A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:01,014] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:01,039] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+748) != <nullptr>) && (gep[inbounds](A.global,0+0+748) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+748)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+748)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:01,046] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:01,049] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd15))
                     (not (= A.global #xfffffd14)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000002ec A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd15))
                     (not (= A.global #xfffffd14)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd15)))
      (a!3 (ite (and (not (= A.global #xfffffd15))
                     (not (= A.global #xfffffd14)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd14))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000002ec A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd14
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd14))
                (not (= A.global #xfffffd13))
                (ite (= a!1 (bvadd #x000002ec A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000002ec A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000002ec A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000002ec A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:01,056] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:01,076] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+750) != <nullptr>) && (gep[inbounds](A.global,0+0+750) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+750)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+750)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:01,083] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:01,087] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd13))
                     (not (= A.global #xfffffd12)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000002ee A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd13))
                     (not (= A.global #xfffffd12)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd13)))
      (a!3 (ite (and (not (= A.global #xfffffd13))
                     (not (= A.global #xfffffd12)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd12))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000002ee A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd12
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd12))
                (not (= A.global #xfffffd11))
                (ite (= a!1 (bvadd #x000002ee A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000002ee A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000002ee A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000002ee A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:01,095] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:01,114] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+752) != <nullptr>) && (gep[inbounds](A.global,0+0+752) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+752)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+752)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:01,121] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:01,125] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd11))
                     (not (= A.global #xfffffd10)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000002f0 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd11))
                     (not (= A.global #xfffffd10)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd11)))
      (a!3 (ite (and (not (= A.global #xfffffd11))
                     (not (= A.global #xfffffd10)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd10))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000002f0 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd10
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd10))
                (not (= A.global #xfffffd0f))
                (ite (= a!1 (bvadd #x000002f0 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000002f0 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000002f0 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000002f0 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:01,132] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:01,151] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+754) != <nullptr>) && (gep[inbounds](A.global,0+0+754) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+754)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+754)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:01,159] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:01,162] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd0f))
                     (not (= A.global #xfffffd0e)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000002f2 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd0f))
                     (not (= A.global #xfffffd0e)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd0f)))
      (a!3 (ite (and (not (= A.global #xfffffd0f))
                     (not (= A.global #xfffffd0e)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd0e))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000002f2 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd0e
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd0e))
                (not (= A.global #xfffffd0d))
                (ite (= a!1 (bvadd #x000002f2 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000002f2 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000002f2 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000002f2 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:01,169] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:01,190] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+756) != <nullptr>) && (gep[inbounds](A.global,0+0+756) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+756)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+756)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:01,197] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:01,201] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd0d))
                     (not (= A.global #xfffffd0c)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000002f4 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd0d))
                     (not (= A.global #xfffffd0c)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd0d)))
      (a!3 (ite (and (not (= A.global #xfffffd0d))
                     (not (= A.global #xfffffd0c)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd0c))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000002f4 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd0c
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd0c))
                (not (= A.global #xfffffd0b))
                (ite (= a!1 (bvadd #x000002f4 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000002f4 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000002f4 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000002f4 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:01,208] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:01,228] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+758) != <nullptr>) && (gep[inbounds](A.global,0+0+758) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+758)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+758)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:01,235] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:01,245] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd0b))
                     (not (= A.global #xfffffd0a)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000002f6 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd0b))
                     (not (= A.global #xfffffd0a)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd0b)))
      (a!3 (ite (and (not (= A.global #xfffffd0b))
                     (not (= A.global #xfffffd0a)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd0a))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000002f6 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd0a
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd0a))
                (not (= A.global #xfffffd09))
                (ite (= a!1 (bvadd #x000002f6 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000002f6 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000002f6 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000002f6 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:01,252] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:01,272] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+760) != <nullptr>) && (gep[inbounds](A.global,0+0+760) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+760)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+760)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:01,279] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:01,282] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd09))
                     (not (= A.global #xfffffd08)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000002f8 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd09))
                     (not (= A.global #xfffffd08)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd09)))
      (a!3 (ite (and (not (= A.global #xfffffd09))
                     (not (= A.global #xfffffd08)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd08))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000002f8 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd08
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd08))
                (not (= A.global #xfffffd07))
                (ite (= a!1 (bvadd #x000002f8 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000002f8 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000002f8 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000002f8 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:01,289] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:01,309] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+762) != <nullptr>) && (gep[inbounds](A.global,0+0+762) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+762)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+762)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:01,317] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:01,320] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd07))
                     (not (= A.global #xfffffd06)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000002fa A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd07))
                     (not (= A.global #xfffffd06)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd07)))
      (a!3 (ite (and (not (= A.global #xfffffd07))
                     (not (= A.global #xfffffd06)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd06))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000002fa A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd06
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd06))
                (not (= A.global #xfffffd05))
                (ite (= a!1 (bvadd #x000002fa A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000002fa A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000002fa A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000002fa A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:01,327] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:01,348] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+764) != <nullptr>) && (gep[inbounds](A.global,0+0+764) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+764)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+764)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:01,355] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:01,358] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd05))
                     (not (= A.global #xfffffd04)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000002fc A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd05))
                     (not (= A.global #xfffffd04)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd05)))
      (a!3 (ite (and (not (= A.global #xfffffd05))
                     (not (= A.global #xfffffd04)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd04))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000002fc A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd04
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd04))
                (not (= A.global #xfffffd03))
                (ite (= a!1 (bvadd #x000002fc A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000002fc A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000002fc A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000002fc A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:01,364] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:01,385] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+766) != <nullptr>) && (gep[inbounds](A.global,0+0+766) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+766)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+766)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:01,392] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:01,396] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd03))
                     (not (= A.global #xfffffd02)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000002fe A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd03))
                     (not (= A.global #xfffffd02)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd03)))
      (a!3 (ite (and (not (= A.global #xfffffd03))
                     (not (= A.global #xfffffd02)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd02))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000002fe A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd02
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd02))
                (not (= A.global #xfffffd01))
                (ite (= a!1 (bvadd #x000002fe A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000002fe A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000002fe A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000002fe A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:01,406] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:01,426] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+768) != <nullptr>) && (gep[inbounds](A.global,0+0+768) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+768)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+768)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:01,433] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:01,437] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffd01))
                     (not (= A.global #xfffffd00)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000300 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffd01))
                     (not (= A.global #xfffffd00)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffd01)))
      (a!3 (ite (and (not (= A.global #xfffffd01))
                     (not (= A.global #xfffffd00)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffd00))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000300 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffd00
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffd00))
                (not (= A.global #xfffffcff))
                (ite (= a!1 (bvadd #x00000300 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000300 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000300 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000300 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:01,450] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:01,470] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+770) != <nullptr>) && (gep[inbounds](A.global,0+0+770) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+770)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+770)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:01,478] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:01,482] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffcff))
                     (not (= A.global #xfffffcfe)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000302 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffcff))
                     (not (= A.global #xfffffcfe)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffcff)))
      (a!3 (ite (and (not (= A.global #xfffffcff))
                     (not (= A.global #xfffffcfe)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffcfe))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000302 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffcfe
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffcfe))
                (not (= A.global #xfffffcfd))
                (ite (= a!1 (bvadd #x00000302 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000302 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000302 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000302 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:01,490] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:01,512] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+772) != <nullptr>) && (gep[inbounds](A.global,0+0+772) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+772)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+772)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:01,518] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:01,522] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffcfd))
                     (not (= A.global #xfffffcfc)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000304 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffcfd))
                     (not (= A.global #xfffffcfc)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffcfd)))
      (a!3 (ite (and (not (= A.global #xfffffcfd))
                     (not (= A.global #xfffffcfc)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffcfc))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000304 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffcfc
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffcfc))
                (not (= A.global #xfffffcfb))
                (ite (= a!1 (bvadd #x00000304 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000304 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000304 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000304 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:01,528] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:01,549] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+774) != <nullptr>) && (gep[inbounds](A.global,0+0+774) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+774)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+774)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:01,557] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:01,560] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffcfb))
                     (not (= A.global #xfffffcfa)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000306 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffcfb))
                     (not (= A.global #xfffffcfa)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffcfb)))
      (a!3 (ite (and (not (= A.global #xfffffcfb))
                     (not (= A.global #xfffffcfa)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffcfa))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000306 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffcfa
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffcfa))
                (not (= A.global #xfffffcf9))
                (ite (= a!1 (bvadd #x00000306 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000306 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000306 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000306 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:01,566] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:01,587] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+776) != <nullptr>) && (gep[inbounds](A.global,0+0+776) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+776)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+776)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:01,594] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:01,597] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffcf9))
                     (not (= A.global #xfffffcf8)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000308 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffcf9))
                     (not (= A.global #xfffffcf8)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffcf9)))
      (a!3 (ite (and (not (= A.global #xfffffcf9))
                     (not (= A.global #xfffffcf8)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffcf8))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000308 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffcf8
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffcf8))
                (not (= A.global #xfffffcf7))
                (ite (= a!1 (bvadd #x00000308 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000308 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000308 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000308 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:01,604] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:01,624] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+778) != <nullptr>) && (gep[inbounds](A.global,0+0+778) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+778)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+778)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:01,632] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:01,635] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffcf7))
                     (not (= A.global #xfffffcf6)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000030a A.global)))
      (a!2 (ite (and (not (= A.global #xfffffcf7))
                     (not (= A.global #xfffffcf6)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffcf7)))
      (a!3 (ite (and (not (= A.global #xfffffcf7))
                     (not (= A.global #xfffffcf6)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffcf6))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000030a A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffcf6
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffcf6))
                (not (= A.global #xfffffcf5))
                (ite (= a!1 (bvadd #x0000030a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000030a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000030a A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000030a A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:01,648] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:01,668] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+780) != <nullptr>) && (gep[inbounds](A.global,0+0+780) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+780)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+780)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:01,675] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:01,678] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffcf5))
                     (not (= A.global #xfffffcf4)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000030c A.global)))
      (a!2 (ite (and (not (= A.global #xfffffcf5))
                     (not (= A.global #xfffffcf4)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffcf5)))
      (a!3 (ite (and (not (= A.global #xfffffcf5))
                     (not (= A.global #xfffffcf4)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffcf4))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000030c A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffcf4
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffcf4))
                (not (= A.global #xfffffcf3))
                (ite (= a!1 (bvadd #x0000030c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000030c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000030c A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000030c A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:01,687] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:01,708] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+782) != <nullptr>) && (gep[inbounds](A.global,0+0+782) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+782)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+782)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:01,715] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:01,718] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffcf3))
                     (not (= A.global #xfffffcf2)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000030e A.global)))
      (a!2 (ite (and (not (= A.global #xfffffcf3))
                     (not (= A.global #xfffffcf2)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffcf3)))
      (a!3 (ite (and (not (= A.global #xfffffcf3))
                     (not (= A.global #xfffffcf2)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffcf2))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000030e A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffcf2
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffcf2))
                (not (= A.global #xfffffcf1))
                (ite (= a!1 (bvadd #x0000030e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000030e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000030e A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000030e A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:01,726] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:01,746] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+784) != <nullptr>) && (gep[inbounds](A.global,0+0+784) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+784)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+784)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:01,753] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:01,757] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffcf1))
                     (not (= A.global #xfffffcf0)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000310 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffcf1))
                     (not (= A.global #xfffffcf0)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffcf1)))
      (a!3 (ite (and (not (= A.global #xfffffcf1))
                     (not (= A.global #xfffffcf0)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffcf0))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000310 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffcf0
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffcf0))
                (not (= A.global #xfffffcef))
                (ite (= a!1 (bvadd #x00000310 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000310 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000310 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000310 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:01,763] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:01,783] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+786) != <nullptr>) && (gep[inbounds](A.global,0+0+786) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+786)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+786)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:01,791] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:01,794] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffcef))
                     (not (= A.global #xfffffcee)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000312 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffcef))
                     (not (= A.global #xfffffcee)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffcef)))
      (a!3 (ite (and (not (= A.global #xfffffcef))
                     (not (= A.global #xfffffcee)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffcee))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000312 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffcee
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffcee))
                (not (= A.global #xfffffced))
                (ite (= a!1 (bvadd #x00000312 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000312 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000312 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000312 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:01,801] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:01,822] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+788) != <nullptr>) && (gep[inbounds](A.global,0+0+788) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+788)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+788)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:01,829] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:01,832] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffced))
                     (not (= A.global #xfffffcec)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000314 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffced))
                     (not (= A.global #xfffffcec)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffced)))
      (a!3 (ite (and (not (= A.global #xfffffced))
                     (not (= A.global #xfffffcec)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffcec))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000314 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffcec
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffcec))
                (not (= A.global #xfffffceb))
                (ite (= a!1 (bvadd #x00000314 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000314 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000314 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000314 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:01,842] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:01,869] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+790) != <nullptr>) && (gep[inbounds](A.global,0+0+790) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+790)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+790)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:01,876] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:01,879] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffceb))
                     (not (= A.global #xfffffcea)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000316 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffceb))
                     (not (= A.global #xfffffcea)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffceb)))
      (a!3 (ite (and (not (= A.global #xfffffceb))
                     (not (= A.global #xfffffcea)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffcea))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000316 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffcea
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffcea))
                (not (= A.global #xfffffce9))
                (ite (= a!1 (bvadd #x00000316 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000316 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000316 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000316 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:01,887] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:01,907] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+792) != <nullptr>) && (gep[inbounds](A.global,0+0+792) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+792)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+792)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:01,914] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:01,917] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffce9))
                     (not (= A.global #xfffffce8)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000318 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffce9))
                     (not (= A.global #xfffffce8)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffce9)))
      (a!3 (ite (and (not (= A.global #xfffffce9))
                     (not (= A.global #xfffffce8)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffce8))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000318 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffce8
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffce8))
                (not (= A.global #xfffffce7))
                (ite (= a!1 (bvadd #x00000318 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000318 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000318 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000318 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:01,927] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:01,948] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+794) != <nullptr>) && (gep[inbounds](A.global,0+0+794) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+794)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+794)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:01,955] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:01,958] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffce7))
                     (not (= A.global #xfffffce6)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000031a A.global)))
      (a!2 (ite (and (not (= A.global #xfffffce7))
                     (not (= A.global #xfffffce6)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffce7)))
      (a!3 (ite (and (not (= A.global #xfffffce7))
                     (not (= A.global #xfffffce6)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffce6))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000031a A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffce6
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffce6))
                (not (= A.global #xfffffce5))
                (ite (= a!1 (bvadd #x0000031a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000031a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000031a A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000031a A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:01,968] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:01,989] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+796) != <nullptr>) && (gep[inbounds](A.global,0+0+796) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+796)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+796)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:01,996] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:02,000] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffce5))
                     (not (= A.global #xfffffce4)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000031c A.global)))
      (a!2 (ite (and (not (= A.global #xfffffce5))
                     (not (= A.global #xfffffce4)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffce5)))
      (a!3 (ite (and (not (= A.global #xfffffce5))
                     (not (= A.global #xfffffce4)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffce4))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000031c A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffce4
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffce4))
                (not (= A.global #xfffffce3))
                (ite (= a!1 (bvadd #x0000031c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000031c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000031c A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000031c A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:02,006] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:02,027] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+798) != <nullptr>) && (gep[inbounds](A.global,0+0+798) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+798)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+798)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:02,033] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:02,038] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffce3))
                     (not (= A.global #xfffffce2)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000031e A.global)))
      (a!2 (ite (and (not (= A.global #xfffffce3))
                     (not (= A.global #xfffffce2)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffce3)))
      (a!3 (ite (and (not (= A.global #xfffffce3))
                     (not (= A.global #xfffffce2)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffce2))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000031e A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffce2
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffce2))
                (not (= A.global #xfffffce1))
                (ite (= a!1 (bvadd #x0000031e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000031e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000031e A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000031e A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:02,044] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:02,070] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+800) != <nullptr>) && (gep[inbounds](A.global,0+0+800) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+800)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+800)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:02,077] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:02,080] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffce1))
                     (not (= A.global #xfffffce0)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000320 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffce1))
                     (not (= A.global #xfffffce0)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffce1)))
      (a!3 (ite (and (not (= A.global #xfffffce1))
                     (not (= A.global #xfffffce0)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffce0))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000320 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffce0
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffce0))
                (not (= A.global #xfffffcdf))
                (ite (= a!1 (bvadd #x00000320 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000320 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000320 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000320 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:02,087] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:02,108] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+802) != <nullptr>) && (gep[inbounds](A.global,0+0+802) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+802)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+802)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:02,115] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:02,118] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffcdf))
                     (not (= A.global #xfffffcde)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000322 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffcdf))
                     (not (= A.global #xfffffcde)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffcdf)))
      (a!3 (ite (and (not (= A.global #xfffffcdf))
                     (not (= A.global #xfffffcde)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffcde))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000322 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffcde
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffcde))
                (not (= A.global #xfffffcdd))
                (ite (= a!1 (bvadd #x00000322 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000322 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000322 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000322 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:02,125] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:02,145] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+804) != <nullptr>) && (gep[inbounds](A.global,0+0+804) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+804)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+804)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:02,152] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:02,156] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffcdd))
                     (not (= A.global #xfffffcdc)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000324 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffcdd))
                     (not (= A.global #xfffffcdc)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffcdd)))
      (a!3 (ite (and (not (= A.global #xfffffcdd))
                     (not (= A.global #xfffffcdc)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffcdc))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000324 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffcdc
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffcdc))
                (not (= A.global #xfffffcdb))
                (ite (= a!1 (bvadd #x00000324 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000324 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000324 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000324 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:02,165] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:02,186] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+806) != <nullptr>) && (gep[inbounds](A.global,0+0+806) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+806)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+806)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:02,193] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:02,197] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffcdb))
                     (not (= A.global #xfffffcda)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000326 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffcdb))
                     (not (= A.global #xfffffcda)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffcdb)))
      (a!3 (ite (and (not (= A.global #xfffffcdb))
                     (not (= A.global #xfffffcda)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffcda))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000326 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffcda
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffcda))
                (not (= A.global #xfffffcd9))
                (ite (= a!1 (bvadd #x00000326 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000326 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000326 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000326 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:02,204] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:02,225] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+808) != <nullptr>) && (gep[inbounds](A.global,0+0+808) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+808)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+808)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:02,232] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:02,236] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffcd9))
                     (not (= A.global #xfffffcd8)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000328 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffcd9))
                     (not (= A.global #xfffffcd8)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffcd9)))
      (a!3 (ite (and (not (= A.global #xfffffcd9))
                     (not (= A.global #xfffffcd8)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffcd8))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000328 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffcd8
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffcd8))
                (not (= A.global #xfffffcd7))
                (ite (= a!1 (bvadd #x00000328 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000328 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000328 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000328 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:02,243] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:02,269] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+810) != <nullptr>) && (gep[inbounds](A.global,0+0+810) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+810)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+810)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:02,276] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:02,280] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffcd7))
                     (not (= A.global #xfffffcd6)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000032a A.global)))
      (a!2 (ite (and (not (= A.global #xfffffcd7))
                     (not (= A.global #xfffffcd6)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffcd7)))
      (a!3 (ite (and (not (= A.global #xfffffcd7))
                     (not (= A.global #xfffffcd6)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffcd6))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000032a A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffcd6
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffcd6))
                (not (= A.global #xfffffcd5))
                (ite (= a!1 (bvadd #x0000032a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000032a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000032a A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000032a A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:02,289] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:02,311] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+812) != <nullptr>) && (gep[inbounds](A.global,0+0+812) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+812)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+812)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:02,318] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:02,321] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffcd5))
                     (not (= A.global #xfffffcd4)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000032c A.global)))
      (a!2 (ite (and (not (= A.global #xfffffcd5))
                     (not (= A.global #xfffffcd4)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffcd5)))
      (a!3 (ite (and (not (= A.global #xfffffcd5))
                     (not (= A.global #xfffffcd4)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffcd4))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000032c A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffcd4
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffcd4))
                (not (= A.global #xfffffcd3))
                (ite (= a!1 (bvadd #x0000032c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000032c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000032c A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000032c A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:02,328] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:02,349] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+814) != <nullptr>) && (gep[inbounds](A.global,0+0+814) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+814)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+814)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:02,357] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:02,360] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffcd3))
                     (not (= A.global #xfffffcd2)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000032e A.global)))
      (a!2 (ite (and (not (= A.global #xfffffcd3))
                     (not (= A.global #xfffffcd2)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffcd3)))
      (a!3 (ite (and (not (= A.global #xfffffcd3))
                     (not (= A.global #xfffffcd2)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffcd2))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000032e A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffcd2
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffcd2))
                (not (= A.global #xfffffcd1))
                (ite (= a!1 (bvadd #x0000032e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000032e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000032e A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000032e A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:02,367] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:02,389] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+816) != <nullptr>) && (gep[inbounds](A.global,0+0+816) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+816)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+816)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:02,396] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:02,399] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffcd1))
                     (not (= A.global #xfffffcd0)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000330 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffcd1))
                     (not (= A.global #xfffffcd0)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffcd1)))
      (a!3 (ite (and (not (= A.global #xfffffcd1))
                     (not (= A.global #xfffffcd0)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffcd0))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000330 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffcd0
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffcd0))
                (not (= A.global #xfffffccf))
                (ite (= a!1 (bvadd #x00000330 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000330 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000330 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000330 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:02,410] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:02,431] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+818) != <nullptr>) && (gep[inbounds](A.global,0+0+818) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+818)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+818)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:02,438] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:02,441] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffccf))
                     (not (= A.global #xfffffcce)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000332 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffccf))
                     (not (= A.global #xfffffcce)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffccf)))
      (a!3 (ite (and (not (= A.global #xfffffccf))
                     (not (= A.global #xfffffcce)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffcce))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000332 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffcce
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffcce))
                (not (= A.global #xfffffccd))
                (ite (= a!1 (bvadd #x00000332 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000332 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000332 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000332 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:02,450] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:02,478] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+820) != <nullptr>) && (gep[inbounds](A.global,0+0+820) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+820)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+820)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:02,485] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:02,488] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffccd))
                     (not (= A.global #xfffffccc)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000334 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffccd))
                     (not (= A.global #xfffffccc)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffccd)))
      (a!3 (ite (and (not (= A.global #xfffffccd))
                     (not (= A.global #xfffffccc)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffccc))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000334 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffccc
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffccc))
                (not (= A.global #xfffffccb))
                (ite (= a!1 (bvadd #x00000334 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000334 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000334 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000334 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:02,495] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:02,517] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+822) != <nullptr>) && (gep[inbounds](A.global,0+0+822) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+822)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+822)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:02,523] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:02,527] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffccb))
                     (not (= A.global #xfffffcca)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000336 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffccb))
                     (not (= A.global #xfffffcca)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffccb)))
      (a!3 (ite (and (not (= A.global #xfffffccb))
                     (not (= A.global #xfffffcca)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffcca))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000336 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffcca
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffcca))
                (not (= A.global #xfffffcc9))
                (ite (= a!1 (bvadd #x00000336 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000336 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000336 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000336 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:02,534] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:02,555] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+824) != <nullptr>) && (gep[inbounds](A.global,0+0+824) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+824)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+824)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:02,563] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:02,566] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffcc9))
                     (not (= A.global #xfffffcc8)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000338 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffcc9))
                     (not (= A.global #xfffffcc8)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffcc9)))
      (a!3 (ite (and (not (= A.global #xfffffcc9))
                     (not (= A.global #xfffffcc8)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffcc8))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000338 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffcc8
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffcc8))
                (not (= A.global #xfffffcc7))
                (ite (= a!1 (bvadd #x00000338 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000338 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000338 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000338 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:02,572] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:02,594] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+826) != <nullptr>) && (gep[inbounds](A.global,0+0+826) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+826)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+826)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:02,601] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:02,604] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffcc7))
                     (not (= A.global #xfffffcc6)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000033a A.global)))
      (a!2 (ite (and (not (= A.global #xfffffcc7))
                     (not (= A.global #xfffffcc6)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffcc7)))
      (a!3 (ite (and (not (= A.global #xfffffcc7))
                     (not (= A.global #xfffffcc6)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffcc6))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000033a A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffcc6
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffcc6))
                (not (= A.global #xfffffcc5))
                (ite (= a!1 (bvadd #x0000033a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000033a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000033a A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000033a A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:02,612] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:02,634] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+828) != <nullptr>) && (gep[inbounds](A.global,0+0+828) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+828)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+828)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:02,640] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:02,644] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffcc5))
                     (not (= A.global #xfffffcc4)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000033c A.global)))
      (a!2 (ite (and (not (= A.global #xfffffcc5))
                     (not (= A.global #xfffffcc4)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffcc5)))
      (a!3 (ite (and (not (= A.global #xfffffcc5))
                     (not (= A.global #xfffffcc4)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffcc4))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000033c A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffcc4
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffcc4))
                (not (= A.global #xfffffcc3))
                (ite (= a!1 (bvadd #x0000033c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000033c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000033c A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000033c A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:02,651] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:02,678] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+830) != <nullptr>) && (gep[inbounds](A.global,0+0+830) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+830)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+830)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:02,685] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:02,688] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffcc3))
                     (not (= A.global #xfffffcc2)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000033e A.global)))
      (a!2 (ite (and (not (= A.global #xfffffcc3))
                     (not (= A.global #xfffffcc2)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffcc3)))
      (a!3 (ite (and (not (= A.global #xfffffcc3))
                     (not (= A.global #xfffffcc2)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffcc2))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000033e A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffcc2
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffcc2))
                (not (= A.global #xfffffcc1))
                (ite (= a!1 (bvadd #x0000033e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000033e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000033e A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000033e A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:02,695] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:02,717] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+832) != <nullptr>) && (gep[inbounds](A.global,0+0+832) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+832)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+832)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:02,724] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:02,727] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffcc1))
                     (not (= A.global #xfffffcc0)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000340 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffcc1))
                     (not (= A.global #xfffffcc0)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffcc1)))
      (a!3 (ite (and (not (= A.global #xfffffcc1))
                     (not (= A.global #xfffffcc0)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffcc0))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000340 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffcc0
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffcc0))
                (not (= A.global #xfffffcbf))
                (ite (= a!1 (bvadd #x00000340 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000340 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000340 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000340 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:02,734] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:02,755] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+834) != <nullptr>) && (gep[inbounds](A.global,0+0+834) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+834)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+834)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:02,762] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:02,765] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffcbf))
                     (not (= A.global #xfffffcbe)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000342 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffcbf))
                     (not (= A.global #xfffffcbe)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffcbf)))
      (a!3 (ite (and (not (= A.global #xfffffcbf))
                     (not (= A.global #xfffffcbe)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffcbe))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000342 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffcbe
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffcbe))
                (not (= A.global #xfffffcbd))
                (ite (= a!1 (bvadd #x00000342 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000342 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000342 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000342 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:02,774] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:02,795] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+836) != <nullptr>) && (gep[inbounds](A.global,0+0+836) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+836)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+836)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:02,802] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:02,806] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffcbd))
                     (not (= A.global #xfffffcbc)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000344 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffcbd))
                     (not (= A.global #xfffffcbc)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffcbd)))
      (a!3 (ite (and (not (= A.global #xfffffcbd))
                     (not (= A.global #xfffffcbc)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffcbc))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000344 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffcbc
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffcbc))
                (not (= A.global #xfffffcbb))
                (ite (= a!1 (bvadd #x00000344 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000344 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000344 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000344 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:02,812] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:02,834] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+838) != <nullptr>) && (gep[inbounds](A.global,0+0+838) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+838)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+838)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:02,840] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:02,844] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffcbb))
                     (not (= A.global #xfffffcba)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000346 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffcbb))
                     (not (= A.global #xfffffcba)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffcbb)))
      (a!3 (ite (and (not (= A.global #xfffffcbb))
                     (not (= A.global #xfffffcba)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffcba))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000346 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffcba
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffcba))
                (not (= A.global #xfffffcb9))
                (ite (= a!1 (bvadd #x00000346 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000346 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000346 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000346 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:02,851] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:02,879] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+840) != <nullptr>) && (gep[inbounds](A.global,0+0+840) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+840)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+840)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:02,886] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:02,890] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffcb9))
                     (not (= A.global #xfffffcb8)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000348 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffcb9))
                     (not (= A.global #xfffffcb8)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffcb9)))
      (a!3 (ite (and (not (= A.global #xfffffcb9))
                     (not (= A.global #xfffffcb8)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffcb8))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000348 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffcb8
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffcb8))
                (not (= A.global #xfffffcb7))
                (ite (= a!1 (bvadd #x00000348 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000348 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000348 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000348 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:02,896] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:02,919] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+842) != <nullptr>) && (gep[inbounds](A.global,0+0+842) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+842)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+842)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:02,925] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:02,929] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffcb7))
                     (not (= A.global #xfffffcb6)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000034a A.global)))
      (a!2 (ite (and (not (= A.global #xfffffcb7))
                     (not (= A.global #xfffffcb6)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffcb7)))
      (a!3 (ite (and (not (= A.global #xfffffcb7))
                     (not (= A.global #xfffffcb6)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffcb6))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000034a A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffcb6
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffcb6))
                (not (= A.global #xfffffcb5))
                (ite (= a!1 (bvadd #x0000034a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000034a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000034a A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000034a A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:02,936] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:02,958] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+844) != <nullptr>) && (gep[inbounds](A.global,0+0+844) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+844)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+844)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:02,964] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:02,968] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffcb5))
                     (not (= A.global #xfffffcb4)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000034c A.global)))
      (a!2 (ite (and (not (= A.global #xfffffcb5))
                     (not (= A.global #xfffffcb4)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffcb5)))
      (a!3 (ite (and (not (= A.global #xfffffcb5))
                     (not (= A.global #xfffffcb4)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffcb4))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000034c A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffcb4
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffcb4))
                (not (= A.global #xfffffcb3))
                (ite (= a!1 (bvadd #x0000034c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000034c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000034c A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000034c A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:02,975] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:02,997] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+846) != <nullptr>) && (gep[inbounds](A.global,0+0+846) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+846)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+846)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:03,003] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:03,007] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffcb3))
                     (not (= A.global #xfffffcb2)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000034e A.global)))
      (a!2 (ite (and (not (= A.global #xfffffcb3))
                     (not (= A.global #xfffffcb2)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffcb3)))
      (a!3 (ite (and (not (= A.global #xfffffcb3))
                     (not (= A.global #xfffffcb2)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffcb2))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000034e A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffcb2
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffcb2))
                (not (= A.global #xfffffcb1))
                (ite (= a!1 (bvadd #x0000034e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000034e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000034e A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000034e A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:03,014] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:03,036] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+848) != <nullptr>) && (gep[inbounds](A.global,0+0+848) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+848)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+848)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:03,043] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:03,047] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffcb1))
                     (not (= A.global #xfffffcb0)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000350 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffcb1))
                     (not (= A.global #xfffffcb0)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffcb1)))
      (a!3 (ite (and (not (= A.global #xfffffcb1))
                     (not (= A.global #xfffffcb0)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffcb0))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000350 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffcb0
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffcb0))
                (not (= A.global #xfffffcaf))
                (ite (= a!1 (bvadd #x00000350 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000350 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000350 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000350 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:03,053] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:03,080] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+850) != <nullptr>) && (gep[inbounds](A.global,0+0+850) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+850)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+850)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:03,088] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:03,091] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffcaf))
                     (not (= A.global #xfffffcae)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000352 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffcaf))
                     (not (= A.global #xfffffcae)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffcaf)))
      (a!3 (ite (and (not (= A.global #xfffffcaf))
                     (not (= A.global #xfffffcae)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffcae))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000352 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffcae
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffcae))
                (not (= A.global #xfffffcad))
                (ite (= a!1 (bvadd #x00000352 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000352 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000352 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000352 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:03,100] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:03,122] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+852) != <nullptr>) && (gep[inbounds](A.global,0+0+852) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+852)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+852)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:03,129] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:03,133] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffcad))
                     (not (= A.global #xfffffcac)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000354 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffcad))
                     (not (= A.global #xfffffcac)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffcad)))
      (a!3 (ite (and (not (= A.global #xfffffcad))
                     (not (= A.global #xfffffcac)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffcac))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000354 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffcac
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffcac))
                (not (= A.global #xfffffcab))
                (ite (= a!1 (bvadd #x00000354 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000354 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000354 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000354 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:03,139] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:03,161] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+854) != <nullptr>) && (gep[inbounds](A.global,0+0+854) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+854)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+854)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:03,168] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:03,172] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffcab))
                     (not (= A.global #xfffffcaa)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000356 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffcab))
                     (not (= A.global #xfffffcaa)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffcab)))
      (a!3 (ite (and (not (= A.global #xfffffcab))
                     (not (= A.global #xfffffcaa)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffcaa))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000356 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffcaa
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffcaa))
                (not (= A.global #xfffffca9))
                (ite (= a!1 (bvadd #x00000356 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000356 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000356 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000356 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:03,180] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:03,201] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+856) != <nullptr>) && (gep[inbounds](A.global,0+0+856) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+856)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+856)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:03,208] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:03,212] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffca9))
                     (not (= A.global #xfffffca8)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000358 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffca9))
                     (not (= A.global #xfffffca8)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffca9)))
      (a!3 (ite (and (not (= A.global #xfffffca9))
                     (not (= A.global #xfffffca8)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffca8))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000358 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffca8
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffca8))
                (not (= A.global #xfffffca7))
                (ite (= a!1 (bvadd #x00000358 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000358 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000358 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000358 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:03,218] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:03,241] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+858) != <nullptr>) && (gep[inbounds](A.global,0+0+858) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+858)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+858)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:03,248] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:03,251] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffca7))
                     (not (= A.global #xfffffca6)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000035a A.global)))
      (a!2 (ite (and (not (= A.global #xfffffca7))
                     (not (= A.global #xfffffca6)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffca7)))
      (a!3 (ite (and (not (= A.global #xfffffca7))
                     (not (= A.global #xfffffca6)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffca6))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000035a A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffca6
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffca6))
                (not (= A.global #xfffffca5))
                (ite (= a!1 (bvadd #x0000035a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000035a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000035a A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000035a A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:03,258] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:03,287] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+860) != <nullptr>) && (gep[inbounds](A.global,0+0+860) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+860)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+860)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:03,293] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:03,297] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffca5))
                     (not (= A.global #xfffffca4)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000035c A.global)))
      (a!2 (ite (and (not (= A.global #xfffffca5))
                     (not (= A.global #xfffffca4)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffca5)))
      (a!3 (ite (and (not (= A.global #xfffffca5))
                     (not (= A.global #xfffffca4)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffca4))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000035c A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffca4
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffca4))
                (not (= A.global #xfffffca3))
                (ite (= a!1 (bvadd #x0000035c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000035c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000035c A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000035c A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:03,304] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:03,325] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+862) != <nullptr>) && (gep[inbounds](A.global,0+0+862) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+862)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+862)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:03,332] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:03,336] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffca3))
                     (not (= A.global #xfffffca2)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000035e A.global)))
      (a!2 (ite (and (not (= A.global #xfffffca3))
                     (not (= A.global #xfffffca2)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffca3)))
      (a!3 (ite (and (not (= A.global #xfffffca3))
                     (not (= A.global #xfffffca2)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffca2))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000035e A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffca2
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffca2))
                (not (= A.global #xfffffca1))
                (ite (= a!1 (bvadd #x0000035e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000035e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000035e A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000035e A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:03,344] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:03,365] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+864) != <nullptr>) && (gep[inbounds](A.global,0+0+864) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+864)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+864)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:03,372] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:03,376] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffca1))
                     (not (= A.global #xfffffca0)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000360 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffca1))
                     (not (= A.global #xfffffca0)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffca1)))
      (a!3 (ite (and (not (= A.global #xfffffca1))
                     (not (= A.global #xfffffca0)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffca0))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000360 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffca0
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffca0))
                (not (= A.global #xfffffc9f))
                (ite (= a!1 (bvadd #x00000360 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000360 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000360 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000360 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:03,382] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:03,404] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+866) != <nullptr>) && (gep[inbounds](A.global,0+0+866) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+866)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+866)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:03,411] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:03,415] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc9f))
                     (not (= A.global #xfffffc9e)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000362 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc9f))
                     (not (= A.global #xfffffc9e)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc9f)))
      (a!3 (ite (and (not (= A.global #xfffffc9f))
                     (not (= A.global #xfffffc9e)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc9e))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000362 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc9e
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc9e))
                (not (= A.global #xfffffc9d))
                (ite (= a!1 (bvadd #x00000362 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000362 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000362 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000362 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:03,422] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:03,444] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+868) != <nullptr>) && (gep[inbounds](A.global,0+0+868) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+868)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+868)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:03,451] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:03,454] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc9d))
                     (not (= A.global #xfffffc9c)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000364 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc9d))
                     (not (= A.global #xfffffc9c)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc9d)))
      (a!3 (ite (and (not (= A.global #xfffffc9d))
                     (not (= A.global #xfffffc9c)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc9c))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000364 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc9c
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc9c))
                (not (= A.global #xfffffc9b))
                (ite (= a!1 (bvadd #x00000364 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000364 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000364 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000364 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:03,461] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:03,489] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+870) != <nullptr>) && (gep[inbounds](A.global,0+0+870) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+870)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+870)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:03,496] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:03,499] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc9b))
                     (not (= A.global #xfffffc9a)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000366 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc9b))
                     (not (= A.global #xfffffc9a)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc9b)))
      (a!3 (ite (and (not (= A.global #xfffffc9b))
                     (not (= A.global #xfffffc9a)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc9a))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000366 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc9a
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc9a))
                (not (= A.global #xfffffc99))
                (ite (= a!1 (bvadd #x00000366 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000366 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000366 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000366 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:03,506] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:03,529] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+872) != <nullptr>) && (gep[inbounds](A.global,0+0+872) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+872)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+872)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:03,536] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:03,539] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc99))
                     (not (= A.global #xfffffc98)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000368 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc99))
                     (not (= A.global #xfffffc98)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc99)))
      (a!3 (ite (and (not (= A.global #xfffffc99))
                     (not (= A.global #xfffffc98)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc98))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000368 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc98
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc98))
                (not (= A.global #xfffffc97))
                (ite (= a!1 (bvadd #x00000368 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000368 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000368 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000368 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:03,545] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:03,568] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+874) != <nullptr>) && (gep[inbounds](A.global,0+0+874) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+874)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+874)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:03,575] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:03,579] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc97))
                     (not (= A.global #xfffffc96)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000036a A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc97))
                     (not (= A.global #xfffffc96)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc97)))
      (a!3 (ite (and (not (= A.global #xfffffc97))
                     (not (= A.global #xfffffc96)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc96))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000036a A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc96
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc96))
                (not (= A.global #xfffffc95))
                (ite (= a!1 (bvadd #x0000036a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000036a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000036a A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000036a A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:03,586] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:03,608] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+876) != <nullptr>) && (gep[inbounds](A.global,0+0+876) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+876)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+876)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:03,615] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:03,619] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc95))
                     (not (= A.global #xfffffc94)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000036c A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc95))
                     (not (= A.global #xfffffc94)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc95)))
      (a!3 (ite (and (not (= A.global #xfffffc95))
                     (not (= A.global #xfffffc94)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc94))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000036c A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc94
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc94))
                (not (= A.global #xfffffc93))
                (ite (= a!1 (bvadd #x0000036c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000036c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000036c A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000036c A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:03,626] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:03,648] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+878) != <nullptr>) && (gep[inbounds](A.global,0+0+878) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+878)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+878)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:03,655] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:03,658] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc93))
                     (not (= A.global #xfffffc92)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000036e A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc93))
                     (not (= A.global #xfffffc92)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc93)))
      (a!3 (ite (and (not (= A.global #xfffffc93))
                     (not (= A.global #xfffffc92)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc92))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000036e A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc92
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc92))
                (not (= A.global #xfffffc91))
                (ite (= a!1 (bvadd #x0000036e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000036e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000036e A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000036e A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:03,666] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:03,694] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+880) != <nullptr>) && (gep[inbounds](A.global,0+0+880) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+880)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+880)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:03,702] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:03,705] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc91))
                     (not (= A.global #xfffffc90)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000370 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc91))
                     (not (= A.global #xfffffc90)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc91)))
      (a!3 (ite (and (not (= A.global #xfffffc91))
                     (not (= A.global #xfffffc90)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc90))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000370 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc90
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc90))
                (not (= A.global #xfffffc8f))
                (ite (= a!1 (bvadd #x00000370 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000370 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000370 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000370 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:03,712] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:03,734] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+882) != <nullptr>) && (gep[inbounds](A.global,0+0+882) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+882)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+882)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:03,741] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:03,745] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc8f))
                     (not (= A.global #xfffffc8e)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000372 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc8f))
                     (not (= A.global #xfffffc8e)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc8f)))
      (a!3 (ite (and (not (= A.global #xfffffc8f))
                     (not (= A.global #xfffffc8e)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc8e))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000372 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc8e
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc8e))
                (not (= A.global #xfffffc8d))
                (ite (= a!1 (bvadd #x00000372 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000372 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000372 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000372 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:03,752] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:03,774] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+884) != <nullptr>) && (gep[inbounds](A.global,0+0+884) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+884)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+884)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:03,781] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:03,785] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc8d))
                     (not (= A.global #xfffffc8c)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000374 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc8d))
                     (not (= A.global #xfffffc8c)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc8d)))
      (a!3 (ite (and (not (= A.global #xfffffc8d))
                     (not (= A.global #xfffffc8c)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc8c))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000374 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc8c
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc8c))
                (not (= A.global #xfffffc8b))
                (ite (= a!1 (bvadd #x00000374 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000374 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000374 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000374 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:03,791] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:03,814] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+886) != <nullptr>) && (gep[inbounds](A.global,0+0+886) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+886)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+886)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:03,820] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:03,824] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc8b))
                     (not (= A.global #xfffffc8a)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000376 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc8b))
                     (not (= A.global #xfffffc8a)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc8b)))
      (a!3 (ite (and (not (= A.global #xfffffc8b))
                     (not (= A.global #xfffffc8a)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc8a))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000376 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc8a
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc8a))
                (not (= A.global #xfffffc89))
                (ite (= a!1 (bvadd #x00000376 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000376 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000376 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000376 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:03,832] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:03,855] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+888) != <nullptr>) && (gep[inbounds](A.global,0+0+888) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+888)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+888)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:03,861] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:03,865] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc89))
                     (not (= A.global #xfffffc88)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000378 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc89))
                     (not (= A.global #xfffffc88)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc89)))
      (a!3 (ite (and (not (= A.global #xfffffc89))
                     (not (= A.global #xfffffc88)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc88))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000378 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc88
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc88))
                (not (= A.global #xfffffc87))
                (ite (= a!1 (bvadd #x00000378 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000378 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000378 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000378 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:03,872] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:03,900] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+890) != <nullptr>) && (gep[inbounds](A.global,0+0+890) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+890)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+890)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:03,906] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:03,910] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc87))
                     (not (= A.global #xfffffc86)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000037a A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc87))
                     (not (= A.global #xfffffc86)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc87)))
      (a!3 (ite (and (not (= A.global #xfffffc87))
                     (not (= A.global #xfffffc86)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc86))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000037a A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc86
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc86))
                (not (= A.global #xfffffc85))
                (ite (= a!1 (bvadd #x0000037a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000037a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000037a A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000037a A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:03,917] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:03,940] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+892) != <nullptr>) && (gep[inbounds](A.global,0+0+892) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+892)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+892)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:03,947] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:03,950] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc85))
                     (not (= A.global #xfffffc84)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000037c A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc85))
                     (not (= A.global #xfffffc84)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc85)))
      (a!3 (ite (and (not (= A.global #xfffffc85))
                     (not (= A.global #xfffffc84)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc84))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000037c A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc84
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc84))
                (not (= A.global #xfffffc83))
                (ite (= a!1 (bvadd #x0000037c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000037c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000037c A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000037c A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:03,957] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:03,979] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+894) != <nullptr>) && (gep[inbounds](A.global,0+0+894) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+894)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+894)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:03,986] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:03,990] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc83))
                     (not (= A.global #xfffffc82)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000037e A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc83))
                     (not (= A.global #xfffffc82)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc83)))
      (a!3 (ite (and (not (= A.global #xfffffc83))
                     (not (= A.global #xfffffc82)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc82))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000037e A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc82
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc82))
                (not (= A.global #xfffffc81))
                (ite (= a!1 (bvadd #x0000037e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000037e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000037e A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000037e A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:03,998] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:04,020] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+896) != <nullptr>) && (gep[inbounds](A.global,0+0+896) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+896)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+896)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:04,027] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:04,031] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc81))
                     (not (= A.global #xfffffc80)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000380 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc81))
                     (not (= A.global #xfffffc80)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc81)))
      (a!3 (ite (and (not (= A.global #xfffffc81))
                     (not (= A.global #xfffffc80)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc80))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000380 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc80
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc80))
                (not (= A.global #xfffffc7f))
                (ite (= a!1 (bvadd #x00000380 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000380 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000380 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000380 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:04,037] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:04,060] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+898) != <nullptr>) && (gep[inbounds](A.global,0+0+898) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+898)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+898)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:04,067] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:04,070] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc7f))
                     (not (= A.global #xfffffc7e)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000382 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc7f))
                     (not (= A.global #xfffffc7e)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc7f)))
      (a!3 (ite (and (not (= A.global #xfffffc7f))
                     (not (= A.global #xfffffc7e)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc7e))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000382 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc7e
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc7e))
                (not (= A.global #xfffffc7d))
                (ite (= a!1 (bvadd #x00000382 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000382 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000382 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000382 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:04,077] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:04,105] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+900) != <nullptr>) && (gep[inbounds](A.global,0+0+900) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+900)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+900)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:04,112] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:04,116] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc7d))
                     (not (= A.global #xfffffc7c)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000384 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc7d))
                     (not (= A.global #xfffffc7c)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc7d)))
      (a!3 (ite (and (not (= A.global #xfffffc7d))
                     (not (= A.global #xfffffc7c)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc7c))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000384 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc7c
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc7c))
                (not (= A.global #xfffffc7b))
                (ite (= a!1 (bvadd #x00000384 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000384 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000384 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000384 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:04,122] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:04,145] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+902) != <nullptr>) && (gep[inbounds](A.global,0+0+902) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+902)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+902)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:04,152] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:04,155] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc7b))
                     (not (= A.global #xfffffc7a)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000386 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc7b))
                     (not (= A.global #xfffffc7a)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc7b)))
      (a!3 (ite (and (not (= A.global #xfffffc7b))
                     (not (= A.global #xfffffc7a)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc7a))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000386 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc7a
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc7a))
                (not (= A.global #xfffffc79))
                (ite (= a!1 (bvadd #x00000386 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000386 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000386 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000386 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:04,163] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:04,186] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+904) != <nullptr>) && (gep[inbounds](A.global,0+0+904) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+904)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+904)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:04,193] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:04,197] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc79))
                     (not (= A.global #xfffffc78)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000388 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc79))
                     (not (= A.global #xfffffc78)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc79)))
      (a!3 (ite (and (not (= A.global #xfffffc79))
                     (not (= A.global #xfffffc78)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc78))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000388 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc78
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc78))
                (not (= A.global #xfffffc77))
                (ite (= a!1 (bvadd #x00000388 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000388 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000388 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000388 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:04,203] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:04,226] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+906) != <nullptr>) && (gep[inbounds](A.global,0+0+906) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+906)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+906)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:04,233] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:04,237] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc77))
                     (not (= A.global #xfffffc76)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000038a A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc77))
                     (not (= A.global #xfffffc76)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc77)))
      (a!3 (ite (and (not (= A.global #xfffffc77))
                     (not (= A.global #xfffffc76)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc76))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000038a A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc76
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc76))
                (not (= A.global #xfffffc75))
                (ite (= a!1 (bvadd #x0000038a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000038a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000038a A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000038a A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:04,244] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:04,267] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+908) != <nullptr>) && (gep[inbounds](A.global,0+0+908) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+908)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+908)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:04,274] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:04,278] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc75))
                     (not (= A.global #xfffffc74)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000038c A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc75))
                     (not (= A.global #xfffffc74)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc75)))
      (a!3 (ite (and (not (= A.global #xfffffc75))
                     (not (= A.global #xfffffc74)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc74))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000038c A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc74
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc74))
                (not (= A.global #xfffffc73))
                (ite (= a!1 (bvadd #x0000038c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000038c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000038c A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000038c A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:04,290] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:04,312] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+910) != <nullptr>) && (gep[inbounds](A.global,0+0+910) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+910)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+910)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:04,319] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:04,323] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc73))
                     (not (= A.global #xfffffc72)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000038e A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc73))
                     (not (= A.global #xfffffc72)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc73)))
      (a!3 (ite (and (not (= A.global #xfffffc73))
                     (not (= A.global #xfffffc72)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc72))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000038e A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc72
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc72))
                (not (= A.global #xfffffc71))
                (ite (= a!1 (bvadd #x0000038e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000038e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000038e A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000038e A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:04,330] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:04,354] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+912) != <nullptr>) && (gep[inbounds](A.global,0+0+912) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+912)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+912)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:04,361] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:04,364] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc71))
                     (not (= A.global #xfffffc70)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000390 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc71))
                     (not (= A.global #xfffffc70)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc71)))
      (a!3 (ite (and (not (= A.global #xfffffc71))
                     (not (= A.global #xfffffc70)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc70))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000390 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc70
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc70))
                (not (= A.global #xfffffc6f))
                (ite (= a!1 (bvadd #x00000390 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000390 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000390 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000390 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:04,370] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:04,394] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+914) != <nullptr>) && (gep[inbounds](A.global,0+0+914) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+914)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+914)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:04,401] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:04,404] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc6f))
                     (not (= A.global #xfffffc6e)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000392 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc6f))
                     (not (= A.global #xfffffc6e)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc6f)))
      (a!3 (ite (and (not (= A.global #xfffffc6f))
                     (not (= A.global #xfffffc6e)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc6e))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000392 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc6e
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc6e))
                (not (= A.global #xfffffc6d))
                (ite (= a!1 (bvadd #x00000392 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000392 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000392 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000392 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:04,411] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:04,433] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+916) != <nullptr>) && (gep[inbounds](A.global,0+0+916) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+916)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+916)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:04,441] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:04,444] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc6d))
                     (not (= A.global #xfffffc6c)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000394 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc6d))
                     (not (= A.global #xfffffc6c)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc6d)))
      (a!3 (ite (and (not (= A.global #xfffffc6d))
                     (not (= A.global #xfffffc6c)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc6c))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000394 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc6c
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc6c))
                (not (= A.global #xfffffc6b))
                (ite (= a!1 (bvadd #x00000394 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000394 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000394 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000394 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:04,450] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:04,474] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+918) != <nullptr>) && (gep[inbounds](A.global,0+0+918) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+918)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+918)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:04,481] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:04,485] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc6b))
                     (not (= A.global #xfffffc6a)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000396 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc6b))
                     (not (= A.global #xfffffc6a)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc6b)))
      (a!3 (ite (and (not (= A.global #xfffffc6b))
                     (not (= A.global #xfffffc6a)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc6a))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000396 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc6a
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc6a))
                (not (= A.global #xfffffc69))
                (ite (= a!1 (bvadd #x00000396 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000396 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000396 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000396 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:04,498] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:04,521] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+920) != <nullptr>) && (gep[inbounds](A.global,0+0+920) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+920)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+920)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:04,528] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:04,532] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc69))
                     (not (= A.global #xfffffc68)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x00000398 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc69))
                     (not (= A.global #xfffffc68)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc69)))
      (a!3 (ite (and (not (= A.global #xfffffc69))
                     (not (= A.global #xfffffc68)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc68))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x00000398 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc68
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc68))
                (not (= A.global #xfffffc67))
                (ite (= a!1 (bvadd #x00000398 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x00000398 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x00000398 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x00000398 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:04,538] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:04,561] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+922) != <nullptr>) && (gep[inbounds](A.global,0+0+922) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+922)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+922)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:04,568] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:04,572] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc67))
                     (not (= A.global #xfffffc66)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000039a A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc67))
                     (not (= A.global #xfffffc66)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc67)))
      (a!3 (ite (and (not (= A.global #xfffffc67))
                     (not (= A.global #xfffffc66)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc66))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000039a A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc66
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc66))
                (not (= A.global #xfffffc65))
                (ite (= a!1 (bvadd #x0000039a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000039a A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000039a A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000039a A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:04,579] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:04,603] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+924) != <nullptr>) && (gep[inbounds](A.global,0+0+924) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+924)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+924)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:04,610] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:04,613] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc65))
                     (not (= A.global #xfffffc64)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000039c A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc65))
                     (not (= A.global #xfffffc64)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc65)))
      (a!3 (ite (and (not (= A.global #xfffffc65))
                     (not (= A.global #xfffffc64)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc64))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000039c A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc64
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc64))
                (not (= A.global #xfffffc63))
                (ite (= a!1 (bvadd #x0000039c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000039c A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000039c A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000039c A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:04,620] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:04,644] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+926) != <nullptr>) && (gep[inbounds](A.global,0+0+926) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+926)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+926)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:04,650] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:04,654] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc63))
                     (not (= A.global #xfffffc62)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x0000039e A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc63))
                     (not (= A.global #xfffffc62)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc63)))
      (a!3 (ite (and (not (= A.global #xfffffc63))
                     (not (= A.global #xfffffc62)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc62))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x0000039e A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc62
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc62))
                (not (= A.global #xfffffc61))
                (ite (= a!1 (bvadd #x0000039e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x0000039e A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x0000039e A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x0000039e A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:04,662] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:04,685] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+928) != <nullptr>) && (gep[inbounds](A.global,0+0+928) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+928)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+928)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:04,698] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:04,701] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc61))
                     (not (= A.global #xfffffc60)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000003a0 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc61))
                     (not (= A.global #xfffffc60)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc61)))
      (a!3 (ite (and (not (= A.global #xfffffc61))
                     (not (= A.global #xfffffc60)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc60))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000003a0 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc60
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc60))
                (not (= A.global #xfffffc5f))
                (ite (= a!1 (bvadd #x000003a0 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000003a0 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000003a0 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000003a0 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:04,709] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:04,732] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+930) != <nullptr>) && (gep[inbounds](A.global,0+0+930) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+930)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+930)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:04,739] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:04,742] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc5f))
                     (not (= A.global #xfffffc5e)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000003a2 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc5f))
                     (not (= A.global #xfffffc5e)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc5f)))
      (a!3 (ite (and (not (= A.global #xfffffc5f))
                     (not (= A.global #xfffffc5e)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc5e))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000003a2 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc5e
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc5e))
                (not (= A.global #xfffffc5d))
                (ite (= a!1 (bvadd #x000003a2 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000003a2 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000003a2 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000003a2 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:04,750] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:04,774] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+932) != <nullptr>) && (gep[inbounds](A.global,0+0+932) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+932)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+932)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:04,780] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:04,784] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc5d))
                     (not (= A.global #xfffffc5c)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000003a4 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc5d))
                     (not (= A.global #xfffffc5c)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc5d)))
      (a!3 (ite (and (not (= A.global #xfffffc5d))
                     (not (= A.global #xfffffc5c)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc5c))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000003a4 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc5c
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc5c))
                (not (= A.global #xfffffc5b))
                (ite (= a!1 (bvadd #x000003a4 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000003a4 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000003a4 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000003a4 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:04,791] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:04,814] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+934) != <nullptr>) && (gep[inbounds](A.global,0+0+934) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+934)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+934)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:04,821] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:04,824] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc5b))
                     (not (= A.global #xfffffc5a)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000003a6 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc5b))
                     (not (= A.global #xfffffc5a)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc5b)))
      (a!3 (ite (and (not (= A.global #xfffffc5b))
                     (not (= A.global #xfffffc5a)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc5a))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000003a6 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc5a
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc5a))
                (not (= A.global #xfffffc59))
                (ite (= a!1 (bvadd #x000003a6 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000003a6 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000003a6 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000003a6 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:04,831] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:04,855] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+936) != <nullptr>) && (gep[inbounds](A.global,0+0+936) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+936)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+936)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:04,862] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:04,866] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc59))
                     (not (= A.global #xfffffc58)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000003a8 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc59))
                     (not (= A.global #xfffffc58)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc59)))
      (a!3 (ite (and (not (= A.global #xfffffc59))
                     (not (= A.global #xfffffc58)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc58))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000003a8 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc58
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc58))
                (not (= A.global #xfffffc57))
                (ite (= a!1 (bvadd #x000003a8 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000003a8 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000003a8 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000003a8 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:04,874] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:04,903] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+938) != <nullptr>) && (gep[inbounds](A.global,0+0+938) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+938)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+938)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:04,910] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:04,913] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc57))
                     (not (= A.global #xfffffc56)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000003aa A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc57))
                     (not (= A.global #xfffffc56)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc57)))
      (a!3 (ite (and (not (= A.global #xfffffc57))
                     (not (= A.global #xfffffc56)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc56))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000003aa A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc56
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc56))
                (not (= A.global #xfffffc55))
                (ite (= a!1 (bvadd #x000003aa A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000003aa A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000003aa A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000003aa A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:04,920] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:04,943] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+940) != <nullptr>) && (gep[inbounds](A.global,0+0+940) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+940)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+940)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:04,950] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:04,954] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc55))
                     (not (= A.global #xfffffc54)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000003ac A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc55))
                     (not (= A.global #xfffffc54)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc55)))
      (a!3 (ite (and (not (= A.global #xfffffc55))
                     (not (= A.global #xfffffc54)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc54))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000003ac A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc54
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc54))
                (not (= A.global #xfffffc53))
                (ite (= a!1 (bvadd #x000003ac A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000003ac A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000003ac A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000003ac A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:04,960] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:04,984] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+942) != <nullptr>) && (gep[inbounds](A.global,0+0+942) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+942)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+942)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:04,992] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:04,995] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc53))
                     (not (= A.global #xfffffc52)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000003ae A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc53))
                     (not (= A.global #xfffffc52)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc53)))
      (a!3 (ite (and (not (= A.global #xfffffc53))
                     (not (= A.global #xfffffc52)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc52))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000003ae A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc52
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc52))
                (not (= A.global #xfffffc51))
                (ite (= a!1 (bvadd #x000003ae A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000003ae A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000003ae A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000003ae A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:05,002] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:05,025] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+944) != <nullptr>) && (gep[inbounds](A.global,0+0+944) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+944)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+944)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:05,032] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:05,036] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc51))
                     (not (= A.global #xfffffc50)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000003b0 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc51))
                     (not (= A.global #xfffffc50)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc51)))
      (a!3 (ite (and (not (= A.global #xfffffc51))
                     (not (= A.global #xfffffc50)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc50))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000003b0 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc50
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc50))
                (not (= A.global #xfffffc4f))
                (ite (= a!1 (bvadd #x000003b0 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000003b0 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000003b0 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000003b0 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:05,043] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:05,066] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+946) != <nullptr>) && (gep[inbounds](A.global,0+0+946) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+946)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+946)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:05,073] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:05,077] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc4f))
                     (not (= A.global #xfffffc4e)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000003b2 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc4f))
                     (not (= A.global #xfffffc4e)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc4f)))
      (a!3 (ite (and (not (= A.global #xfffffc4f))
                     (not (= A.global #xfffffc4e)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc4e))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000003b2 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc4e
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc4e))
                (not (= A.global #xfffffc4d))
                (ite (= a!1 (bvadd #x000003b2 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000003b2 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000003b2 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000003b2 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:05,084] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:05,113] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+948) != <nullptr>) && (gep[inbounds](A.global,0+0+948) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+948)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+948)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:05,120] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:05,124] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc4d))
                     (not (= A.global #xfffffc4c)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000003b4 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc4d))
                     (not (= A.global #xfffffc4c)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc4d)))
      (a!3 (ite (and (not (= A.global #xfffffc4d))
                     (not (= A.global #xfffffc4c)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc4c))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000003b4 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc4c
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc4c))
                (not (= A.global #xfffffc4b))
                (ite (= a!1 (bvadd #x000003b4 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000003b4 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000003b4 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000003b4 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:05,131] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:05,155] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+950) != <nullptr>) && (gep[inbounds](A.global,0+0+950) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+950)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+950)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:05,162] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:05,165] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc4b))
                     (not (= A.global #xfffffc4a)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000003b6 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc4b))
                     (not (= A.global #xfffffc4a)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc4b)))
      (a!3 (ite (and (not (= A.global #xfffffc4b))
                     (not (= A.global #xfffffc4a)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc4a))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000003b6 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc4a
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc4a))
                (not (= A.global #xfffffc49))
                (ite (= a!1 (bvadd #x000003b6 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000003b6 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000003b6 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000003b6 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:05,173] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:05,197] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+952) != <nullptr>) && (gep[inbounds](A.global,0+0+952) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+952)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+952)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:05,204] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:05,207] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc49))
                     (not (= A.global #xfffffc48)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000003b8 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc49))
                     (not (= A.global #xfffffc48)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc49)))
      (a!3 (ite (and (not (= A.global #xfffffc49))
                     (not (= A.global #xfffffc48)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc48))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000003b8 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc48
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc48))
                (not (= A.global #xfffffc47))
                (ite (= a!1 (bvadd #x000003b8 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000003b8 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000003b8 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000003b8 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:05,213] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:05,238] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+954) != <nullptr>) && (gep[inbounds](A.global,0+0+954) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+954)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+954)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:05,245] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:05,248] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc47))
                     (not (= A.global #xfffffc46)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000003ba A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc47))
                     (not (= A.global #xfffffc46)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc47)))
      (a!3 (ite (and (not (= A.global #xfffffc47))
                     (not (= A.global #xfffffc46)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc46))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000003ba A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc46
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc46))
                (not (= A.global #xfffffc45))
                (ite (= a!1 (bvadd #x000003ba A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000003ba A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000003ba A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000003ba A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:05,255] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:05,279] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+956) != <nullptr>) && (gep[inbounds](A.global,0+0+956) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+956)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+956)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:05,286] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:05,290] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc45))
                     (not (= A.global #xfffffc44)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000003bc A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc45))
                     (not (= A.global #xfffffc44)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc45)))
      (a!3 (ite (and (not (= A.global #xfffffc45))
                     (not (= A.global #xfffffc44)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc44))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000003bc A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc44
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc44))
                (not (= A.global #xfffffc43))
                (ite (= a!1 (bvadd #x000003bc A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000003bc A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000003bc A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000003bc A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:05,296] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:05,325] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+958) != <nullptr>) && (gep[inbounds](A.global,0+0+958) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+958)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+958)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:05,332] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:05,335] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc43))
                     (not (= A.global #xfffffc42)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000003be A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc43))
                     (not (= A.global #xfffffc42)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc43)))
      (a!3 (ite (and (not (= A.global #xfffffc43))
                     (not (= A.global #xfffffc42)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc42))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000003be A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc42
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc42))
                (not (= A.global #xfffffc41))
                (ite (= a!1 (bvadd #x000003be A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000003be A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000003be A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000003be A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:05,343] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:05,367] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+960) != <nullptr>) && (gep[inbounds](A.global,0+0+960) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+960)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+960)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:05,373] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:05,378] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc41))
                     (not (= A.global #xfffffc40)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000003c0 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc41))
                     (not (= A.global #xfffffc40)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc41)))
      (a!3 (ite (and (not (= A.global #xfffffc41))
                     (not (= A.global #xfffffc40)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc40))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000003c0 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc40
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc40))
                (not (= A.global #xfffffc3f))
                (ite (= a!1 (bvadd #x000003c0 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000003c0 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000003c0 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000003c0 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:05,384] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:05,409] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+962) != <nullptr>) && (gep[inbounds](A.global,0+0+962) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+962)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+962)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:05,415] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:05,419] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc3f))
                     (not (= A.global #xfffffc3e)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000003c2 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc3f))
                     (not (= A.global #xfffffc3e)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc3f)))
      (a!3 (ite (and (not (= A.global #xfffffc3f))
                     (not (= A.global #xfffffc3e)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc3e))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000003c2 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc3e
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc3e))
                (not (= A.global #xfffffc3d))
                (ite (= a!1 (bvadd #x000003c2 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000003c2 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000003c2 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000003c2 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:05,426] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:05,451] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+964) != <nullptr>) && (gep[inbounds](A.global,0+0+964) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+964)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+964)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:05,457] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:05,461] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc3d))
                     (not (= A.global #xfffffc3c)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000003c4 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc3d))
                     (not (= A.global #xfffffc3c)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc3d)))
      (a!3 (ite (and (not (= A.global #xfffffc3d))
                     (not (= A.global #xfffffc3c)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc3c))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000003c4 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc3c
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc3c))
                (not (= A.global #xfffffc3b))
                (ite (= a!1 (bvadd #x000003c4 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000003c4 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000003c4 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000003c4 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:05,467] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:05,493] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+966) != <nullptr>) && (gep[inbounds](A.global,0+0+966) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+966)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+966)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:05,500] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:05,508] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc3b))
                     (not (= A.global #xfffffc3a)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000003c6 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc3b))
                     (not (= A.global #xfffffc3a)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc3b)))
      (a!3 (ite (and (not (= A.global #xfffffc3b))
                     (not (= A.global #xfffffc3a)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc3a))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000003c6 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc3a
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc3a))
                (not (= A.global #xfffffc39))
                (ite (= a!1 (bvadd #x000003c6 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000003c6 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000003c6 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000003c6 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:05,516] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:05,541] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+968) != <nullptr>) && (gep[inbounds](A.global,0+0+968) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+968)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+968)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:05,548] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:05,551] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc39))
                     (not (= A.global #xfffffc38)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000003c8 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc39))
                     (not (= A.global #xfffffc38)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc39)))
      (a!3 (ite (and (not (= A.global #xfffffc39))
                     (not (= A.global #xfffffc38)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc38))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000003c8 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc38
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc38))
                (not (= A.global #xfffffc37))
                (ite (= a!1 (bvadd #x000003c8 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000003c8 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000003c8 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000003c8 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:05,558] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:05,582] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+970) != <nullptr>) && (gep[inbounds](A.global,0+0+970) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+970)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+970)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:05,589] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:05,593] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc37))
                     (not (= A.global #xfffffc36)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000003ca A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc37))
                     (not (= A.global #xfffffc36)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc37)))
      (a!3 (ite (and (not (= A.global #xfffffc37))
                     (not (= A.global #xfffffc36)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc36))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000003ca A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc36
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc36))
                (not (= A.global #xfffffc35))
                (ite (= a!1 (bvadd #x000003ca A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000003ca A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000003ca A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000003ca A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:05,600] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:05,624] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+972) != <nullptr>) && (gep[inbounds](A.global,0+0+972) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+972)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+972)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:05,631] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:05,635] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc35))
                     (not (= A.global #xfffffc34)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000003cc A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc35))
                     (not (= A.global #xfffffc34)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc35)))
      (a!3 (ite (and (not (= A.global #xfffffc35))
                     (not (= A.global #xfffffc34)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc34))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000003cc A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc34
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc34))
                (not (= A.global #xfffffc33))
                (ite (= a!1 (bvadd #x000003cc A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000003cc A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000003cc A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000003cc A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:05,641] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:05,665] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+974) != <nullptr>) && (gep[inbounds](A.global,0+0+974) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+974)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+974)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:05,672] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:05,676] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc33))
                     (not (= A.global #xfffffc32)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000003ce A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc33))
                     (not (= A.global #xfffffc32)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc33)))
      (a!3 (ite (and (not (= A.global #xfffffc33))
                     (not (= A.global #xfffffc32)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc32))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000003ce A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc32
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc32))
                (not (= A.global #xfffffc31))
                (ite (= a!1 (bvadd #x000003ce A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000003ce A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000003ce A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000003ce A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:05,683] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:05,713] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+976) != <nullptr>) && (gep[inbounds](A.global,0+0+976) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+976)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+976)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:05,720] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:05,724] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc31))
                     (not (= A.global #xfffffc30)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000003d0 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc31))
                     (not (= A.global #xfffffc30)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc31)))
      (a!3 (ite (and (not (= A.global #xfffffc31))
                     (not (= A.global #xfffffc30)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc30))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000003d0 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc30
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc30))
                (not (= A.global #xfffffc2f))
                (ite (= a!1 (bvadd #x000003d0 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000003d0 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000003d0 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000003d0 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:05,731] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:05,755] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+978) != <nullptr>) && (gep[inbounds](A.global,0+0+978) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+978)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+978)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:05,762] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:05,766] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc2f))
                     (not (= A.global #xfffffc2e)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000003d2 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc2f))
                     (not (= A.global #xfffffc2e)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc2f)))
      (a!3 (ite (and (not (= A.global #xfffffc2f))
                     (not (= A.global #xfffffc2e)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc2e))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000003d2 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc2e
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc2e))
                (not (= A.global #xfffffc2d))
                (ite (= a!1 (bvadd #x000003d2 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000003d2 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000003d2 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000003d2 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:05,773] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:05,797] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+980) != <nullptr>) && (gep[inbounds](A.global,0+0+980) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+980)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+980)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:05,804] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:05,808] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc2d))
                     (not (= A.global #xfffffc2c)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000003d4 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc2d))
                     (not (= A.global #xfffffc2c)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc2d)))
      (a!3 (ite (and (not (= A.global #xfffffc2d))
                     (not (= A.global #xfffffc2c)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc2c))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000003d4 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc2c
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc2c))
                (not (= A.global #xfffffc2b))
                (ite (= a!1 (bvadd #x000003d4 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000003d4 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000003d4 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000003d4 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:05,814] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:05,840] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+982) != <nullptr>) && (gep[inbounds](A.global,0+0+982) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+982)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+982)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:05,846] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:05,850] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc2b))
                     (not (= A.global #xfffffc2a)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000003d6 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc2b))
                     (not (= A.global #xfffffc2a)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc2b)))
      (a!3 (ite (and (not (= A.global #xfffffc2b))
                     (not (= A.global #xfffffc2a)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc2a))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000003d6 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc2a
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc2a))
                (not (= A.global #xfffffc29))
                (ite (= a!1 (bvadd #x000003d6 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000003d6 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000003d6 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000003d6 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:05,857] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:05,881] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+984) != <nullptr>) && (gep[inbounds](A.global,0+0+984) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+984)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+984)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:05,888] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:05,892] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc29))
                     (not (= A.global #xfffffc28)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000003d8 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc29))
                     (not (= A.global #xfffffc28)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc29)))
      (a!3 (ite (and (not (= A.global #xfffffc29))
                     (not (= A.global #xfffffc28)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc28))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000003d8 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc28
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc28))
                (not (= A.global #xfffffc27))
                (ite (= a!1 (bvadd #x000003d8 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000003d8 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000003d8 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000003d8 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:05,899] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:05,930] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+986) != <nullptr>) && (gep[inbounds](A.global,0+0+986) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+986)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+986)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:05,936] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:05,940] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc27))
                     (not (= A.global #xfffffc26)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000003da A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc27))
                     (not (= A.global #xfffffc26)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc27)))
      (a!3 (ite (and (not (= A.global #xfffffc27))
                     (not (= A.global #xfffffc26)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc26))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000003da A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc26
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc26))
                (not (= A.global #xfffffc25))
                (ite (= a!1 (bvadd #x000003da A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000003da A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000003da A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000003da A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:05,951] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:05,991] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+988) != <nullptr>) && (gep[inbounds](A.global,0+0+988) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+988)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+988)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:05,998] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:06,002] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc25))
                     (not (= A.global #xfffffc24)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000003dc A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc25))
                     (not (= A.global #xfffffc24)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc25)))
      (a!3 (ite (and (not (= A.global #xfffffc25))
                     (not (= A.global #xfffffc24)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc24))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000003dc A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc24
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc24))
                (not (= A.global #xfffffc23))
                (ite (= a!1 (bvadd #x000003dc A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000003dc A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000003dc A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000003dc A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:06,009] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:06,034] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+990) != <nullptr>) && (gep[inbounds](A.global,0+0+990) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+990)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+990)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:06,041] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:06,044] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc23))
                     (not (= A.global #xfffffc22)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000003de A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc23))
                     (not (= A.global #xfffffc22)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc23)))
      (a!3 (ite (and (not (= A.global #xfffffc23))
                     (not (= A.global #xfffffc22)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc22))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000003de A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc22
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc22))
                (not (= A.global #xfffffc21))
                (ite (= a!1 (bvadd #x000003de A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000003de A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000003de A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000003de A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:06,052] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:06,077] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+992) != <nullptr>) && (gep[inbounds](A.global,0+0+992) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+992)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+992)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:06,084] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:06,088] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc21))
                     (not (= A.global #xfffffc20)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000003e0 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc21))
                     (not (= A.global #xfffffc20)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc21)))
      (a!3 (ite (and (not (= A.global #xfffffc21))
                     (not (= A.global #xfffffc20)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc20))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000003e0 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc20
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc20))
                (not (= A.global #xfffffc1f))
                (ite (= a!1 (bvadd #x000003e0 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000003e0 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000003e0 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000003e0 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:06,094] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:06,125] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+994) != <nullptr>) && (gep[inbounds](A.global,0+0+994) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+994)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+994)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:06,131] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:06,135] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc1f))
                     (not (= A.global #xfffffc1e)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000003e2 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc1f))
                     (not (= A.global #xfffffc1e)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc1f)))
      (a!3 (ite (and (not (= A.global #xfffffc1f))
                     (not (= A.global #xfffffc1e)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc1e))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000003e2 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc1e
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc1e))
                (not (= A.global #xfffffc1d))
                (ite (= a!1 (bvadd #x000003e2 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000003e2 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000003e2 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000003e2 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:06,142] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:06,168] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+996) != <nullptr>) && (gep[inbounds](A.global,0+0+996) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+996)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+996)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:06,175] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:06,178] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc1d))
                     (not (= A.global #xfffffc1c)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000003e4 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc1d))
                     (not (= A.global #xfffffc1c)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc1d)))
      (a!3 (ite (and (not (= A.global #xfffffc1d))
                     (not (= A.global #xfffffc1c)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc1c))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000003e4 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc1c
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc1c))
                (not (= A.global #xfffffc1b))
                (ite (= a!1 (bvadd #x000003e4 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000003e4 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000003e4 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000003e4 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:06,185] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:06,211] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+998) != <nullptr>) && (gep[inbounds](A.global,0+0+998) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+998)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+998)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:06,218] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:06,222] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc1b))
                     (not (= A.global #xfffffc1a)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000003e6 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc1b))
                     (not (= A.global #xfffffc1a)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc1b)))
      (a!3 (ite (and (not (= A.global #xfffffc1b))
                     (not (= A.global #xfffffc1a)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc1a))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000003e6 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc1a
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc1a))
                (not (= A.global #xfffffc19))
                (ite (= a!1 (bvadd #x000003e6 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000003e6 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000003e6 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000003e6 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:06,229] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:06,253] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+1000) != <nullptr>) && (gep[inbounds](A.global,0+0+1000) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+1000)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+1000)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:06,260] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:06,265] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc19))
                     (not (= A.global #xfffffc18)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000003e8 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc19))
                     (not (= A.global #xfffffc18)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc19)))
      (a!3 (ite (and (not (= A.global #xfffffc19))
                     (not (= A.global #xfffffc18)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc18))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000003e8 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc18
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc18))
                (not (= A.global #xfffffc17))
                (ite (= a!1 (bvadd #x000003e8 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000003e8 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000003e8 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000003e8 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:06,271] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:06,295] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+1002) != <nullptr>) && (gep[inbounds](A.global,0+0+1002) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+1002)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+1002)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:06,302] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:06,306] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc17))
                     (not (= A.global #xfffffc16)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000003ea A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc17))
                     (not (= A.global #xfffffc16)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc17)))
      (a!3 (ite (and (not (= A.global #xfffffc17))
                     (not (= A.global #xfffffc16)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc16))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000003ea A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc16
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc16))
                (not (= A.global #xfffffc15))
                (ite (= a!1 (bvadd #x000003ea A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000003ea A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000003ea A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000003ea A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:06,313] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:06,344] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+1004) != <nullptr>) && (gep[inbounds](A.global,0+0+1004) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+1004)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+1004)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:06,351] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:06,356] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc15))
                     (not (= A.global #xfffffc14)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000003ec A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc15))
                     (not (= A.global #xfffffc14)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc15)))
      (a!3 (ite (and (not (= A.global #xfffffc15))
                     (not (= A.global #xfffffc14)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc14))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000003ec A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc14
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc14))
                (not (= A.global #xfffffc13))
                (ite (= a!1 (bvadd #x000003ec A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000003ec A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000003ec A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000003ec A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:06,362] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:06,387] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+1006) != <nullptr>) && (gep[inbounds](A.global,0+0+1006) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+1006)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+1006)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:06,394] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:06,398] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc13))
                     (not (= A.global #xfffffc12)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000003ee A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc13))
                     (not (= A.global #xfffffc12)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc13)))
      (a!3 (ite (and (not (= A.global #xfffffc13))
                     (not (= A.global #xfffffc12)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc12))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000003ee A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc12
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc12))
                (not (= A.global #xfffffc11))
                (ite (= a!1 (bvadd #x000003ee A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000003ee A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000003ee A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000003ee A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:06,405] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:06,430] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+1008) != <nullptr>) && (gep[inbounds](A.global,0+0+1008) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+1008)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+1008)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:06,438] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:06,441] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc11))
                     (not (= A.global #xfffffc10)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000003f0 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc11))
                     (not (= A.global #xfffffc10)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc11)))
      (a!3 (ite (and (not (= A.global #xfffffc11))
                     (not (= A.global #xfffffc10)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc10))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000003f0 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc10
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc10))
                (not (= A.global #xfffffc0f))
                (ite (= a!1 (bvadd #x000003f0 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000003f0 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000003f0 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000003f0 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:06,449] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:06,474] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+1010) != <nullptr>) && (gep[inbounds](A.global,0+0+1010) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+1010)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+1010)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:06,481] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:06,485] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc0f))
                     (not (= A.global #xfffffc0e)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000003f2 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc0f))
                     (not (= A.global #xfffffc0e)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc0f)))
      (a!3 (ite (and (not (= A.global #xfffffc0f))
                     (not (= A.global #xfffffc0e)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc0e))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000003f2 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc0e
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc0e))
                (not (= A.global #xfffffc0d))
                (ite (= a!1 (bvadd #x000003f2 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000003f2 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000003f2 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000003f2 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:06,492] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:06,523] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+1012) != <nullptr>) && (gep[inbounds](A.global,0+0+1012) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+1012)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+1012)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:06,530] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:06,533] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc0d))
                     (not (= A.global #xfffffc0c)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000003f4 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc0d))
                     (not (= A.global #xfffffc0c)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc0d)))
      (a!3 (ite (and (not (= A.global #xfffffc0d))
                     (not (= A.global #xfffffc0c)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc0c))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000003f4 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc0c
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc0c))
                (not (= A.global #xfffffc0b))
                (ite (= a!1 (bvadd #x000003f4 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000003f4 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000003f4 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000003f4 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:06,541] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:06,566] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+1014) != <nullptr>) && (gep[inbounds](A.global,0+0+1014) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+1014)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+1014)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:06,573] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:06,577] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc0b))
                     (not (= A.global #xfffffc0a)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000003f6 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc0b))
                     (not (= A.global #xfffffc0a)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc0b)))
      (a!3 (ite (and (not (= A.global #xfffffc0b))
                     (not (= A.global #xfffffc0a)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc0a))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000003f6 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc0a
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc0a))
                (not (= A.global #xfffffc09))
                (ite (= a!1 (bvadd #x000003f6 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000003f6 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000003f6 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000003f6 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:06,584] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:06,609] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+1016) != <nullptr>) && (gep[inbounds](A.global,0+0+1016) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+1016)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+1016)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:06,616] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:06,620] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc09))
                     (not (= A.global #xfffffc08)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000003f8 A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc09))
                     (not (= A.global #xfffffc08)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc09)))
      (a!3 (ite (and (not (= A.global #xfffffc09))
                     (not (= A.global #xfffffc08)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc08))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000003f8 A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc08
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc08))
                (not (= A.global #xfffffc07))
                (ite (= a!1 (bvadd #x000003f8 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000003f8 A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000003f8 A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000003f8 A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:06,627] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:06,653] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+1018) != <nullptr>) && (gep[inbounds](A.global,0+0+1018) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+1018)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+1018)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:06,660] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:06,664] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc07))
                     (not (= A.global #xfffffc06)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000003fa A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc07))
                     (not (= A.global #xfffffc06)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc07)))
      (a!3 (ite (and (not (= A.global #xfffffc07))
                     (not (= A.global #xfffffc06)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc06))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000003fa A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc06
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc06))
                (not (= A.global #xfffffc05))
                (ite (= a!1 (bvadd #x000003fa A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000003fa A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000003fa A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000003fa A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:06,672] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:06,698] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+1020) != <nullptr>) && (gep[inbounds](A.global,0+0+1020) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+1020)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+1020)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:06,705] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:06,708] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc05))
                     (not (= A.global #xfffffc04)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000003fc A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc05))
                     (not (= A.global #xfffffc04)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc05)))
      (a!3 (ite (and (not (= A.global #xfffffc05))
                     (not (= A.global #xfffffc04)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc04))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000003fc A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc04
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc04))
                (not (= A.global #xfffffc03))
                (ite (= a!1 (bvadd #x000003fc A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000003fc A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000003fc A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000003fc A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:06,716] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:06,747] DEBUG Checking query: 
(
  @R (((gep[inbounds](A.global,0+0+1022) != <nullptr>) && (gep[inbounds](A.global,0+0+1022) != <invalid>)) && (bound(gep[inbounds](A.global,0+0+1022)) +>= 1))=true
)->(
  @R (bound(gep[inbounds](A.global,0+0+1022)) +>= 2)=true
)
in: 
(
  A.global=(0 x 1024)
)
[2015-05-19 16:33:06,754] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:06,758] DEBUG   Query: 
(let ((a!1 (ite (and (not (= A.global #xfffffc03))
                     (not (= A.global #xfffffc02)))
                |$$__base_free__$$(bvadd)|
                (bvadd #x000003fe A.global)))
      (a!2 (ite (and (not (= A.global #xfffffc03))
                     (not (= A.global #xfffffc02)))
                (= |$$__base_free__$$(bvadd)| #x00000001)
                (= A.global #xfffffc03)))
      (a!3 (ite (and (not (= A.global #xfffffc03))
                     (not (= A.global #xfffffc02)))
                (= |$$__base_free__$$(bvadd)| #x00000000)
                (= A.global #xfffffc02))))
(let ((a!4 (not (bvule (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                       (bvadd #x000003fe A.global (bvmul #xffffffff a!1)))))
      (a!5 (bvadd #xfffffc02
                  (ite a!2 #x00000400 (ite a!3 #xffffffff #x00000000))
                  (bvmul #xffffffff A.global)
                  a!1)))
(let ((a!6 (and (not (= A.global #xfffffc02))
                (not (= A.global #xfffffc01))
                (ite (= a!1 (bvadd #x000003fe A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000001 a!5)))
                (ite (= a!1 (bvadd #x000003fe A.global))
                     (or a!2 a!3)
                     (and a!4 (bvule #x00000002 a!5))))))
  (not a!6)))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(bvadd)| #x00000001))
                     (not (= |$$__base_free__$$(bvadd)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(bvadd)|))
                                  (bvule forall_bound_0
                                         (bvadd #x000003fe A.global))))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(bvadd)| (bvadd #x000003fe A.global)) a!1 a!2))
  State: 
(= A.global #x00000001) assuming true
[2015-05-19 16:33:06,772] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:06,784] DEBUG Checking query: 
(
  (bound(p) +> (arrayidx1 - p))=true
)
in: 
(
  A.global=(0 x 1024),
  writeBound(p,$$bound(p)$$),
  writeBound(p,$$bound(p)$$),
  @R (((p != <nullptr>) && (p != <invalid>)) && ($$bound(p)$$ +>= 1))=true,
  @R ($$bound(p)$$ +>= 2)=true,
  arrayidx1=gep(p,0+1)
)
[2015-05-19 16:33:06,797] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:06,803] DEBUG   Query: 
(let ((a!1 (ite (ite (= |$$bound(p)$$| #x00000000)
                     (= |$$__base_free__$$(p)| #x00000001)
                     (= p #x00000001))
                #x00000400
                (ite (ite (= |$$bound(p)$$| #x00000000)
                          (= |$$__base_free__$$(p)| #x00000000)
                          (= p #x00000000))
                     #xffffffff
                     #x00000000)))
      (a!3 (bvadd p
                  (bvmul #xffffffff
                         (ite (= |$$bound(p)$$| #x00000000)
                              |$$__base_free__$$(p)|
                              p)))))
(let ((a!2 (ite (= p
                   (ite (= |$$bound(p)$$| #x00000000) |$$__base_free__$$(p)| p))
                |$$bound(p)$$|
                a!1)))
(let ((a!4 (ite (bvule a!2 a!3)
                #x00000000
                (bvadd a!2
                       (bvmul #xffffffff p)
                       (ite (= |$$bound(p)$$| #x00000000)
                            |$$__base_free__$$(p)|
                            p)))))
(let ((a!5 (ite (= (ite (= |$$bound(p)$$| #x00000000) |$$__base_free__$$(p)| p)
                   p)
                a!2
                a!4)))
  (bvule a!5 (bvadd arrayidx1 (bvmul #xffffffff p))))))) assuming (let ((a!1 (not (and (= ((_ extract 31 18) p) #b00000000000000)
                     (bvule ((_ extract 17 0) p) #b100000000000000000))))
      (a!2 (ite (= p |$$__base_free__$$(p)|)
                (= |$$bound(p)$$| #x00000000)
                (and (not (= |$$__base_free__$$(p)| #x00000001))
                     (not (= |$$__base_free__$$(p)| #x00000000))))))
  (and (or (not (bvule #x00010001 p)) a!1)
       (bvule |$$__base_free__$$(p)| p)
       (not a!2)
       (forall ((forall_bound_0 (_ BitVec 32)))
         (let ((a!1 (not (and (not (bvule forall_bound_0 |$$__base_free__$$(p)|))
                              (bvule forall_bound_0 p))))
               (a!2 (ite (= p forall_bound_0)
                         (= |$$bound(p)$$| #x00000000)
                         (and (not (= forall_bound_0 #x00000001))
                              (not (= forall_bound_0 #x00000000))))))
           (or a!1 a!2)))))
  State: 
(and (= A.global #x00000001)
     (not (= p #x00000000))
     (not (= p #xffffffff))
     (bvule #x00000001 |$$bound(p)$$|)
     (bvule #x00000002 |$$bound(p)$$|)
     (= arrayidx1 (bvadd #x00000001 p))) assuming (let ((a!1 (not (and (= ((_ extract 31 18) p) #b00000000000000)
                     (bvule ((_ extract 17 0) p) #b100000000000000000)))))
  (and (or (not (bvule #x00010001 p)) a!1)
       (not (or (= p #xfffffffe) (= p #xffffffff)))))
[2015-05-19 16:33:06,887] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:06,937] DEBUG Checking query: 
(
  (bound(B.global) +> (gep(B.global,0+1+0) - B.global))=true
)
in: 
(
  B.global=(0 x 512),
  *gep[inbounds](B.global,0+0+0)=call,
  *gep[inbounds](B.global,0+0+1)=call.bor.0,
  *gep[inbounds](B.global,0+0+2)=call.bor.1,
  *gep[inbounds](B.global,0+0+3)=call.bor.2,
  *gep[inbounds](B.global,0+0+4)=call.bor.3,
  *gep[inbounds](B.global,0+0+5)=call.bor.4,
  *gep[inbounds](B.global,0+0+6)=call.bor.5,
  *gep[inbounds](B.global,0+0+7)=call.bor.6,
  *gep[inbounds](B.global,0+0+8)=call.bor.7,
  *gep[inbounds](B.global,0+0+9)=call.bor.8,
  *gep[inbounds](B.global,0+0+10)=call.bor.9,
  *gep[inbounds](B.global,0+0+11)=call.bor.10,
  *gep[inbounds](B.global,0+0+12)=call.bor.11,
  *gep[inbounds](B.global,0+0+13)=call.bor.12,
  *gep[inbounds](B.global,0+0+14)=call.bor.13,
  *gep[inbounds](B.global,0+0+15)=call.bor.14,
  *gep[inbounds](B.global,0+0+16)=call.bor.15,
  *gep[inbounds](B.global,0+0+17)=call.bor.16,
  *gep[inbounds](B.global,0+0+18)=call.bor.17,
  *gep[inbounds](B.global,0+0+19)=call.bor.18,
  *gep[inbounds](B.global,0+0+20)=call.bor.19,
  *gep[inbounds](B.global,0+0+21)=call.bor.20,
  *gep[inbounds](B.global,0+0+22)=call.bor.21,
  *gep[inbounds](B.global,0+0+23)=call.bor.22,
  *gep[inbounds](B.global,0+0+24)=call.bor.23,
  *gep[inbounds](B.global,0+0+25)=call.bor.24,
  *gep[inbounds](B.global,0+0+26)=call.bor.25,
  *gep[inbounds](B.global,0+0+27)=call.bor.26,
  *gep[inbounds](B.global,0+0+28)=call.bor.27,
  *gep[inbounds](B.global,0+0+29)=call.bor.28,
  *gep[inbounds](B.global,0+0+30)=call.bor.29,
  *gep[inbounds](B.global,0+0+31)=call.bor.30,
  *gep[inbounds](B.global,0+0+32)=call.bor.31,
  *gep[inbounds](B.global,0+0+33)=call.bor.32,
  *gep[inbounds](B.global,0+0+34)=call.bor.33,
  *gep[inbounds](B.global,0+0+35)=call.bor.34,
  *gep[inbounds](B.global,0+0+36)=call.bor.35,
  *gep[inbounds](B.global,0+0+37)=call.bor.36,
  *gep[inbounds](B.global,0+0+38)=call.bor.37,
  *gep[inbounds](B.global,0+0+39)=call.bor.38,
  *gep[inbounds](B.global,0+0+40)=call.bor.39,
  *gep[inbounds](B.global,0+0+41)=call.bor.40,
  *gep[inbounds](B.global,0+0+42)=call.bor.41,
  *gep[inbounds](B.global,0+0+43)=call.bor.42,
  *gep[inbounds](B.global,0+0+44)=call.bor.43,
  *gep[inbounds](B.global,0+0+45)=call.bor.44,
  *gep[inbounds](B.global,0+0+46)=call.bor.45,
  *gep[inbounds](B.global,0+0+47)=call.bor.46,
  *gep[inbounds](B.global,0+0+48)=call.bor.47,
  *gep[inbounds](B.global,0+0+49)=call.bor.48,
  *gep[inbounds](B.global,0+0+50)=call.bor.49,
  *gep[inbounds](B.global,0+0+51)=call.bor.50,
  *gep[inbounds](B.global,0+0+52)=call.bor.51,
  *gep[inbounds](B.global,0+0+53)=call.bor.52,
  *gep[inbounds](B.global,0+0+54)=call.bor.53,
  *gep[inbounds](B.global,0+0+55)=call.bor.54,
  *gep[inbounds](B.global,0+0+56)=call.bor.55,
  *gep[inbounds](B.global,0+0+57)=call.bor.56,
  *gep[inbounds](B.global,0+0+58)=call.bor.57,
  *gep[inbounds](B.global,0+0+59)=call.bor.58,
  *gep[inbounds](B.global,0+0+60)=call.bor.59,
  *gep[inbounds](B.global,0+0+61)=call.bor.60,
  *gep[inbounds](B.global,0+0+62)=call.bor.61,
  *gep[inbounds](B.global,0+0+63)=call.bor.62,
  *gep[inbounds](B.global,0+0+64)=call.bor.63,
  *gep[inbounds](B.global,0+0+65)=call.bor.64,
  *gep[inbounds](B.global,0+0+66)=call.bor.65,
  *gep[inbounds](B.global,0+0+67)=call.bor.66,
  *gep[inbounds](B.global,0+0+68)=call.bor.67,
  *gep[inbounds](B.global,0+0+69)=call.bor.68,
  *gep[inbounds](B.global,0+0+70)=call.bor.69,
  *gep[inbounds](B.global,0+0+71)=call.bor.70,
  *gep[inbounds](B.global,0+0+72)=call.bor.71,
  *gep[inbounds](B.global,0+0+73)=call.bor.72,
  *gep[inbounds](B.global,0+0+74)=call.bor.73,
  *gep[inbounds](B.global,0+0+75)=call.bor.74,
  *gep[inbounds](B.global,0+0+76)=call.bor.75,
  *gep[inbounds](B.global,0+0+77)=call.bor.76,
  *gep[inbounds](B.global,0+0+78)=call.bor.77,
  *gep[inbounds](B.global,0+0+79)=call.bor.78,
  *gep[inbounds](B.global,0+0+80)=call.bor.79,
  *gep[inbounds](B.global,0+0+81)=call.bor.80,
  *gep[inbounds](B.global,0+0+82)=call.bor.81,
  *gep[inbounds](B.global,0+0+83)=call.bor.82,
  *gep[inbounds](B.global,0+0+84)=call.bor.83,
  *gep[inbounds](B.global,0+0+85)=call.bor.84,
  *gep[inbounds](B.global,0+0+86)=call.bor.85,
  *gep[inbounds](B.global,0+0+87)=call.bor.86,
  *gep[inbounds](B.global,0+0+88)=call.bor.87,
  *gep[inbounds](B.global,0+0+89)=call.bor.88,
  *gep[inbounds](B.global,0+0+90)=call.bor.89,
  *gep[inbounds](B.global,0+0+91)=call.bor.90,
  *gep[inbounds](B.global,0+0+92)=call.bor.91,
  *gep[inbounds](B.global,0+0+93)=call.bor.92,
  *gep[inbounds](B.global,0+0+94)=call.bor.93,
  *gep[inbounds](B.global,0+0+95)=call.bor.94,
  *gep[inbounds](B.global,0+0+96)=call.bor.95,
  *gep[inbounds](B.global,0+0+97)=call.bor.96,
  *gep[inbounds](B.global,0+0+98)=call.bor.97,
  *gep[inbounds](B.global,0+0+99)=call.bor.98,
  *gep[inbounds](B.global,0+0+100)=call.bor.99,
  *gep[inbounds](B.global,0+0+101)=call.bor.100,
  *gep[inbounds](B.global,0+0+102)=call.bor.101,
  *gep[inbounds](B.global,0+0+103)=call.bor.102,
  *gep[inbounds](B.global,0+0+104)=call.bor.103,
  *gep[inbounds](B.global,0+0+105)=call.bor.104,
  *gep[inbounds](B.global,0+0+106)=call.bor.105,
  *gep[inbounds](B.global,0+0+107)=call.bor.106,
  *gep[inbounds](B.global,0+0+108)=call.bor.107,
  *gep[inbounds](B.global,0+0+109)=call.bor.108,
  *gep[inbounds](B.global,0+0+110)=call.bor.109,
  *gep[inbounds](B.global,0+0+111)=call.bor.110,
  *gep[inbounds](B.global,0+0+112)=call.bor.111,
  *gep[inbounds](B.global,0+0+113)=call.bor.112,
  *gep[inbounds](B.global,0+0+114)=call.bor.113,
  *gep[inbounds](B.global,0+0+115)=call.bor.114,
  *gep[inbounds](B.global,0+0+116)=call.bor.115,
  *gep[inbounds](B.global,0+0+117)=call.bor.116,
  *gep[inbounds](B.global,0+0+118)=call.bor.117,
  *gep[inbounds](B.global,0+0+119)=call.bor.118,
  *gep[inbounds](B.global,0+0+120)=call.bor.119,
  *gep[inbounds](B.global,0+0+121)=call.bor.120,
  *gep[inbounds](B.global,0+0+122)=call.bor.121,
  *gep[inbounds](B.global,0+0+123)=call.bor.122,
  *gep[inbounds](B.global,0+0+124)=call.bor.123,
  *gep[inbounds](B.global,0+0+125)=call.bor.124,
  *gep[inbounds](B.global,0+0+126)=call.bor.125,
  *gep[inbounds](B.global,0+0+127)=call.bor.126,
  *gep[inbounds](B.global,0+0+128)=call.bor.127,
  *gep[inbounds](B.global,0+0+129)=call.bor.128,
  *gep[inbounds](B.global,0+0+130)=call.bor.129,
  *gep[inbounds](B.global,0+0+131)=call.bor.130,
  *gep[inbounds](B.global,0+0+132)=call.bor.131,
  *gep[inbounds](B.global,0+0+133)=call.bor.132,
  *gep[inbounds](B.global,0+0+134)=call.bor.133,
  *gep[inbounds](B.global,0+0+135)=call.bor.134,
  *gep[inbounds](B.global,0+0+136)=call.bor.135,
  *gep[inbounds](B.global,0+0+137)=call.bor.136,
  *gep[inbounds](B.global,0+0+138)=call.bor.137,
  *gep[inbounds](B.global,0+0+139)=call.bor.138,
  *gep[inbounds](B.global,0+0+140)=call.bor.139,
  *gep[inbounds](B.global,0+0+141)=call.bor.140,
  *gep[inbounds](B.global,0+0+142)=call.bor.141,
  *gep[inbounds](B.global,0+0+143)=call.bor.142,
  *gep[inbounds](B.global,0+0+144)=call.bor.143,
  *gep[inbounds](B.global,0+0+145)=call.bor.144,
  *gep[inbounds](B.global,0+0+146)=call.bor.145,
  *gep[inbounds](B.global,0+0+147)=call.bor.146,
  *gep[inbounds](B.global,0+0+148)=call.bor.147,
  *gep[inbounds](B.global,0+0+149)=call.bor.148,
  *gep[inbounds](B.global,0+0+150)=call.bor.149,
  *gep[inbounds](B.global,0+0+151)=call.bor.150,
  *gep[inbounds](B.global,0+0+152)=call.bor.151,
  *gep[inbounds](B.global,0+0+153)=call.bor.152,
  *gep[inbounds](B.global,0+0+154)=call.bor.153,
  *gep[inbounds](B.global,0+0+155)=call.bor.154,
  *gep[inbounds](B.global,0+0+156)=call.bor.155,
  *gep[inbounds](B.global,0+0+157)=call.bor.156,
  *gep[inbounds](B.global,0+0+158)=call.bor.157,
  *gep[inbounds](B.global,0+0+159)=call.bor.158,
  *gep[inbounds](B.global,0+0+160)=call.bor.159,
  *gep[inbounds](B.global,0+0+161)=call.bor.160,
  *gep[inbounds](B.global,0+0+162)=call.bor.161,
  *gep[inbounds](B.global,0+0+163)=call.bor.162,
  *gep[inbounds](B.global,0+0+164)=call.bor.163,
  *gep[inbounds](B.global,0+0+165)=call.bor.164,
  *gep[inbounds](B.global,0+0+166)=call.bor.165,
  *gep[inbounds](B.global,0+0+167)=call.bor.166,
  *gep[inbounds](B.global,0+0+168)=call.bor.167,
  *gep[inbounds](B.global,0+0+169)=call.bor.168,
  *gep[inbounds](B.global,0+0+170)=call.bor.169,
  *gep[inbounds](B.global,0+0+171)=call.bor.170,
  *gep[inbounds](B.global,0+0+172)=call.bor.171,
  *gep[inbounds](B.global,0+0+173)=call.bor.172,
  *gep[inbounds](B.global,0+0+174)=call.bor.173,
  *gep[inbounds](B.global,0+0+175)=call.bor.174,
  *gep[inbounds](B.global,0+0+176)=call.bor.175,
  *gep[inbounds](B.global,0+0+177)=call.bor.176,
  *gep[inbounds](B.global,0+0+178)=call.bor.177,
  *gep[inbounds](B.global,0+0+179)=call.bor.178,
  *gep[inbounds](B.global,0+0+180)=call.bor.179,
  *gep[inbounds](B.global,0+0+181)=call.bor.180,
  *gep[inbounds](B.global,0+0+182)=call.bor.181,
  *gep[inbounds](B.global,0+0+183)=call.bor.182,
  *gep[inbounds](B.global,0+0+184)=call.bor.183,
  *gep[inbounds](B.global,0+0+185)=call.bor.184,
  *gep[inbounds](B.global,0+0+186)=call.bor.185,
  *gep[inbounds](B.global,0+0+187)=call.bor.186,
  *gep[inbounds](B.global,0+0+188)=call.bor.187,
  *gep[inbounds](B.global,0+0+189)=call.bor.188,
  *gep[inbounds](B.global,0+0+190)=call.bor.189,
  *gep[inbounds](B.global,0+0+191)=call.bor.190,
  *gep[inbounds](B.global,0+0+192)=call.bor.191,
  *gep[inbounds](B.global,0+0+193)=call.bor.192,
  *gep[inbounds](B.global,0+0+194)=call.bor.193,
  *gep[inbounds](B.global,0+0+195)=call.bor.194,
  *gep[inbounds](B.global,0+0+196)=call.bor.195,
  *gep[inbounds](B.global,0+0+197)=call.bor.196,
  *gep[inbounds](B.global,0+0+198)=call.bor.197,
  *gep[inbounds](B.global,0+0+199)=call.bor.198,
  *gep[inbounds](B.global,0+0+200)=call.bor.199,
  *gep[inbounds](B.global,0+0+201)=call.bor.200,
  *gep[inbounds](B.global,0+0+202)=call.bor.201,
  *gep[inbounds](B.global,0+0+203)=call.bor.202,
  *gep[inbounds](B.global,0+0+204)=call.bor.203,
  *gep[inbounds](B.global,0+0+205)=call.bor.204,
  *gep[inbounds](B.global,0+0+206)=call.bor.205,
  *gep[inbounds](B.global,0+0+207)=call.bor.206,
  *gep[inbounds](B.global,0+0+208)=call.bor.207,
  *gep[inbounds](B.global,0+0+209)=call.bor.208,
  *gep[inbounds](B.global,0+0+210)=call.bor.209,
  *gep[inbounds](B.global,0+0+211)=call.bor.210,
  *gep[inbounds](B.global,0+0+212)=call.bor.211,
  *gep[inbounds](B.global,0+0+213)=call.bor.212,
  *gep[inbounds](B.global,0+0+214)=call.bor.213,
  *gep[inbounds](B.global,0+0+215)=call.bor.214,
  *gep[inbounds](B.global,0+0+216)=call.bor.215,
  *gep[inbounds](B.global,0+0+217)=call.bor.216,
  *gep[inbounds](B.global,0+0+218)=call.bor.217,
  *gep[inbounds](B.global,0+0+219)=call.bor.218,
  *gep[inbounds](B.global,0+0+220)=call.bor.219,
  *gep[inbounds](B.global,0+0+221)=call.bor.220,
  *gep[inbounds](B.global,0+0+222)=call.bor.221,
  *gep[inbounds](B.global,0+0+223)=call.bor.222,
  *gep[inbounds](B.global,0+0+224)=call.bor.223,
  *gep[inbounds](B.global,0+0+225)=call.bor.224,
  *gep[inbounds](B.global,0+0+226)=call.bor.225,
  *gep[inbounds](B.global,0+0+227)=call.bor.226,
  *gep[inbounds](B.global,0+0+228)=call.bor.227,
  *gep[inbounds](B.global,0+0+229)=call.bor.228,
  *gep[inbounds](B.global,0+0+230)=call.bor.229,
  *gep[inbounds](B.global,0+0+231)=call.bor.230,
  *gep[inbounds](B.global,0+0+232)=call.bor.231,
  *gep[inbounds](B.global,0+0+233)=call.bor.232,
  *gep[inbounds](B.global,0+0+234)=call.bor.233,
  *gep[inbounds](B.global,0+0+235)=call.bor.234,
  *gep[inbounds](B.global,0+0+236)=call.bor.235,
  *gep[inbounds](B.global,0+0+237)=call.bor.236,
  *gep[inbounds](B.global,0+0+238)=call.bor.237,
  *gep[inbounds](B.global,0+0+239)=call.bor.238,
  *gep[inbounds](B.global,0+0+240)=call.bor.239,
  *gep[inbounds](B.global,0+0+241)=call.bor.240,
  *gep[inbounds](B.global,0+0+242)=call.bor.241,
  *gep[inbounds](B.global,0+0+243)=call.bor.242,
  *gep[inbounds](B.global,0+0+244)=call.bor.243,
  *gep[inbounds](B.global,0+0+245)=call.bor.244,
  *gep[inbounds](B.global,0+0+246)=call.bor.245,
  *gep[inbounds](B.global,0+0+247)=call.bor.246,
  *gep[inbounds](B.global,0+0+248)=call.bor.247,
  *gep[inbounds](B.global,0+0+249)=call.bor.248,
  *gep[inbounds](B.global,0+0+250)=call.bor.249,
  *gep[inbounds](B.global,0+0+251)=call.bor.250,
  *gep[inbounds](B.global,0+0+252)=call.bor.251,
  *gep[inbounds](B.global,0+0+253)=call.bor.252,
  *gep[inbounds](B.global,0+0+254)=call.bor.253,
  *gep[inbounds](B.global,0+0+255)=call.bor.254,
  *gep[inbounds](B.global,0+0+256)=call.bor.255,
  *gep[inbounds](B.global,0+0+257)=call.bor.256,
  *gep[inbounds](B.global,0+0+258)=call.bor.257,
  *gep[inbounds](B.global,0+0+259)=call.bor.258,
  *gep[inbounds](B.global,0+0+260)=call.bor.259,
  *gep[inbounds](B.global,0+0+261)=call.bor.260,
  *gep[inbounds](B.global,0+0+262)=call.bor.261,
  *gep[inbounds](B.global,0+0+263)=call.bor.262,
  *gep[inbounds](B.global,0+0+264)=call.bor.263,
  *gep[inbounds](B.global,0+0+265)=call.bor.264,
  *gep[inbounds](B.global,0+0+266)=call.bor.265,
  *gep[inbounds](B.global,0+0+267)=call.bor.266,
  *gep[inbounds](B.global,0+0+268)=call.bor.267,
  *gep[inbounds](B.global,0+0+269)=call.bor.268,
  *gep[inbounds](B.global,0+0+270)=call.bor.269,
  *gep[inbounds](B.global,0+0+271)=call.bor.270,
  *gep[inbounds](B.global,0+0+272)=call.bor.271,
  *gep[inbounds](B.global,0+0+273)=call.bor.272,
  *gep[inbounds](B.global,0+0+274)=call.bor.273,
  *gep[inbounds](B.global,0+0+275)=call.bor.274,
  *gep[inbounds](B.global,0+0+276)=call.bor.275,
  *gep[inbounds](B.global,0+0+277)=call.bor.276,
  *gep[inbounds](B.global,0+0+278)=call.bor.277,
  *gep[inbounds](B.global,0+0+279)=call.bor.278,
  *gep[inbounds](B.global,0+0+280)=call.bor.279,
  *gep[inbounds](B.global,0+0+281)=call.bor.280,
  *gep[inbounds](B.global,0+0+282)=call.bor.281,
  *gep[inbounds](B.global,0+0+283)=call.bor.282,
  *gep[inbounds](B.global,0+0+284)=call.bor.283,
  *gep[inbounds](B.global,0+0+285)=call.bor.284,
  *gep[inbounds](B.global,0+0+286)=call.bor.285,
  *gep[inbounds](B.global,0+0+287)=call.bor.286,
  *gep[inbounds](B.global,0+0+288)=call.bor.287,
  *gep[inbounds](B.global,0+0+289)=call.bor.288,
  *gep[inbounds](B.global,0+0+290)=call.bor.289,
  *gep[inbounds](B.global,0+0+291)=call.bor.290,
  *gep[inbounds](B.global,0+0+292)=call.bor.291,
  *gep[inbounds](B.global,0+0+293)=call.bor.292,
  *gep[inbounds](B.global,0+0+294)=call.bor.293,
  *gep[inbounds](B.global,0+0+295)=call.bor.294,
  *gep[inbounds](B.global,0+0+296)=call.bor.295,
  *gep[inbounds](B.global,0+0+297)=call.bor.296,
  *gep[inbounds](B.global,0+0+298)=call.bor.297,
  *gep[inbounds](B.global,0+0+299)=call.bor.298,
  *gep[inbounds](B.global,0+0+300)=call.bor.299,
  *gep[inbounds](B.global,0+0+301)=call.bor.300,
  *gep[inbounds](B.global,0+0+302)=call.bor.301,
  *gep[inbounds](B.global,0+0+303)=call.bor.302,
  *gep[inbounds](B.global,0+0+304)=call.bor.303,
  *gep[inbounds](B.global,0+0+305)=call.bor.304,
  *gep[inbounds](B.global,0+0+306)=call.bor.305,
  *gep[inbounds](B.global,0+0+307)=call.bor.306,
  *gep[inbounds](B.global,0+0+308)=call.bor.307,
  *gep[inbounds](B.global,0+0+309)=call.bor.308,
  *gep[inbounds](B.global,0+0+310)=call.bor.309,
  *gep[inbounds](B.global,0+0+311)=call.bor.310,
  *gep[inbounds](B.global,0+0+312)=call.bor.311,
  *gep[inbounds](B.global,0+0+313)=call.bor.312,
  *gep[inbounds](B.global,0+0+314)=call.bor.313,
  *gep[inbounds](B.global,0+0+315)=call.bor.314,
  *gep[inbounds](B.global,0+0+316)=call.bor.315,
  *gep[inbounds](B.global,0+0+317)=call.bor.316,
  *gep[inbounds](B.global,0+0+318)=call.bor.317,
  *gep[inbounds](B.global,0+0+319)=call.bor.318,
  *gep[inbounds](B.global,0+0+320)=call.bor.319,
  *gep[inbounds](B.global,0+0+321)=call.bor.320,
  *gep[inbounds](B.global,0+0+322)=call.bor.321,
  *gep[inbounds](B.global,0+0+323)=call.bor.322,
  *gep[inbounds](B.global,0+0+324)=call.bor.323,
  *gep[inbounds](B.global,0+0+325)=call.bor.324,
  *gep[inbounds](B.global,0+0+326)=call.bor.325,
  *gep[inbounds](B.global,0+0+327)=call.bor.326,
  *gep[inbounds](B.global,0+0+328)=call.bor.327,
  *gep[inbounds](B.global,0+0+329)=call.bor.328,
  *gep[inbounds](B.global,0+0+330)=call.bor.329,
  *gep[inbounds](B.global,0+0+331)=call.bor.330,
  *gep[inbounds](B.global,0+0+332)=call.bor.331,
  *gep[inbounds](B.global,0+0+333)=call.bor.332,
  *gep[inbounds](B.global,0+0+334)=call.bor.333,
  *gep[inbounds](B.global,0+0+335)=call.bor.334,
  *gep[inbounds](B.global,0+0+336)=call.bor.335,
  *gep[inbounds](B.global,0+0+337)=call.bor.336,
  *gep[inbounds](B.global,0+0+338)=call.bor.337,
  *gep[inbounds](B.global,0+0+339)=call.bor.338,
  *gep[inbounds](B.global,0+0+340)=call.bor.339,
  *gep[inbounds](B.global,0+0+341)=call.bor.340,
  *gep[inbounds](B.global,0+0+342)=call.bor.341,
  *gep[inbounds](B.global,0+0+343)=call.bor.342,
  *gep[inbounds](B.global,0+0+344)=call.bor.343,
  *gep[inbounds](B.global,0+0+345)=call.bor.344,
  *gep[inbounds](B.global,0+0+346)=call.bor.345,
  *gep[inbounds](B.global,0+0+347)=call.bor.346,
  *gep[inbounds](B.global,0+0+348)=call.bor.347,
  *gep[inbounds](B.global,0+0+349)=call.bor.348,
  *gep[inbounds](B.global,0+0+350)=call.bor.349,
  *gep[inbounds](B.global,0+0+351)=call.bor.350,
  *gep[inbounds](B.global,0+0+352)=call.bor.351,
  *gep[inbounds](B.global,0+0+353)=call.bor.352,
  *gep[inbounds](B.global,0+0+354)=call.bor.353,
  *gep[inbounds](B.global,0+0+355)=call.bor.354,
  *gep[inbounds](B.global,0+0+356)=call.bor.355,
  *gep[inbounds](B.global,0+0+357)=call.bor.356,
  *gep[inbounds](B.global,0+0+358)=call.bor.357,
  *gep[inbounds](B.global,0+0+359)=call.bor.358,
  *gep[inbounds](B.global,0+0+360)=call.bor.359,
  *gep[inbounds](B.global,0+0+361)=call.bor.360,
  *gep[inbounds](B.global,0+0+362)=call.bor.361,
  *gep[inbounds](B.global,0+0+363)=call.bor.362,
  *gep[inbounds](B.global,0+0+364)=call.bor.363,
  *gep[inbounds](B.global,0+0+365)=call.bor.364,
  *gep[inbounds](B.global,0+0+366)=call.bor.365,
  *gep[inbounds](B.global,0+0+367)=call.bor.366,
  *gep[inbounds](B.global,0+0+368)=call.bor.367,
  *gep[inbounds](B.global,0+0+369)=call.bor.368,
  *gep[inbounds](B.global,0+0+370)=call.bor.369,
  *gep[inbounds](B.global,0+0+371)=call.bor.370,
  *gep[inbounds](B.global,0+0+372)=call.bor.371,
  *gep[inbounds](B.global,0+0+373)=call.bor.372,
  *gep[inbounds](B.global,0+0+374)=call.bor.373,
  *gep[inbounds](B.global,0+0+375)=call.bor.374,
  *gep[inbounds](B.global,0+0+376)=call.bor.375,
  *gep[inbounds](B.global,0+0+377)=call.bor.376,
  *gep[inbounds](B.global,0+0+378)=call.bor.377,
  *gep[inbounds](B.global,0+0+379)=call.bor.378,
  *gep[inbounds](B.global,0+0+380)=call.bor.379,
  *gep[inbounds](B.global,0+0+381)=call.bor.380,
  *gep[inbounds](B.global,0+0+382)=call.bor.381,
  *gep[inbounds](B.global,0+0+383)=call.bor.382,
  *gep[inbounds](B.global,0+0+384)=call.bor.383,
  *gep[inbounds](B.global,0+0+385)=call.bor.384,
  *gep[inbounds](B.global,0+0+386)=call.bor.385,
  *gep[inbounds](B.global,0+0+387)=call.bor.386,
  *gep[inbounds](B.global,0+0+388)=call.bor.387,
  *gep[inbounds](B.global,0+0+389)=call.bor.388,
  *gep[inbounds](B.global,0+0+390)=call.bor.389,
  *gep[inbounds](B.global,0+0+391)=call.bor.390,
  *gep[inbounds](B.global,0+0+392)=call.bor.391,
  *gep[inbounds](B.global,0+0+393)=call.bor.392,
  *gep[inbounds](B.global,0+0+394)=call.bor.393,
  *gep[inbounds](B.global,0+0+395)=call.bor.394,
  *gep[inbounds](B.global,0+0+396)=call.bor.395,
  *gep[inbounds](B.global,0+0+397)=call.bor.396,
  *gep[inbounds](B.global,0+0+398)=call.bor.397,
  *gep[inbounds](B.global,0+0+399)=call.bor.398,
  *gep[inbounds](B.global,0+0+400)=call.bor.399,
  *gep[inbounds](B.global,0+0+401)=call.bor.400,
  *gep[inbounds](B.global,0+0+402)=call.bor.401,
  *gep[inbounds](B.global,0+0+403)=call.bor.402,
  *gep[inbounds](B.global,0+0+404)=call.bor.403,
  *gep[inbounds](B.global,0+0+405)=call.bor.404,
  *gep[inbounds](B.global,0+0+406)=call.bor.405,
  *gep[inbounds](B.global,0+0+407)=call.bor.406,
  *gep[inbounds](B.global,0+0+408)=call.bor.407,
  *gep[inbounds](B.global,0+0+409)=call.bor.408,
  *gep[inbounds](B.global,0+0+410)=call.bor.409,
  *gep[inbounds](B.global,0+0+411)=call.bor.410,
  *gep[inbounds](B.global,0+0+412)=call.bor.411,
  *gep[inbounds](B.global,0+0+413)=call.bor.412,
  *gep[inbounds](B.global,0+0+414)=call.bor.413,
  *gep[inbounds](B.global,0+0+415)=call.bor.414,
  *gep[inbounds](B.global,0+0+416)=call.bor.415,
  *gep[inbounds](B.global,0+0+417)=call.bor.416,
  *gep[inbounds](B.global,0+0+418)=call.bor.417,
  *gep[inbounds](B.global,0+0+419)=call.bor.418,
  *gep[inbounds](B.global,0+0+420)=call.bor.419,
  *gep[inbounds](B.global,0+0+421)=call.bor.420,
  *gep[inbounds](B.global,0+0+422)=call.bor.421,
  *gep[inbounds](B.global,0+0+423)=call.bor.422,
  *gep[inbounds](B.global,0+0+424)=call.bor.423,
  *gep[inbounds](B.global,0+0+425)=call.bor.424,
  *gep[inbounds](B.global,0+0+426)=call.bor.425,
  *gep[inbounds](B.global,0+0+427)=call.bor.426,
  *gep[inbounds](B.global,0+0+428)=call.bor.427,
  *gep[inbounds](B.global,0+0+429)=call.bor.428,
  *gep[inbounds](B.global,0+0+430)=call.bor.429,
  *gep[inbounds](B.global,0+0+431)=call.bor.430,
  *gep[inbounds](B.global,0+0+432)=call.bor.431,
  *gep[inbounds](B.global,0+0+433)=call.bor.432,
  *gep[inbounds](B.global,0+0+434)=call.bor.433,
  *gep[inbounds](B.global,0+0+435)=call.bor.434,
  *gep[inbounds](B.global,0+0+436)=call.bor.435,
  *gep[inbounds](B.global,0+0+437)=call.bor.436,
  *gep[inbounds](B.global,0+0+438)=call.bor.437,
  *gep[inbounds](B.global,0+0+439)=call.bor.438,
  *gep[inbounds](B.global,0+0+440)=call.bor.439,
  *gep[inbounds](B.global,0+0+441)=call.bor.440,
  *gep[inbounds](B.global,0+0+442)=call.bor.441,
  *gep[inbounds](B.global,0+0+443)=call.bor.442,
  *gep[inbounds](B.global,0+0+444)=call.bor.443,
  *gep[inbounds](B.global,0+0+445)=call.bor.444,
  *gep[inbounds](B.global,0+0+446)=call.bor.445,
  *gep[inbounds](B.global,0+0+447)=call.bor.446,
  *gep[inbounds](B.global,0+0+448)=call.bor.447,
  *gep[inbounds](B.global,0+0+449)=call.bor.448,
  *gep[inbounds](B.global,0+0+450)=call.bor.449,
  *gep[inbounds](B.global,0+0+451)=call.bor.450,
  *gep[inbounds](B.global,0+0+452)=call.bor.451,
  *gep[inbounds](B.global,0+0+453)=call.bor.452,
  *gep[inbounds](B.global,0+0+454)=call.bor.453,
  *gep[inbounds](B.global,0+0+455)=call.bor.454,
  *gep[inbounds](B.global,0+0+456)=call.bor.455,
  *gep[inbounds](B.global,0+0+457)=call.bor.456,
  *gep[inbounds](B.global,0+0+458)=call.bor.457,
  *gep[inbounds](B.global,0+0+459)=call.bor.458,
  *gep[inbounds](B.global,0+0+460)=call.bor.459,
  *gep[inbounds](B.global,0+0+461)=call.bor.460,
  *gep[inbounds](B.global,0+0+462)=call.bor.461,
  *gep[inbounds](B.global,0+0+463)=call.bor.462,
  *gep[inbounds](B.global,0+0+464)=call.bor.463,
  *gep[inbounds](B.global,0+0+465)=call.bor.464,
  *gep[inbounds](B.global,0+0+466)=call.bor.465,
  *gep[inbounds](B.global,0+0+467)=call.bor.466,
  *gep[inbounds](B.global,0+0+468)=call.bor.467,
  *gep[inbounds](B.global,0+0+469)=call.bor.468,
  *gep[inbounds](B.global,0+0+470)=call.bor.469,
  *gep[inbounds](B.global,0+0+471)=call.bor.470,
  *gep[inbounds](B.global,0+0+472)=call.bor.471,
  *gep[inbounds](B.global,0+0+473)=call.bor.472,
  *gep[inbounds](B.global,0+0+474)=call.bor.473,
  *gep[inbounds](B.global,0+0+475)=call.bor.474,
  *gep[inbounds](B.global,0+0+476)=call.bor.475,
  *gep[inbounds](B.global,0+0+477)=call.bor.476,
  *gep[inbounds](B.global,0+0+478)=call.bor.477,
  *gep[inbounds](B.global,0+0+479)=call.bor.478,
  *gep[inbounds](B.global,0+0+480)=call.bor.479,
  *gep[inbounds](B.global,0+0+481)=call.bor.480,
  *gep[inbounds](B.global,0+0+482)=call.bor.481,
  *gep[inbounds](B.global,0+0+483)=call.bor.482,
  *gep[inbounds](B.global,0+0+484)=call.bor.483,
  *gep[inbounds](B.global,0+0+485)=call.bor.484,
  *gep[inbounds](B.global,0+0+486)=call.bor.485,
  *gep[inbounds](B.global,0+0+487)=call.bor.486,
  *gep[inbounds](B.global,0+0+488)=call.bor.487,
  *gep[inbounds](B.global,0+0+489)=call.bor.488,
  *gep[inbounds](B.global,0+0+490)=call.bor.489,
  *gep[inbounds](B.global,0+0+491)=call.bor.490,
  *gep[inbounds](B.global,0+0+492)=call.bor.491,
  *gep[inbounds](B.global,0+0+493)=call.bor.492,
  *gep[inbounds](B.global,0+0+494)=call.bor.493,
  *gep[inbounds](B.global,0+0+495)=call.bor.494,
  *gep[inbounds](B.global,0+0+496)=call.bor.495,
  *gep[inbounds](B.global,0+0+497)=call.bor.496,
  *gep[inbounds](B.global,0+0+498)=call.bor.497,
  *gep[inbounds](B.global,0+0+499)=call.bor.498,
  *gep[inbounds](B.global,0+0+500)=call.bor.499,
  *gep[inbounds](B.global,0+0+501)=call.bor.500,
  *gep[inbounds](B.global,0+0+502)=call.bor.501,
  *gep[inbounds](B.global,0+0+503)=call.bor.502,
  *gep[inbounds](B.global,0+0+504)=call.bor.503,
  *gep[inbounds](B.global,0+0+505)=call.bor.504,
  *gep[inbounds](B.global,0+0+506)=call.bor.505,
  *gep[inbounds](B.global,0+0+507)=call.bor.506,
  *gep[inbounds](B.global,0+0+508)=call.bor.507,
  *gep[inbounds](B.global,0+0+509)=call.bor.508,
  *gep[inbounds](B.global,0+0+510)=call.bor.509,
  *gep[inbounds](B.global,0+0+511)=call.bor.510
)
[2015-05-19 16:33:07,312] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:07,316] DEBUG   Query: 
(let ((a!1 (ite (and (not (= B.global #x00000001))
                     (not (= B.global #x00000000)))
                |$$__base_free__$$(B.global)|
                B.global))
      (a!2 (ite (and (not (= B.global #x00000001))
                     (not (= B.global #x00000000)))
                (= |$$__base_free__$$(B.global)| #x00000001)
                (= B.global #x00000001)))
      (a!3 (ite (and (not (= B.global #x00000001))
                     (not (= B.global #x00000000)))
                (= |$$__base_free__$$(B.global)| #x00000000)
                (= B.global #x00000000)))
      (a!6 (ite (and (not (= B.global #x00000001))
                     (not (= B.global #x00000000)))
                ((_ extract 9 0) |$$__base_free__$$(B.global)|)
                ((_ extract 9 0) B.global))))
(let ((a!4 (bvule (ite a!2 #x00000200 (ite a!3 #xffffffff #x00000000))
                  (bvadd B.global (bvmul #xffffffff a!1))))
      (a!5 ((_ extract 31 10)
             (bvadd (ite a!2 #x00000200 (ite a!3 #xffffffff #x00000000))
                    (bvmul #xffffffff B.global)
                    a!1)))
      (a!7 (bvule (bvadd (ite a!2
                              #b1000000000
                              (ite a!3 #b1111111111 #b0000000000))
                         (bvmul #b1111111111 ((_ extract 9 0) B.global))
                         a!6)
                  #b1000000000)))
  (and (ite (= a!1 B.global)
            (or a!2 (not a!3))
            (or a!4 (= a!5 #b0000000000000000000000)))
       (ite (= a!1 B.global) (or a!2 (not a!3)) (or a!4 a!7))))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(B.global)| #x00000001))
                     (not (= |$$__base_free__$$(B.global)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(B.global)|))
                                  (bvule forall_bound_0 B.global)))))
               (or a!1
                   (and (not (= forall_bound_0 #x00000001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(B.global)| B.global)
       a!1
       a!2
       (not (or (= B.global #xfffffdff) (= B.global #xfffffe00)))))
  State: 
(= B.global #x00000001) assuming true
[2015-05-19 16:33:07,320] DEBUG Acquired result: sat
With:
(declare-fun |$$__base_free__$$(B.global)| () (_ BitVec 32))
  #x00000001
(declare-fun $CHECK$ () Bool)
  true
(declare-fun B.global () (_ BitVec 32))
  #x00000001
[2015-05-19 16:33:07,320] DEBUG CEX: (
  
)
[2015-05-19 16:33:28,018] DEBUG Checking query: 
(
  arrayidx!=<nullptr>
)
in: 
(
  %0=alloca(100,(100 * 1)),
  arrayidx=gep(%0,0+0+101),
  *arrayidx=0
)
[2015-05-19 16:33:28,022] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:28,024] DEBUG   Query: 
(= arrayidx #x00000000) assuming true
  State: 
(and (= %0 #x00010001) (= arrayidx (bvadd #x00000065 %0))) assuming (not (or (= %0 #xffffff9a) (= %0 #xffffff9b)))
[2015-05-19 16:33:28,025] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:33:28,028] DEBUG Checking query: 
(
  (bound(%0) +> (arrayidx - %0))=true
)
in: 
(
  %0=alloca(100,(100 * 1)),
  arrayidx=gep(%0,0+0+101)
)
[2015-05-19 16:33:28,032] DEBUG Checking state for sanity... OK
[2015-05-19 16:33:28,035] DEBUG   Query: 
(let ((a!1 (ite (and (not (= %0 #x00010001)) (not (= %0 #x00000000)))
                |$$__base_free__$$(%0)|
                %0))
      (a!2 (ite (and (not (= %0 #x00010001)) (not (= %0 #x00000000)))
                (= |$$__base_free__$$(%0)| #x00010001)
                (= %0 #x00010001)))
      (a!3 (ite (and (not (= %0 #x00010001)) (not (= %0 #x00000000)))
                (= |$$__base_free__$$(%0)| #x00000000)
                (= %0 #x00000000))))
(let ((a!4 (ite (bvule (ite a!2 #x00000064 (ite a!3 #xffffffff #x00000000))
                       (bvadd %0 (bvmul #xffffffff a!1)))
                #x00000000
                (bvadd (ite a!2 #x00000064 (ite a!3 #xffffffff #x00000000))
                       (bvmul #xffffffff %0)
                       a!1))))
  (bvule (ite (= a!1 %0)
              (ite a!2 #x00000064 (ite a!3 #xffffffff #x00000000))
              a!4)
         (bvadd arrayidx (bvmul #xffffffff %0))))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(%0)| #x00010001))
                     (not (= |$$__base_free__$$(%0)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(%0)|))
                                  (bvule forall_bound_0 %0)))))
               (or a!1
                   (and (not (= forall_bound_0 #x00010001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(%0)| %0) a!1 a!2))
  State: 
(and (= %0 #x00010001) (= arrayidx (bvadd #x00000065 %0))) assuming (not (or (= %0 #xffffff9a) (= %0 #xffffff9b)))
[2015-05-19 16:33:28,039] DEBUG Acquired result: sat
With:
(declare-fun |$$__base_free__$$(%0)| () (_ BitVec 32))
  #x00010001
(declare-fun $CHECK$ () Bool)
  true
(declare-fun %0 () (_ BitVec 32))
  #x00010001
(declare-fun arrayidx () (_ BitVec 32))
  #x00010066
[2015-05-19 16:33:28,039] DEBUG CEX: (
  
)
[2015-05-19 16:34:40,237] DEBUG Checking query: 
(
  arrayidx!=<nullptr>
)
in: 
(
  %0=alloca(100,(100 * 1)),
  arrayidx=gep(%0,0+0+101),
  *arrayidx=0
)
[2015-05-19 16:34:40,241] DEBUG Checking state for sanity... OK
[2015-05-19 16:34:40,242] DEBUG   Query: 
(= arrayidx #x00000000) assuming true
  State: 
(and (= %0 #x00010001) (= arrayidx (bvadd #x00000065 %0))) assuming (not (or (= %0 #xffffff9a) (= %0 #xffffff9b)))
[2015-05-19 16:34:40,243] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 16:34:40,246] DEBUG Checking query: 
(
  (bound(%0) +> (arrayidx - %0))=true
)
in: 
(
  %0=alloca(100,(100 * 1)),
  arrayidx=gep(%0,0+0+101)
)
[2015-05-19 16:34:40,250] DEBUG Checking state for sanity... OK
[2015-05-19 16:34:40,254] DEBUG   Query: 
(let ((a!1 (ite (and (not (= %0 #x00010001)) (not (= %0 #x00000000)))
                |$$__base_free__$$(%0)|
                %0))
      (a!2 (ite (and (not (= %0 #x00010001)) (not (= %0 #x00000000)))
                (= |$$__base_free__$$(%0)| #x00010001)
                (= %0 #x00010001)))
      (a!3 (ite (and (not (= %0 #x00010001)) (not (= %0 #x00000000)))
                (= |$$__base_free__$$(%0)| #x00000000)
                (= %0 #x00000000))))
(let ((a!4 (ite (bvule (ite a!2 #x00000064 (ite a!3 #xffffffff #x00000000))
                       (bvadd %0 (bvmul #xffffffff a!1)))
                #x00000000
                (bvadd (ite a!2 #x00000064 (ite a!3 #xffffffff #x00000000))
                       (bvmul #xffffffff %0)
                       a!1))))
  (bvule (ite (= a!1 %0)
              (ite a!2 #x00000064 (ite a!3 #xffffffff #x00000000))
              a!4)
         (bvadd arrayidx (bvmul #xffffffff %0))))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(%0)| #x00010001))
                     (not (= |$$__base_free__$$(%0)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(%0)|))
                                  (bvule forall_bound_0 %0)))))
               (or a!1
                   (and (not (= forall_bound_0 #x00010001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(%0)| %0) a!1 a!2))
  State: 
(and (= %0 #x00010001) (= arrayidx (bvadd #x00000065 %0))) assuming (not (or (= %0 #xffffff9a) (= %0 #xffffff9b)))
[2015-05-19 16:34:40,258] DEBUG Acquired result: sat
With:
(declare-fun |$$__base_free__$$(%0)| () (_ BitVec 32))
  #x00010001
(declare-fun $CHECK$ () Bool)
  true
(declare-fun %0 () (_ BitVec 32))
  #x00010001
(declare-fun arrayidx () (_ BitVec 32))
  #x00010066
[2015-05-19 16:34:40,258] DEBUG CEX: (
  
)
[2015-05-19 17:17:39,584] DEBUG Checking query: 
(
  arrayidx!=<nullptr>
)
in: 
(
  %0=alloca(100,(100 * 1)),
  arrayidx=gep(%0,0+0+101),
  *arrayidx=0
)
[2015-05-19 17:17:39,589] DEBUG Checking state for sanity... OK
[2015-05-19 17:17:39,590] DEBUG   Query: 
(= arrayidx #x00000000) assuming true
  State: 
(and (= %0 #x00010001) (= arrayidx (bvadd #x00000065 %0))) assuming (not (or (= %0 #xffffff9a) (= %0 #xffffff9b)))
[2015-05-19 17:17:39,592] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 17:17:39,596] DEBUG Checking query: 
(
  (bound(%0) +> (arrayidx - %0))=true
)
in: 
(
  %0=alloca(100,(100 * 1)),
  arrayidx=gep(%0,0+0+101)
)
[2015-05-19 17:17:39,602] DEBUG Checking state for sanity... OK
[2015-05-19 17:17:39,607] DEBUG   Query: 
(let ((a!1 (ite (and (not (= %0 #x00010001)) (not (= %0 #x00000000)))
                |$$__base_free__$$(%0)|
                %0))
      (a!2 (ite (and (not (= %0 #x00010001)) (not (= %0 #x00000000)))
                (= |$$__base_free__$$(%0)| #x00010001)
                (= %0 #x00010001)))
      (a!3 (ite (and (not (= %0 #x00010001)) (not (= %0 #x00000000)))
                (= |$$__base_free__$$(%0)| #x00000000)
                (= %0 #x00000000))))
(let ((a!4 (ite (bvule (ite a!2 #x00000064 (ite a!3 #xffffffff #x00000000))
                       (bvadd %0 (bvmul #xffffffff a!1)))
                #x00000000
                (bvadd (ite a!2 #x00000064 (ite a!3 #xffffffff #x00000000))
                       (bvmul #xffffffff %0)
                       a!1))))
  (bvule (ite (= a!1 %0)
              (ite a!2 #x00000064 (ite a!3 #xffffffff #x00000000))
              a!4)
         (bvadd arrayidx (bvmul #xffffffff %0))))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(%0)| #x00010001))
                     (not (= |$$__base_free__$$(%0)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(%0)|))
                                  (bvule forall_bound_0 %0)))))
               (or a!1
                   (and (not (= forall_bound_0 #x00010001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(%0)| %0) a!1 a!2))
  State: 
(and (= %0 #x00010001) (= arrayidx (bvadd #x00000065 %0))) assuming (not (or (= %0 #xffffff9a) (= %0 #xffffff9b)))
[2015-05-19 17:17:39,612] DEBUG Acquired result: sat
With:
(declare-fun |$$__base_free__$$(%0)| () (_ BitVec 32))
  #x00010001
(declare-fun $CHECK$ () Bool)
  true
(declare-fun %0 () (_ BitVec 32))
  #x00010001
(declare-fun arrayidx () (_ BitVec 32))
  #x00010066
[2015-05-19 17:17:39,612] DEBUG CEX: (
  
)
[2015-05-19 17:27:53,691] DEBUG Checking query: 
(
  arrayidx!=<nullptr>
)
in: 
(
  %0=alloca(100,(100 * 1)),
  arrayidx=gep(%0,0+0+101),
  *arrayidx=0
)
[2015-05-19 17:27:53,695] DEBUG Checking state for sanity... OK
[2015-05-19 17:27:53,696] DEBUG   Query: 
(= arrayidx #x00000000) assuming true
  State: 
(and (= %0 #x00010001) (= arrayidx (bvadd #x00000065 %0))) assuming (not (or (= %0 #xffffff9a) (= %0 #xffffff9b)))
[2015-05-19 17:27:53,697] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-19 17:27:53,701] DEBUG Checking query: 
(
  (bound(%0) +> (arrayidx - %0))=true
)
in: 
(
  %0=alloca(100,(100 * 1)),
  arrayidx=gep(%0,0+0+101)
)
[2015-05-19 17:27:53,710] DEBUG Checking state for sanity... OK
[2015-05-19 17:27:53,713] DEBUG   Query: 
(let ((a!1 (ite (and (not (= %0 #x00010001)) (not (= %0 #x00000000)))
                |$$__base_free__$$(%0)|
                %0))
      (a!2 (ite (and (not (= %0 #x00010001)) (not (= %0 #x00000000)))
                (= |$$__base_free__$$(%0)| #x00010001)
                (= %0 #x00010001)))
      (a!3 (ite (and (not (= %0 #x00010001)) (not (= %0 #x00000000)))
                (= |$$__base_free__$$(%0)| #x00000000)
                (= %0 #x00000000))))
(let ((a!4 (ite (bvule (ite a!2 #x00000064 (ite a!3 #xffffffff #x00000000))
                       (bvadd %0 (bvmul #xffffffff a!1)))
                #x00000000
                (bvadd (ite a!2 #x00000064 (ite a!3 #xffffffff #x00000000))
                       (bvmul #xffffffff %0)
                       a!1))))
  (bvule (ite (= a!1 %0)
              (ite a!2 #x00000064 (ite a!3 #xffffffff #x00000000))
              a!4)
         (bvadd arrayidx (bvmul #xffffffff %0))))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(%0)| #x00010001))
                     (not (= |$$__base_free__$$(%0)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(%0)|))
                                  (bvule forall_bound_0 %0)))))
               (or a!1
                   (and (not (= forall_bound_0 #x00010001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(%0)| %0) a!1 a!2))
  State: 
(and (= %0 #x00010001) (= arrayidx (bvadd #x00000065 %0))) assuming (not (or (= %0 #xffffff9a) (= %0 #xffffff9b)))
[2015-05-19 17:27:53,718] DEBUG Acquired result: sat
With:
(declare-fun |$$__base_free__$$(%0)| () (_ BitVec 32))
  #x00010001
(declare-fun $CHECK$ () Bool)
  true
(declare-fun %0 () (_ BitVec 32))
  #x00010001
(declare-fun arrayidx () (_ BitVec 32))
  #x00010066
[2015-05-19 17:27:53,718] DEBUG CEX: (
  
)
[2015-05-20 16:02:02,273] DEBUG Checking query: 
(
  arrayidx!=<nullptr>
)
in: 
(
  %0=alloca(100,(100 * 1)),
  arrayidx=gep(%0,0+0+101),
  *arrayidx=0
)
[2015-05-20 16:02:02,566] DEBUG Checking state for sanity... OK
[2015-05-20 16:02:02,574] DEBUG   Query: 
(= arrayidx #x00000000) assuming true
  State: 
(and (= %0 #x00010001) (= arrayidx (bvadd #x00000065 %0))) assuming (not (or (= %0 #xffffff9a) (= %0 #xffffff9b)))
[2015-05-20 16:02:02,620] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-20 16:02:02,623] DEBUG Checking query: 
(
  (bound(%0) +> (arrayidx - %0))=true
)
in: 
(
  %0=alloca(100,(100 * 1)),
  arrayidx=gep(%0,0+0+101)
)
[2015-05-20 16:02:02,648] DEBUG Checking state for sanity... OK
[2015-05-20 16:02:02,653] DEBUG   Query: 
(let ((a!1 (ite (and (not (= %0 #x00010001)) (not (= %0 #x00000000)))
                |$$__base_free__$$(%0)|
                %0))
      (a!2 (ite (and (not (= %0 #x00010001)) (not (= %0 #x00000000)))
                (= |$$__base_free__$$(%0)| #x00010001)
                (= %0 #x00010001)))
      (a!3 (ite (and (not (= %0 #x00010001)) (not (= %0 #x00000000)))
                (= |$$__base_free__$$(%0)| #x00000000)
                (= %0 #x00000000))))
(let ((a!4 (ite (bvule (ite a!2 #x00000064 (ite a!3 #xffffffff #x00000000))
                       (bvadd %0 (bvmul #xffffffff a!1)))
                #x00000000
                (bvadd (ite a!2 #x00000064 (ite a!3 #xffffffff #x00000000))
                       (bvmul #xffffffff %0)
                       a!1))))
  (bvule (ite (= a!1 %0)
              (ite a!2 #x00000064 (ite a!3 #xffffffff #x00000000))
              a!4)
         (bvadd arrayidx (bvmul #xffffffff %0))))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(%0)| #x00010001))
                     (not (= |$$__base_free__$$(%0)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(%0)|))
                                  (bvule forall_bound_0 %0)))))
               (or a!1
                   (and (not (= forall_bound_0 #x00010001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(%0)| %0) a!1 a!2))
  State: 
(and (= %0 #x00010001) (= arrayidx (bvadd #x00000065 %0))) assuming (not (or (= %0 #xffffff9a) (= %0 #xffffff9b)))
[2015-05-20 16:02:02,852] DEBUG Acquired result: sat
With:
(declare-fun |$$__base_free__$$(%0)| () (_ BitVec 32))
  #x00010001
(declare-fun $CHECK$ () Bool)
  true
(declare-fun %0 () (_ BitVec 32))
  #x00010001
(declare-fun arrayidx () (_ BitVec 32))
  #x00010066
[2015-05-20 16:02:02,852] DEBUG CEX: (
  
)
[2015-05-20 17:11:16,769] DEBUG Checking query: 
(
  arrayidx!=<nullptr>
)
in: 
(
  %0=alloca(100,(100 * 1)),
  arrayidx=gep(%0,0+0+101),
  *arrayidx=0
)
[2015-05-20 17:11:16,775] DEBUG Checking state for sanity... OK
[2015-05-20 17:11:16,777] DEBUG   Query: 
(= arrayidx #x00000000) assuming true
  State: 
(and (= %0 #x00010001) (= arrayidx (bvadd #x00000065 %0))) assuming (not (or (= %0 #xffffff9a) (= %0 #xffffff9b)))
[2015-05-20 17:11:16,778] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-20 17:11:16,782] DEBUG Checking query: 
(
  (bound(%0) +> (arrayidx - %0))=true
)
in: 
(
  %0=alloca(100,(100 * 1)),
  arrayidx=gep(%0,0+0+101)
)
[2015-05-20 17:11:16,788] DEBUG Checking state for sanity... OK
[2015-05-20 17:11:16,792] DEBUG   Query: 
(let ((a!1 (ite (and (not (= %0 #x00010001)) (not (= %0 #x00000000)))
                |$$__base_free__$$(%0)|
                %0))
      (a!2 (ite (and (not (= %0 #x00010001)) (not (= %0 #x00000000)))
                (= |$$__base_free__$$(%0)| #x00010001)
                (= %0 #x00010001)))
      (a!3 (ite (and (not (= %0 #x00010001)) (not (= %0 #x00000000)))
                (= |$$__base_free__$$(%0)| #x00000000)
                (= %0 #x00000000))))
(let ((a!4 (ite (bvule (ite a!2 #x00000064 (ite a!3 #xffffffff #x00000000))
                       (bvadd %0 (bvmul #xffffffff a!1)))
                #x00000000
                (bvadd (ite a!2 #x00000064 (ite a!3 #xffffffff #x00000000))
                       (bvmul #xffffffff %0)
                       a!1))))
  (bvule (ite (= a!1 %0)
              (ite a!2 #x00000064 (ite a!3 #xffffffff #x00000000))
              a!4)
         (bvadd arrayidx (bvmul #xffffffff %0))))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(%0)| #x00010001))
                     (not (= |$$__base_free__$$(%0)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(%0)|))
                                  (bvule forall_bound_0 %0)))))
               (or a!1
                   (and (not (= forall_bound_0 #x00010001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(%0)| %0) a!1 a!2))
  State: 
(and (= %0 #x00010001) (= arrayidx (bvadd #x00000065 %0))) assuming (not (or (= %0 #xffffff9a) (= %0 #xffffff9b)))
[2015-05-20 17:11:16,796] DEBUG Acquired result: sat
With:
(declare-fun |$$__base_free__$$(%0)| () (_ BitVec 32))
  #x00010001
(declare-fun $CHECK$ () Bool)
  true
(declare-fun %0 () (_ BitVec 32))
  #x00010001
(declare-fun arrayidx () (_ BitVec 32))
  #x00010066
[2015-05-20 17:11:16,796] DEBUG CEX: (
  
)
[2015-05-20 17:40:39,137] DEBUG Checking query: 
(
  arrayidx!=<nullptr>
)
in: 
(
  %0=alloca(100,(100 * 1)),
  arrayidx=gep(%0,0+0+101),
  *arrayidx=0
)
[2015-05-20 17:40:39,144] DEBUG Checking state for sanity... OK
[2015-05-20 17:40:39,145] DEBUG   Query: 
(= arrayidx #x00000000) assuming true
  State: 
(and (= %0 #x00010001) (= arrayidx (bvadd #x00000065 %0))) assuming (not (or (= %0 #xffffff9a) (= %0 #xffffff9b)))
[2015-05-20 17:40:39,146] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-20 17:40:39,149] DEBUG Checking query: 
(
  (bound(%0) +> (arrayidx - %0))=true
)
in: 
(
  %0=alloca(100,(100 * 1)),
  arrayidx=gep(%0,0+0+101)
)
[2015-05-20 17:40:39,154] DEBUG Checking state for sanity... OK
[2015-05-20 17:40:39,157] DEBUG   Query: 
(let ((a!1 (ite (and (not (= %0 #x00010001)) (not (= %0 #x00000000)))
                |$$__base_free__$$(%0)|
                %0))
      (a!2 (ite (and (not (= %0 #x00010001)) (not (= %0 #x00000000)))
                (= |$$__base_free__$$(%0)| #x00010001)
                (= %0 #x00010001)))
      (a!3 (ite (and (not (= %0 #x00010001)) (not (= %0 #x00000000)))
                (= |$$__base_free__$$(%0)| #x00000000)
                (= %0 #x00000000))))
(let ((a!4 (ite (bvule (ite a!2 #x00000064 (ite a!3 #xffffffff #x00000000))
                       (bvadd %0 (bvmul #xffffffff a!1)))
                #x00000000
                (bvadd (ite a!2 #x00000064 (ite a!3 #xffffffff #x00000000))
                       (bvmul #xffffffff %0)
                       a!1))))
  (bvule (ite (= a!1 %0)
              (ite a!2 #x00000064 (ite a!3 #xffffffff #x00000000))
              a!4)
         (bvadd arrayidx (bvmul #xffffffff %0))))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(%0)| #x00010001))
                     (not (= |$$__base_free__$$(%0)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(%0)|))
                                  (bvule forall_bound_0 %0)))))
               (or a!1
                   (and (not (= forall_bound_0 #x00010001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(%0)| %0) a!1 a!2))
  State: 
(and (= %0 #x00010001) (= arrayidx (bvadd #x00000065 %0))) assuming (not (or (= %0 #xffffff9a) (= %0 #xffffff9b)))
[2015-05-20 17:40:39,162] DEBUG Acquired result: sat
With:
(declare-fun |$$__base_free__$$(%0)| () (_ BitVec 32))
  #x00010001
(declare-fun $CHECK$ () Bool)
  true
(declare-fun %0 () (_ BitVec 32))
  #x00010001
(declare-fun arrayidx () (_ BitVec 32))
  #x00010066
[2015-05-20 17:40:39,162] DEBUG CEX: (
  
)
[2015-05-20 17:41:47,440] DEBUG Checking query: 
(
  arrayidx!=<nullptr>
)
in: 
(
  %0=alloca(100,(100 * 1)),
  arrayidx=gep(%0,0+0+101),
  *arrayidx=0
)
[2015-05-20 17:41:47,443] DEBUG Checking state for sanity... OK
[2015-05-20 17:41:47,444] DEBUG   Query: 
(= arrayidx #x00000000) assuming true
  State: 
(and (= %0 #x00010001) (= arrayidx (bvadd #x00000065 %0))) assuming (not (or (= %0 #xffffff9a) (= %0 #xffffff9b)))
[2015-05-20 17:41:47,445] DEBUG Acquired result: unsat
With:
$CHECK$

[2015-05-20 17:41:47,447] DEBUG Checking query: 
(
  (bound(%0) +> (arrayidx - %0))=true
)
in: 
(
  %0=alloca(100,(100 * 1)),
  arrayidx=gep(%0,0+0+101)
)
[2015-05-20 17:41:47,456] DEBUG Checking state for sanity... OK
[2015-05-20 17:41:47,461] DEBUG   Query: 
(let ((a!1 (ite (and (not (= %0 #x00010001)) (not (= %0 #x00000000)))
                |$$__base_free__$$(%0)|
                %0))
      (a!2 (ite (and (not (= %0 #x00010001)) (not (= %0 #x00000000)))
                (= |$$__base_free__$$(%0)| #x00010001)
                (= %0 #x00010001)))
      (a!3 (ite (and (not (= %0 #x00010001)) (not (= %0 #x00000000)))
                (= |$$__base_free__$$(%0)| #x00000000)
                (= %0 #x00000000))))
(let ((a!4 (ite (bvule (ite a!2 #x00000064 (ite a!3 #xffffffff #x00000000))
                       (bvadd %0 (bvmul #xffffffff a!1)))
                #x00000000
                (bvadd (ite a!2 #x00000064 (ite a!3 #xffffffff #x00000000))
                       (bvmul #xffffffff %0)
                       a!1))))
  (bvule (ite (= a!1 %0)
              (ite a!2 #x00000064 (ite a!3 #xffffffff #x00000000))
              a!4)
         (bvadd arrayidx (bvmul #xffffffff %0))))) assuming (let ((a!1 (not (and (not (= |$$__base_free__$$(%0)| #x00010001))
                     (not (= |$$__base_free__$$(%0)| #x00000000)))))
      (a!2 (forall ((forall_bound_0 (_ BitVec 32)))
             (let ((a!1 (not (and (not (bvule forall_bound_0
                                              |$$__base_free__$$(%0)|))
                                  (bvule forall_bound_0 %0)))))
               (or a!1
                   (and (not (= forall_bound_0 #x00010001))
                        (not (= forall_bound_0 #x00000000))))))))
  (and (bvule |$$__base_free__$$(%0)| %0) a!1 a!2))
  State: 
(and (= %0 #x00010001) (= arrayidx (bvadd #x00000065 %0))) assuming (not (or (= %0 #xffffff9a) (= %0 #xffffff9b)))
[2015-05-20 17:41:47,469] DEBUG Acquired result: sat
With:
(declare-fun |$$__base_free__$$(%0)| () (_ BitVec 32))
  #x00010001
(declare-fun $CHECK$ () Bool)
  true
(declare-fun %0 () (_ BitVec 32))
  #x00010001
(declare-fun arrayidx () (_ BitVec 32))
  #x00010066
[2015-05-20 17:41:47,469] DEBUG CEX: (
  
)
